{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","components/home.component.js","components/home2.component.js","components/modifyPassword.component.js","components/profile.component.js","services/search.service.js","components/NoteCard.js","components/board-user.component.js","services/admin-submit-form.js","components/confirm-dialogue.js","components/menu.js","components/board-admin.component.js","components/postSubmitForm.component.js","components/BarChart.js","components/DoughnutChart.js","components/Flippy.js","components/all-answers.component.js","components/allquestions.component.js","components/formCard.js","components/admin-register.component.js","components/protected-routes.component.js","components/LineChart.js","components/LineLabels.js","components/all-students.component.js","components/verify-account.component.js","components/Admin/admin-dashboard.jsx","components/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","email","password","axios","post","then","response","console","log","data","token","localStorage","setItem","JSON","stringify","removeItem","firstname","lastname","password_confirmation","roles","old_password","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vlastname","vfirstname","vpassword","vpasswordConfirmation","Register","handleRegister","onChangeFirstname","onChangeLastname","onChangePasswordConfirmation","successful","register","Home","content","Home2","title","description","textAlign","marginTop","height","width","borderRadius","src","alt","ModifyPassword","useState","oldPw","setOldPw","newPw","setNewPw","confirmNewPw","setConfirmNewPw","setmessage","setsuccessful","userEmail","placeholder","onClick","oldPass","newPass","confirmPass","changePassword","res","catch","errMessage","Profile","currentUser","getCurrentUser","substring","substr","_id","map","index","id","get","answers","NoteCard","trim","note","handleDelete","color","avatar","subHeader","mouseover","Card","elevation","padding","onMouseOver","CardHeader","Avatar","backgroundColor","toUpperCase","action","IconButton","DeleteOutlined","CardContent","Typography","variant","Alert","vsearch","useStyles","makeStyles","theme","field","marginBottom","root","flexDirection","alignItems","margin","spacing","BoardUser","search","setsearch","errorMessage","seterrorMessage","currentQuiz","setcurrentQuiz","radioOptions","setradioOptions","checkedItems","setCheckedItems","allQuizzes","setallQuizzes","displayAllAnswered","setdisplayAllAnswered","validate","setvalidate","useEffect","student_id","quizzes","err","onChangeSearch","checkRadioButton","question_id","label","setradio","answer","checkedArray","x","find_question","find","a","question_answer_id","explanation","handleClose","handleSearch","SearchService","searchQuiz","TextField","fullWidth","quiz","quiz_id","Math","floor","random","padStart","setActiveQuiz","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","severity","questions","indexx","question_title","checked","question_options","options","options_id","option_text","setCheckbox","options_text","timestamp","Date","now","formatedTimestamp","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","quiz_answers","student_answers","time_submitted","created_by","ConfirmDialogue","confirmDialog","Dialog","isOpen","DialogTitle","DialogContent","subTitle","DialogActions","onDiscard","onConfirm","MenuOption","React","anchorEl","setAnchorEl","Boolean","aria-label","aria-controls","aria-haspopup","event","currentTarget","float","Menu","keepMounted","PaperProps","maxHeight","ITEM_HEIGHT","option","MenuItem","selected","onclick","icon","withStyles","background","border","boxShadow","textTransform","Button","MyForm","onChangeQuestion","onClickAddExplanation","delete","explanations","onQuestionChange","indexExplanation","onExplanationChange","onRemoveExplanationClick","onAddExplanationClick","element","onChangeExplanation","size","Tooltip","onClickRemoveExplanation","question","deleteQuiz","paddingTop","autoComplete","createExplanationUI","BoardAdmin","createQuiz","laststate","displayQuizzes","displayCreate","displayQuiz","backToQuizzes","edit","getQuiz","quiz_idd","toggle","allow","setConfirmDialog","subtitle","onconfirm","discard","handleToggle","allowQuiz","success","updateQuiz","updated_questions","i","document","getElementById","expArr","j","alphabet","String","fromCharCode","expId","exp","danger","filter","editQuiz","onClickAddQuestion","onChangeTitle","handleSubmit","undefined","submitted","quizMdp","updateTitle","updateSubTitle","user","menuOptions","fontsize","indexQuestion","prevState","splice","PostForm","submit","handleQuestionChange","onTitleChange","handleTitleChange","handleExplanationChange","handleAddExplanationClick","handleRemoveExplanationClick","onClickDelQuestion","to","pathname","SnackbarContent","position","top","List","ListItem","button","ListItemIcon","ListItemText","primary","Switch","inputProps","readOnly","fontWeight","fontSize","createQuestionUI","PostSubmitForm","BarChart","names","explanationArray","explanationLabels","explanationValues","barData","labels","datasets","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","legend","tooltips","callbacks","item","displayColors","DoughnutChart","answerValues","pieData","FlippyItems","frontSide","handleStudentList","backSide","stats","flipOnHover","flipOnClick","flipDirection","minWidth","marginRight","quiz_title","AllAnswers","allAnswers","setallAnswers","array","setarray","answersArray","setanswersArray","explanationsArray","setexplanationsArray","currentStudent","setcurrentStudent","explanationStats","setexplanationStats","showSpinner","setShowSpinner","allQuestions","setAllQuestions","allExplanations","setAllExplanations","setPieData","setBarData","setPieTitle","setBarTitle","displayAllQuizzes","setdisplayAllQuizzes","displayStudentList","setdisplayStudentList","displayStats","setdisplayStats","actualQuiz","setactualQuiz","Axios","handlePieChartChange","handleBarChartChange","getStats","arrayAns","mergeAllStudentsByIndex","arrayExp","mergeAllExplanation","countAnswers","all","labelsArray","countExplanations","b","d","letter","getExplanationValues","keys","values","forEach","key","getAnswerValues","getLabels","object","Object","class","Flippy","students","student","Container","Grid","container","sm","md","lg","subheader","AllQuestions","setdisplayQuiz","setdisplayQuizzes","details","flex","cover","controls","paddingLeft","paddingBottom","playIcon","FormCard","useTheme","backgroundImage","vusername","AdminRegister","onChangeCheckbox","admin","teacher","noRoleError","mdpTmp","adminRegister","ProtectedRoute","component","isAuthenticated","isAuthorized","includes","LineChart","borderColor","datax","string","LineLabels","integer","AllStudents","allStudents","setallStudents","displayActiveQuiz","setdisplayActiveQuiz","displayEvolution","setdisplayEvolution","displayMain","setdisplayMain","lineArray","setLineArray","displayLineChart","setDisplayLineChart","setActiveStudent","evolution","getAllAns","getLineData","groupArray","dataArray","ListItemAvatar","tempLineArray","attempt","VerifyAccount","params","match","verifyAccount","maxWidth","media","AdminDashboard","useHistory","classes","dashboardArray","path","children","actions","one","two","CardActionArea","gutterBottom","CardActions","newPath","href","routeChange","child","route","list","fullList","TemporaryDrawer","left","bottom","right","toggleDrawer","anchor","clsx","onKeyDown","lists","text","link","textDecoration","Fragment","Drawer","createMuiTheme","palette","main","App","logOut","showAdminBoard","showTeacherBoard","adminTeacher","allUsers","studentAdmin","navList","logout","ThemeProvider","font","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.576601fa.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n// const API_URL = \"http://localhost:5050/api/\";\r\n\r\nclass AuthService {\r\n  login(email, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        email,\r\n        password\r\n      })\r\n      .then(response => {\r\n        console.log(response.data);\r\n\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(firstname, lastname, email, password, password_confirmation) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      firstname, \r\n      lastname, \r\n      email, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  verifyAccount(token) {\r\n    return axios.post(API_URL + \"verifyAccount\", {\r\n      token\r\n    });\r\n  }\r\n\r\n  adminRegister(firstname, lastname, email, roles) {\r\n    return axios\r\n    .post(API_URL + \"signup\", {\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      roles\r\n    });\r\n  }\r\n\r\n  changePassword(email, old_password, password, password_confirmation) {\r\n    return axios\r\n    .post(API_URL + \"changePassword\", {\r\n      email, \r\n      old_password, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.email, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n            \r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email de l'utilisateur</label>\r\n              <Input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Mot de passe</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btnn\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Se connecter</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vlastname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vfirstname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le mot de passe doit contenir entre 6 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst vpasswordConfirmation = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangePasswordConfirmation = this.onChangePasswordConfirmation.bind(this);\r\n\r\n    this.state = {\r\n      lastname: \"\",\r\n      firstname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  // onChangeUsername(e) {\r\n  //   this.setState({\r\n  //     username: e.target.value\r\n  //   });\r\n  // }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePasswordConfirmation(e) {\r\n    this.setState({\r\n      password_confirmation: e.target.value\r\n    });\r\n  }\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.password_confirmation,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n          console.log(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"firstname\">Prenom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"firstname\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangeFirstname}\r\n                    validations={[required, vfirstname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"lastname\">Nom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"lastname\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangeLastname}\r\n                    validations={[required, vlastname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password_confirmation\">Confirmer Mot de passe</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password_confirmation\"\r\n                    value={this.state.password_confirmation}\r\n                    onChange={this.onChangePasswordConfirmation}\r\n                    validations={[required, vpasswordConfirmation]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btnn\">Créer le compte</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // UserService.getPublicContent().then(\r\n    //   response => {\r\n    //     this.setState({\r\n    //       content: response.data.body\r\n    //     });\r\n    //   },\r\n    //   error => {\r\n    //     this.setState({\r\n    //       content:\r\n    //         (error.response && error.response.data) ||\r\n    //         error.message ||\r\n    //         error.toString()\r\n    //     });\r\n    //   }\r\n    // );\r\n    this.setState({\r\n      content: \"Bienvenue dans votre application de Neuroéducation\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      title: \"Bienvenue dans votre application de Neuroéducation\",\r\n      description: \"Cette application permet aux élèves de prendre conscience de leurs stratégies de réussite et des potentielles origines de leurs erreurs\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <header className=\"jumbotron\">\r\n                    <h3>{this.state.title}</h3>\r\n                </header>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h5>{this.state.description}</h5>\r\n                <div style={{textAlign: \"center\", marginTop: \"20px\"}}>\r\n                  <img style={{height: \"500px\", width: \"500px\", borderRadius: \"10px\"}} src=\"/brain-storming.png\" alt=\"students brainstorming\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}","import {useState} from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\n// import CheckButton from \"react-validation/build/button\";\r\n// import React, { Component } from \"react\";\r\n\r\nimport AuthService from '../services/auth.service'\r\n\r\n\r\n\r\n// const currentPassword = \"\"\r\n\r\n\r\n// const required = (value) => {\r\n//     if (!value) {\r\n//         return (\r\n//             <div className=\"alert alert-danger\" role=\"alert\">\r\n//                 Ce champ est obligatoire !\r\n//             </div>\r\n//         );\r\n//     }\r\n// };\r\n\r\n// const vpassword = value => {\r\n//     if (value.length < 6 || value.length > 50) {\r\n//       return (\r\n//         <div className=\"alert alert-danger\" role=\"alert\">\r\n//           Le mot de passe doit contenir entre 6 et 50 charactères.\r\n//         </div>\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const vpasswordConfirmation = value => {\r\n//     if (value !== newPw) {\r\n//       return (\r\n//         <div className=\"alert alert-danger\" role=\"alert\">\r\n//           Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n//         </div>\r\n//       );\r\n//     }\r\n//   };\r\n\r\nconst ModifyPassword = (props) =>{\r\n    const [oldPw, setOldPw] = useState('')\r\n    const [newPw, setNewPw] = useState('')\r\n    const [confirmNewPw, setConfirmNewPw] = useState('')\r\n    const [message, setmessage] = useState('');\r\n    const [successful, setsuccessful] = useState(false);\r\n    const [userEmail] = useState(props.email)\r\n\r\n    const ApplyModifications =(email,oldPass, newPass, confirmPass) => {\r\n        console.log(email)\r\n        setmessage('');\r\n        setsuccessful(false);\r\n        AuthService.changePassword(email, oldPass, newPass, confirmPass)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            setmessage(\"Mot de passe modifié avec succès\");\r\n            setsuccessful(true);\r\n        })\r\n        .catch((error) =>{\r\n            const errMessage =\r\n              (error.response.data.message[0].password || (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message)) ||\r\n              error.message ||\r\n              error.toString();\r\n              console.log(errMessage);\r\n            setmessage(errMessage);\r\n            setsuccessful(false);\r\n        })\r\n    }\r\n\r\n\r\n\r\nreturn (\r\n    <div className=\"card card-container\">\r\n        \r\n        <strong>Changement de mot de passe</strong>\r\n        <Form>\r\n        <label name=\"oldPw\">Ancien mot de passe</label>\r\n        <Input name=\"oldPw\" value={oldPw} placeholder=\"******\" onChange={(e) => setOldPw(e.target.value)} />\r\n        <label name=\"newPw\">Nouveau mot de passe</label>\r\n        <Input name=\"newPw\" value={newPw} placeholder=\"******\" onChange={(e) => setNewPw(e.target.value)} />\r\n        <label name=\"confirmNewPw\">Confirmer le nouveau mot de passe</label>\r\n        <Input name=\"confirmNewPw\" value={confirmNewPw} placeholder=\"******\" onChange={(e) => setConfirmNewPw(e.target.value)} />\r\n        {/* <CheckButton\r\n            style={{ display: \"none\" }}\r\n            ref={c => {\r\n            Component.checkBtn = c;\r\n            }}\r\n        /> */}\r\n        </Form>\r\n        <button className=\"btnn\" onClick={() => ApplyModifications(userEmail,oldPw,newPw,confirmNewPw)}>Confirmer</button>\r\n\r\n        {message && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\r\n                successful\r\n                  ? \"alert alert-success\"\r\n                  : \"alert alert-danger\"\r\n              }\r\n              role=\"alert\"\r\n            >\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n    </div>\r\n);\r\n}\r\n\r\n\r\n\r\nexport default ModifyPassword;\r\n","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport ModifyPassword from \"./modifyPassword.component\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser()\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n          Profile : <strong>{currentUser.message.firstname}{' '}{currentUser.message.lastname}</strong> \r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.token.substring(0, 20)} ...{\" \"}\r\n          {currentUser.token.substr(currentUser.token.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.message._id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.message.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.message.roles &&\r\n            currentUser.message.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n        <ModifyPassword email={currentUser.message.email}/>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n// const API_URL = \"http://localhost:5050/api/${id}\";\r\n\r\n\r\nclass SearchService {\r\n\r\n  searchQuiz(id) {\r\n    return axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${id}`, {\r\n      \r\n    });\r\n  }\r\n\r\n  submitAnswers(answers){\r\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n        answers\r\n      })\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new SearchService();\r\n","import Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Avatar, IconButton, makeStyles, Typography } from '@material-ui/core';\nimport { DeleteOutlined } from '@material-ui/icons';\nimport { blue, green, pink, yellow } from '@material-ui/core/colors';\n\n// const useStyles = makeStyles({\n//     // test: {\n//     //     border: (note) => {\n//     //         if(note.category === 'work'){\n//     //             return '1px solid red'\n//     //         }\n//     //     }\n//     // }\n//     avatar: {\n//         backgroundColor: (note) => {\n//             switch(note.category){\n//                 case 'work':\n//                     return yellow[700] //here, we are returning a color, like 'red' or '#f3f3f3', not a material ui color object like we did in App.js, so we use the square brackets[] to give the kind of shade we want. This will return a particular kind of color and not the entire material ui color component(like in App.js)\n//                     break\n//                 case 'money':\n//                     return green[500]\n//                     break\n//                 case 'todos':\n//                     return pink[500]\n//                     break\n//                 default:\n//                     return blue[500]\n//             }\n//         }\n//     }\n// })\n\n\n\nconst NoteCard = ({ note, handleDelete,color, avatar, subHeader, content, mouseover }) => {\n    // const classes = useStyles(note) //to have dynamic styles based on a certain value, you can pass that value as a parameter to the useStyles() hook.\n      //GENERATE RANDON COLORS\n//   const generateColors = () => {\n//     const randomColor = '#'+Math.floor(Math.random()*16777215).toString(16).padStart(6, '0')\n//     return randomColor;\n\n//   }\n    let trim;\n    if(note.length<10) {\n        trim = note.substring(0, 10)\n    }\n    else if(note.length===11 || note.length===12){\n        trim = note.substring(0, 12)\n    }\n    else{\n        trim = note.substring(0, 10)+\"...\"\n    }\n\n    return ( \n        <div>\n           <Card elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}} onMouseOver={mouseover ? (mouseover) : (\"\")} >\n               <CardHeader\n                    avatar={ avatar === \"no avatar\" ? (\"\") :\n                        (<Avatar  style={{backgroundColor: color}}>\n                            {note[0].toUpperCase()}\n                        </Avatar>)\n                }\n                    action={ handleDelete===\"no delete\" ? (\"\") :\n                        (<IconButton style={{color: \"#4257b2\"}}>\n                            <DeleteOutlined />\n                        </IconButton>)\n                    }\n                    title={trim}\n                    // subheader={note}\n               />\n               <CardContent>\n                   <Typography variant=\"body2\" color=\"textSecondary\">\n                       {content ? (content) :((note.length > 10) ? note.substring(10) : note)}\n                   </Typography>\n               </CardContent>\n           </Card>\n        </div>\n     );\n}\n \nexport default NoteCard;","import React from \"react\";\r\nimport SearchService from \"../services/search.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { FormControlLabel, makeStyles } from '@material-ui/core';\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport NoteCard from \"./NoteCard\";\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vsearch = value => {\r\n  if (value.length < 6) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 6 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) =>({ //makeStyles returns to us a hook, the hook subsequently gives us the object. NB: react hooks must begin with the word 'use'\r\n  field: {\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n      display: 'block'\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst BoardUser = () => {\r\n  const [search, setsearch] = useState('');\r\n  const [successful, setsuccessful] = useState(false);\r\n  const [message, setmessage] = useState('');\r\n  const [errorMessage, seterrorMessage] = useState('');\r\n  // const [errors, seterrors] = useState([])\r\n  const [currentQuiz, setcurrentQuiz] = useState(null);\r\n  const [radioOptions, setradioOptions] = useState({})\r\n  const [checkedItems, setCheckedItems] = useState([]); \r\n  const [currentUser] = useState(AuthService.getCurrentUser()) ;\r\n  const [allQuizzes, setallQuizzes] = useState([]);\r\n  const [displayAllAnswered, setdisplayAllAnswered] = useState(false);\r\n  const [validate, setvalidate] = useState(false)\r\n  const classes = useStyles();\r\n\r\n\r\n  // LOAD ALL QUIZZES ANSWERED BY CURRENT STUDENT FROM DATABASE \r\n  //ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n  useEffect(() => {\r\n    const student_id = currentUser.message.email;\r\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\r\n      console.log(response.data.quizzes);\r\n      setallQuizzes(response.data.quizzes) \r\n    })\r\n    .catch(function (err) {\r\n        seterrorMessage(err.response);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  // SET SELECTED(CLICKED) QUIZ\r\n  const setActiveQuiz = (quiz, index) => {\r\n    console.log(quiz)\r\n    // setcurrentQuiz(quiz);\r\n    // setcurrentIndex(index)\r\n  };\r\n\r\n  const onChangeSearch = (e) =>{\r\n    setsearch(e.target.value)\r\n  }\r\n\r\n  // RETURN CHECKED VALUE(true or false)\r\n  const checkRadioButton = (question_id, label) => {\r\n      if (!radioOptions[question_id]) {\r\n          return false;\r\n      }\r\n      return radioOptions[question_id] === label;\r\n  }\r\n\r\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n    const setradio = (id , answer) => {\r\n      let checkedArray = checkedItems.map(x => {return {...x}})\r\n      const find_question = checkedArray.find(a => a.question_answer_id === id);\r\n      console.log(find_question)\r\n      if(find_question) {\r\n          checkedArray.find(a => a.question_answer_id === id).answer = answer;\r\n          setradioOptions((state) => {\r\n              console.log(state);\r\n              return {\r\n                  ...state,\r\n                  [id] : answer\r\n              }\r\n          });\r\n          setCheckedItems(checkedArray);\r\n      }\r\n      else{\r\n      setradioOptions((state) => {\r\n          console.log(state);\r\n          return {\r\n              ...state,\r\n              [id] : answer\r\n          }\r\n      });\r\n\r\n      setCheckedItems([\r\n          ...checkedItems,\r\n           {\r\n              question_answer_id : id,\r\n              answer: answer,\r\n              explanation: 'no explanation'\r\n          }\r\n      ]);}\r\n  }\r\n\r\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n      let checkedArray = checkedItems.map(x => {return {...x}})\r\n      const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n      console.log(find_question)\r\n      if(find_question) {\r\n          checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n          setCheckedItems(checkedArray);\r\n      }\r\n      \r\n  }\r\n\r\n  // SUBMIT ANSWERS TO THE BACKEND\r\n  const submitAnswers = () =>{\r\n    // setmessage(\"\");\r\n    // setsuccessful(false);\r\n    // setdisplayAllAnswered(false);\r\n    const timestamp = Date.now(); // This would be the timestamp you want to format\r\n    const formatedTimestamp = new Intl.DateTimeFormat('en-US', {year: 'numeric',\r\n                              month: '2-digit',day: '2-digit', hour: '2-digit', \r\n                              minute: '2-digit', second: '2-digit'}).format(timestamp);\r\n    console.log(new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',\r\n                day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'})\r\n                .format(timestamp));\r\n    const answers = {\r\n        quiz_id : currentQuiz.quiz_id,\r\n        quiz_answers : {\r\n            student_id : currentUser.message.email,\r\n            student_answers : checkedItems,\r\n            time_submitted : formatedTimestamp,\r\n        }\r\n    }\r\n\r\n\r\n    if((currentQuiz.questions).length !== (answers.quiz_answers.student_answers).length){\r\n      // setmessage(null);\r\n      // setsuccessful(null);\r\n      // setdisplayAllAnswered(false);\r\n      console.log((currentQuiz.questions).length);\r\n      console.log((answers.quiz_answers.student_answers).length);\r\n      setvalidate(true);\r\n      // setmessage('Please answer all quizzes');\r\n              // setsuccessful(false);\r\n              return setvalidate(true);\r\n    }\r\n\r\n    console.log(\"Radio Answer: \", radioOptions);\r\n    console.log(\"CheckedItems: \", checkedItems);\r\n    console.log(\"Final: \", answers);\r\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n        answers\r\n      }).then((res) => {\r\n          console.log(res);\r\n          if(res){\r\n              //   window.location.reload(false);\r\n              setcurrentQuiz(null);\r\n              setCheckedItems([]);\r\n              setradioOptions({});\r\n              setallQuizzes([...allQuizzes, answers])\r\n              setmessage('Answers Submitted');\r\n              setsuccessful(true);\r\n              setdisplayAllAnswered(true);\r\n              \r\n          }\r\n      }).catch(err => {\r\n          setcurrentQuiz(null)  \r\n          setsuccessful(false);\r\n          console.log(err.response.data.message|| err.response.data.message[0].error);   \r\n          setmessage(err.response.data.message|| err.response.data.message[0].error);\r\n                 \r\n      });\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setvalidate(false)\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    setmessage(\"\");\r\n    setsuccessful(false);\r\n    setdisplayAllAnswered(false);\r\n\r\n    // this.form.validateAll();\r\n\r\n    {SearchService.searchQuiz(\r\n      search,\r\n    ).then(\r\n      response => {\r\n        console.log(response.data);\r\n        setsuccessful(true);\r\n        setcurrentQuiz(response.data);\r\n      })\r\n      .catch(\r\n      error => {\r\n        console.log(error.response);\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) \r\n          || error.message || error.toString();\r\n\r\n        setmessage(resMessage);\r\n        setsuccessful(false);\r\n      }\r\n    );}\r\n    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <div >\r\n      <div >\r\n        {errorMessage && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\"alert alert-danger\"}\r\n              role=\"alert\"\r\n            >\r\n              {errorMessage}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {(!successful || displayAllAnswered)  && (\r\n          <div>\r\n            <div style={{\"margin-top\" :\"50px\"}}>\r\n              {message && (\r\n                <div className=\"form-group\">\r\n                  <div\r\n                    className={\r\n                      successful\r\n                        ? \"alert alert-success\"\r\n                        : \"alert alert-danger\"\r\n                    }\r\n                    role=\"alert\"\r\n                  >\r\n                    {message}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <form id =\"form\" >\r\n                <TextField\r\n                    onChange={onChangeSearch}\r\n                    id=\"commonSearchTerm\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required //just adds the asterix\r\n                />\r\n                <button id=\"searchButton\" onClick={handleSearch}>Search</button>\r\n              </form>\r\n            </div>\r\n\r\n            {(displayAllAnswered || !successful )  && allQuizzes && (\r\n              <div >      \r\n                <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                  <center>\r\n                  <h4 style={{padding: \"20px\", \"margin-bottom\": \"10px\", \"margin-top\": \"20px\"}}>Quiz déjà répondus</h4>\r\n                  </center>\r\n                  <div className=\"row\" >\r\n                      {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                          <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"> \r\n                              <NoteCard note={quiz.quiz_id}  handleDelete={\"handleDelete\"} color={'#'+Math.floor(Math.random()*16777215).toString(16).padStart(6, '0')}/>\r\n                          </div> \r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              </div>  \r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <div className={!successful || message ? \"card card-container\" : \"\"}>\r\n            {(!successful || displayAllAnswered)  && (\r\n              <div >\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"search\">Search for Quiz</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"search\"\r\n                    value={search}\r\n                    onChange={onChangeSearch}\r\n                    validations={[required, vsearch]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\"  onClick={handleSearch}>Search Quiz</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n          <div className={!successful || message ? \"card card-container\" : \"\"}>\r\n            {(displayAllAnswered || !successful )  && allQuizzes && (\r\n              <div >\r\n                <h4>Quiz déjà répondus</h4>\r\n                <div className={`quiz`} >\r\n                    {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                        <h4 \r\n                        onClick= {() => setActiveQuiz(quiz, index)}\r\n                        > {quiz.quiz_id} \r\n                        </h4>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div >\r\n        {currentQuiz && (\r\n          <div className=\"container-questions\"> \r\n            { validate &&\r\n                <Snackbar anchorOrigin={{ vertical :'top', horizontal: 'center' }}open={validate} autoHideDuration={6000} onClose={()=>handleClose()}>\r\n                <Alert onClose={()=>handleClose()} severity=\"error\">\r\n                  {'Please answer all questions'}\r\n                </Alert>\r\n            </Snackbar>\r\n            }\r\n            <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n            {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n              <div key={questions.question_id}>\r\n                <h4>{questions.question_id}{'. '}{questions.question_title}</h4>    \r\n                <div>\r\n                    <input \r\n                        className=\"input\"\r\n                        type=\"radio\" \r\n                        value=\"Oui\" \r\n                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                    /> Oui\r\n                    <input \r\n                        className=\"input\"\r\n                        type=\"radio\" \r\n                        value=\"Plutot Oui\"  \r\n                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                    /> Plutot Oui\r\n                    <input\r\n                        className=\"input\" \r\n                        type=\"radio\" \r\n                        value=\"Plutot Non\"  \r\n                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                    /> Plutot Non\r\n                    <input\r\n                        className=\"input\" \r\n                        type=\"radio\" \r\n                        value=\"Non\" \r\n                        checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                    /> Non\r\n                </div>\r\n\r\n                {radioOptions[questions.question_id] === \"Plutot Non\"\r\n                || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n                || radioOptions[questions.question_id] === \"Non\" ? (\r\n                  <div>\r\n                    {questions.question_options && questions.question_options.map((options, index) => ( \r\n                      <div>\r\n                        <label>\r\n                          <input type=\"checkbox\" value={options.options_id} \r\n                          checked={checkedItems[options.option_text]}  \r\n                          onChange={(e) => \r\n                              setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                          }\r\n                          />\r\n                          <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                        </label>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : (<span>No Explanation Needed</span>)}\r\n              </div>\r\n            ))}\r\n            <div className=\"form-group\">\r\n              <button className=\"btnn\" onClick={submitAnswers}>Submit Answers</button>\r\n            </div>\r\n          </div>\r\n            )\r\n          }\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\n  export default BoardUser","import axios from \"axios\";\r\n\r\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\r\n\r\nclass PostForm {\r\n    submit(title, created_by, questions) {\r\n        return axios\r\n            .post(API_URL + \"submit\", {\r\n                title,\r\n                created_by,\r\n                questions\r\n            })\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport default new PostForm();\r\n","import { Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@material-ui/core'\r\nimport {React} from 'react'\r\n\r\nconst ConfirmDialogue = (props) => {\r\n    const {confirmDialog} = props;\r\n    return (\r\n        <div>\r\n            <Dialog open={confirmDialog.isOpen}>\r\n                <DialogTitle >\r\n                    \r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Typography variant=\"h6\">\r\n                        {confirmDialog.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                        {confirmDialog.subTitle}\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <button className=\"btnn\" onClick={confirmDialog.onDiscard}>No</button>\r\n                    <button className=\"btnn\" onClick={confirmDialog.onConfirm}>Yes</button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmDialogue\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nconst ITEM_HEIGHT = 48; \r\n\r\nexport default function MenuOption(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n        style={{float:\"right\",color: '#4257b2'}}\r\n      >\r\n        <MoreVertIcon />\r\n        <span>Options</span>\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: '20ch',\r\n            color: '#4257b2'\r\n          },\r\n        }}\r\n      >\r\n        {props.options && props.options.map((option) => (\r\n          <MenuItem key={option.title} selected={option === 'Pyxis'} onClick={option.onclick} >\r\n            {option.icon}{option.title}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { Button, Snackbar, Switch } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PostForm from \"../services/admin-submit-form\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { List, ListItem,ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport SearchService from \"../services/search.service\";\r\nimport ConfirmDialogue from \"./confirm-dialogue\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport MenuOption from \"./menu\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport NoteCard from \"./NoteCard\";\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport { TextField } from \"@material-ui/core\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { EmailOutlined } from \"@material-ui/icons\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n// Here is 5 constants related to the visual of our custom button\r\nconst StyledButtonAddExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonAddQuestion = withStyles({\r\n  root: {\r\n    background: '#4257b2',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF8700 30%, #FF1E1E 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelQuestion = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF1D1D 30%, #4C4C4C 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonSubmit = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #11FF00 30%, #00FF82 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass MyForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.onChangeQuestion = this.onChangeQuestion.bind(this);\r\n    this.onClickAddExplanation = this.onClickAddExplanation.bind(this);\r\n    console.log(this.props.delete)\r\n    this.state = {\r\n      explanations: false,\r\n      delete : this.props.delete\r\n    };\r\n  }\r\n\r\n  onChangeQuestion(e){\r\n    this.props.onQuestionChange(e.target.value);\r\n  }\r\n\r\n  onChangeExplanation(indexExplanation, e){\r\n    this.props.onExplanationChange(indexExplanation, e.target.value)\r\n  }\r\n\r\n  onClickRemoveExplanation(indexExplanation){\r\n    this.props.onRemoveExplanationClick(indexExplanation);\r\n  }\r\n\r\n  onClickAddExplanation(){\r\n    this.props.onAddExplanationClick();\r\n    this.setState({\r\n      explanations: true\r\n    });\r\n  }\r\n\r\n  deleteQuiz(){\r\n    console.log(this.props)\r\n    // this.props.delete();\r\n  }\r\n  \r\n  createExplanationUI(){\r\n    return(\r\n      <div>\r\n          {this.props.explanations ?(this.props.explanations.map((element, indexExplanation) =>\r\n            <div>\r\n              <div key={indexExplanation} className=\"form-group\">\r\n                <label htmlFor=\"explanation\">Explication</label>\r\n                  {/* <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"explanation\"\r\n                    value = {element.options_text||''}\r\n                    onChange = {this.onChangeExplanation.bind(this, indexExplanation)}\r\n                    validations = {[required]}\r\n                    autoComplete = \"off\"\r\n                  /> */}\r\n                  <form id =\"formExp\" >\r\n                    <TextField\r\n                        onChange={this.onChangeExplanation.bind(this, indexExplanation)}\r\n                        id=\"inputExp\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        required //just adds the asterix\r\n                        size=\"small\"\r\n                        style={{height: \"50\"}}\r\n                    />\r\n                    <Tooltip title=\"Supprimer cette explication\">\r\n                    <button type= \"button\" id=\"buttonExp\" onClick={this.onClickRemoveExplanation.bind(this, indexExplanation)}> <DeleteForeverIcon style={{color:\"red\"}}/> </button>\r\n                    </Tooltip>\r\n                  </form>\r\n              </div>\r\n\r\n              {/* <StyledButtonDelExplanation \r\n                variant = \"contained\" onClick = {this.onClickRemoveExplanation.bind(this, indexExplanation)}>Supprimer cette explication\r\n              </StyledButtonDelExplanation> */}\r\n\r\n            </div>\r\n            )) : (<h3>No Explanation props</h3>)\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const question = this.state.question;\r\n    const deleteQuiz = this.state.delete;\r\n\r\n    return (\r\n      <div>\r\n        <Form >\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"question\" style={{paddingTop: \"10px\"}}>\r\n              <span>\r\n              <strong >Question</strong>\r\n              <Tooltip title=\"Supprimer cette question\">\r\n                <IconButton className=\"deleteQuestion\" onClick={deleteQuiz} style={{float:\"right\"}}>\r\n                    <DeleteForeverIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              </span>\r\n\r\n            </label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"question\"\r\n              value = {question}\r\n              onChange = {this.onChangeQuestion}\r\n              validations = {[required]}\r\n              autoComplete = \"off\"\r\n            />\r\n          </div>\r\n          {/* <StyledButtonAddExplanation\r\n            variant = \"contained\" onClick = {this.onClickAddExplanation}>Ajouter une explication\r\n          </StyledButtonAddExplanation> */}\r\n          \r\n          {\r\n            this.state.explanations &&\r\n              this.createExplanationUI()\r\n          }\r\n          \r\n          <Tooltip title=\"Adjouter une explication\">\r\n            <IconButton  onClick={this.onClickAddExplanation} style={{color: \"#4257b2\", float:\"left\", marginBottom: \"15px\"}}>\r\n              <QueueIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <br/><br/>\r\n          {/* <Button\r\n            onClick = {this.onClickAddExplanation}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{marginBottom: \"15px\"}}\r\n            // className={classes.button}\r\n            title=\"adjouter une explication\"\r\n            startIcon={<QueueIcon />}\r\n          >\r\n            explication\r\n          </Button> */}\r\n\r\n\r\n\r\n        </Form>\r\n\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClickAddQuestion = this.onClickAddQuestion.bind(this);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.allowQuiz = this.allowQuiz.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n\r\n    this.state = {\r\n      title: '',\r\n      created_by: '',\r\n      questions: [\r\n        {\r\n          question_id: '',\r\n          question_title: '',\r\n          question_options: []\r\n        }\r\n      ],\r\n      message: '',\r\n      currentUser: undefined,\r\n      submitted: false,\r\n      quizMdp:'',\r\n      allQuizzes: null,\r\n      displayQuizzes: null,\r\n      errorMessage: '',\r\n      laststate: null,\r\n      confirmDialog: {\r\n        isOpen:false,\r\n        title:'',\r\n        subTitle:''\r\n      },\r\n      updateTitle: \"Are you sure you want to update?\",\r\n      updateSubTitle : \"You will be able to edit again\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n      });\r\n    }\r\n\r\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${user.message.email}`).then((response) => {\r\n            console.log(response.data.quizzes);\r\n            if((response.data.quizzes).length ){\r\n                // setallQuizzes(response.data.quizzes)\r\n                // setdisplayQuizzes(true); \r\n                this.setState({\r\n                  allQuizzes: response.data.quizzes,\r\n                  displayQuizzes: true\r\n                });\r\n                // console.log(response.data.quizzes)\r\n            }\r\n            else{\r\n                // setallQuizzes(null)\r\n                // setdisplayQuizzes(false)  \r\n                this.setState({\r\n                  allQuizzes: null,\r\n                  displayQuizzes: false\r\n                });\r\n            }\r\n          })\r\n          .catch(function (err) {\r\n              // seterrorMessage(err.response.data.message|| err.response.data.message[0].error);\r\n              this.setState({\r\n                errorMessage: err.response.data.message|| err.response.data.message[0].error,\r\n              });\r\n          });\r\n\r\n          this.setState({\r\n            menuOptions : [\r\n              {\r\n                title: \"Back\",\r\n                icon : <ArrowBackIcon fontsize=\"large\"/>,\r\n                onclick : this.backToQuizzes\r\n              },\r\n              {\r\n                title: \"Edit\",\r\n                icon : <EditIcon fontsize=\"large\"/>,\r\n                onclick : this.editQuiz\r\n              },\r\n              {\r\n                title: \"Delete\",\r\n                icon : <DeleteForeverIcon fontsize=\"large\"/>,\r\n                onclick : ()=>this.setConfirmDialog(\"delete\",\"Are you sure you want to Delete this Quiz?\", \"Question will be deleted permanently but no with Students Records\", this.deleteQuiz)\r\n              }\r\n            ]\r\n          })\r\n  }\r\n\r\n  createQuiz = () => {\r\n    this.setState({\r\n      laststate: this.state.displayQuizzes,\r\n      displayQuizzes : null,\r\n      displayCreate : true,\r\n      displayQuiz: false,\r\n\r\n    })\r\n  }\r\n\r\n  backToQuizzes = () => {\r\n    this.setState({\r\n      displayQuizzes: this.state.laststate,\r\n      displayCreate: false,\r\n      displayQuiz: false,\r\n      edit: false\r\n\r\n    })\r\n  }\r\n\r\n  getQuiz = (quiz_idd) => {\r\n    SearchService.searchQuiz(\r\n      quiz_idd,\r\n    ).then(\r\n      response => {\r\n        console.log(response.data.created_by);\r\n        // setsuccessful(true);\r\n        // setcurrentQuiz(response.data);\r\n        console.log()\r\n        this.setState({\r\n          displayQuiz: true,\r\n          laststate: this.state.displayQuizzes,\r\n          currentQuiz: response.data,\r\n          toggle: response.data.allow,\r\n          displayQuizzes : null,\r\n          displayCreate: false,\r\n        })\r\n      })\r\n      .catch(\r\n      error => {\r\n        console.log(error.response);\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) \r\n          || error.message || error.toString();\r\n\r\n        // setmessage(resMessage);\r\n        // setsuccessful(false);\r\n        this.setState({\r\n          message: resMessage,\r\n          successful: false\r\n        })\r\n      }\r\n    );\r\n  }\r\n\r\n  setConfirmDialog = (type ,title, subtitle, onconfirm) => {\r\n        this.setState({\r\n          confirmDialog: {\r\n            isOpen: true,\r\n            title: title,\r\n            subTitle: subtitle,\r\n            onConfirm: onconfirm,\r\n            onDiscard: ()=>this.discard(type)\r\n          }\r\n        })\r\n  }\r\n\r\n  discard = (type) => {\r\n    if(type===\"update\" || type === \"delete\"){\r\n      this.setState({\r\n        confirmDialog: {\r\n          isOpen: false,\r\n          title: '',\r\n          subTitle: \"\",\r\n          onConfirm: null,\r\n          onDiscard: null\r\n        }\r\n      })\r\n    }\r\n    else if(type===\"toggle\"){\r\n      this.setState({\r\n        confirmDialog: {\r\n          isOpen: false,\r\n          title: '',\r\n          subTitle: \"\",\r\n          onConfirm: null,\r\n          onDiscard: null\r\n        },\r\n         toggle: !this.state.toggle\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleToggle = (event) =>{\r\n    this.setState({\r\n      toggle: event.target.checked\r\n    })\r\n    let title;\r\n    let message;\r\n    if(event.target.checked){\r\n      title = \"Allow Students to take Quiz?\";\r\n      message = \"Students Can Take Quiz now\"\r\n    }\r\n    else{\r\n      title = \"Do you want to Close Quiz?\"\r\n      message = \"Students Cannot Take Quiz now\"\r\n    }\r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: true,\r\n        title: title,\r\n        subTitle: this.state.subTitle,\r\n        onConfirm: () => this.allowQuiz(message),\r\n        onDiscard: ()=> this.discard(\"toggle\")\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  allowQuiz = (message) => {\r\n    let allow = this.state.toggle\r\n    console.log(allow)\r\n    const quiz_id = this.state.currentQuiz.quiz_id;\r\n    axios.post(`https://neuroeducation-feedback.herokuapp.com/api/allowQuiz/${quiz_id}` , {\r\n      allow\r\n    })\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      let success;\r\n      if(allow){\r\n        success = allow\r\n      }\r\n      else{\r\n        success=allow\r\n      }\r\n      this.setState({\r\n        message: message,\r\n        open:true,\r\n        successful:success,\r\n        toggle: allow\r\n      })\r\n    })\r\n    .catch(function (err) {\r\n        // this.setState({\r\n        //   toggle: !this.state.toggle\r\n        // });\r\n        console.log(err.response.data.message|| err.response);\r\n    });\r\n    \r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: false,\r\n        title: '',\r\n        subTitle: \"\",\r\n        onConfirm: null,\r\n        onDiscard: null\r\n      }\r\n    })\r\n  }\r\n\r\n  updateQuiz = (event) =>{\r\n    event.preventDefault();\r\n    let updated_questions = [];\r\n\r\n    for(let i=1;i<=5;i++){\r\n      if(document.getElementById('Q'+i) === null){\r\n        break\r\n      }\r\n      var id = document.getElementById('Q'+i).value;\r\n\r\n      let expArr = [];\r\n      for(let j=1;j<=20;j++){\r\n        let alphabet = String.fromCharCode(96 + (j));\r\n        let expId = 'Q'+i+'E'+alphabet;\r\n\r\n        if(document.getElementById(expId) === null){\r\n          break\r\n        }\r\n        else{\r\n        var exp = document.getElementById(expId).value;\r\n        expArr.push({\r\n          options_id : alphabet,\r\n          options_text : exp\r\n        })}\r\n      }\r\n      updated_questions.push({question_id:i, question_title: id, question_options : expArr})\r\n    }\r\n\r\n    console.log(updated_questions)\r\n    const quiz_id = document.getElementById(\"quiz_id\").value;\r\n    console.log(quiz_id)\r\n    axios.post(`https://neuroeducation-feedback.herokuapp.com/api/updateQuiz/${quiz_id}` , {\r\n      updated_questions\r\n    })\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      this.setState({\r\n        message: \"Quiz Updated\",\r\n        open: true,\r\n        successful:true\r\n      })\r\n    })\r\n    .catch(function (err) {\r\n        console.log(err.response.data.message|| err.response);\r\n        this.setState({\r\n          message: \"Quiz Not Updated\",\r\n          open:true,\r\n          successful: false\r\n        })\r\n    });\r\n    \r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: false,\r\n        title: '',\r\n        subTitle: \"\",\r\n        onConfirm: null,\r\n        onDiscard: null\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteQuiz=()=> {\r\n        const id = this.state.currentQuiz.quiz_id;\r\n        const email = this.state.currentQuiz.created_by;\r\n        axios.delete(`https://neuroeducation-feedback.herokuapp.com/api/delete/${id}/${email}`)\r\n        .then((res) => {\r\n            console.log(res)\r\n            this.setState({\r\n              open: true,\r\n              message: \"Quiz Deleted\",\r\n              danger: true,\r\n              successful:null,\r\n              allQuizzes : this.state.allQuizzes.filter((question) => question.quiz_id !== id)\r\n            })\r\n            // setallQuizzes(allQuizzes.filter((question) => question._id !== id))\r\n        })\r\n        .catch(err => {\r\n            console.log(err); \r\n            this.setState({\r\n              message: \"Quiz Not Deleted... Please Try Again\",\r\n              open:true,\r\n              successful: false\r\n            })\r\n        });\r\n        this.setState({\r\n          confirmDialog: {\r\n            isOpen: false,\r\n            title: '',\r\n            subTitle: \"\",\r\n            onConfirm: null,\r\n            onDiscard: null\r\n          }\r\n        })\r\n\r\n        this.backToQuizzes()\r\n    // this.setState({\r\n    //   open: true,\r\n    //   message: \"Not Functional Yet\",\r\n    //   danger: true,\r\n    //   successful:null\r\n    // })\r\n  }\r\n\r\n  editQuiz=()=>{\r\n    this.setState({\r\n      edit: true,\r\n      displayQuiz: false\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n\r\n  handleQuestionChange(indexQuestion, question){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_title = question;\r\n    questions[indexQuestion].question_id = indexQuestion+1;\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleExplanationChange(indexQuestion, indexExplanation, explanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options[indexExplanation].options_text = explanation;\r\n    \r\n    let alphabet = String.fromCharCode(96 + (indexExplanation+1));\r\n    questions[indexQuestion].question_options[indexExplanation].options_id = alphabet;\r\n    \r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  onChangeTitle(e){\r\n    let title = e.target.value;\r\n    this.setState({\r\n      title\r\n    });\r\n  }\r\n\r\n  onClickAddQuestion(){\r\n    this.setState(\r\n      prevState => ({questions : [...prevState.questions,        \r\n        {\r\n        question_title: '',\r\n        question_options: []\r\n      }]})\r\n    );\r\n  }\r\n\r\n  handleAddExplanationClick(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.push({options_text : ''});\r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  handleRemoveExplanationClick(indexQuestion, indexExplanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.splice(indexExplanation, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  onClickDelQuestion(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions.splice(indexQuestion, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleSubmit(){\r\n\r\n    const { currentUser} = this.state;\r\n\r\n    PostForm.submit(this.state.title, currentUser.message.email, this.state.questions).then(\r\n      (response) => {\r\n        // this.props.history.push({\r\n        //   pathname: \"/postSubmitForm\",\r\n        //   state:{quizMdp: response.quizMdp}\r\n        // })\r\n        // window.location.reload();\r\n       console.log(response);\r\n        this.setState({\r\n          message: 'Quiz submitted',\r\n          submitted: true,\r\n          quizMdp:response.quizMdp\r\n        });\r\n      },\r\n      error => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        this.setState({\r\n          message: resMessage,\r\n          questions: [\r\n            {\r\n              question_title: '',\r\n              question_options: []\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  createQuestionUI(){\r\n\r\n    return(this.state.questions.map((element, indexQuestion) => \r\n      <div className=\"questionContainer\">\r\n        <div className=\"container\" key={indexQuestion}>\r\n          <MyForm \r\n            onQuestionChange = {this.handleQuestionChange.bind(this, indexQuestion)}\r\n            onTitleChange = {this.handleTitleChange}\r\n            onExplanationChange = {this.handleExplanationChange.bind(this, indexQuestion)}\r\n            onAddExplanationClick = {this.handleAddExplanationClick.bind(this, indexQuestion)}\r\n            onRemoveExplanationClick = {this.handleRemoveExplanationClick.bind(this, indexQuestion)}\r\n            explanations = {this.state.questions[indexQuestion].question_options}\r\n            delete = {this.onClickDelQuestion.bind(this, indexQuestion)}\r\n          />\r\n          {/* <div className=\"delQuestion\">\r\n            <StyledButtonDelQuestion\r\n              variant = \"contained\" onClick = {this.onClickDelQuestion.bind(this, indexQuestion)}>Supprimer cette question\r\n            </StyledButtonDelQuestion>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  // Pourrait être utile plus tard donc je met de coté (deprecated)\r\n  // componentDidMount() {\r\n  //   UserService.getAdminBoard().then(\r\n  //     response => {\r\n  //       this.setState({\r\n  //         content: response.data\r\n  //       });\r\n  //     },\r\n  //     error => {\r\n  //       this.setState({\r\n  //         content:\r\n  //           (error.response &&\r\n  //             error.response.data &&\r\n  //             error.response.data.message) ||\r\n  //           error.message ||\r\n  //           error.toString()\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n\r\n    const title = this.state.title;\r\n    const currentUser = this.state.currentUser;\r\n    const allQuizzes = this.state.allQuizzes;\r\n    const displayQuizzes = this.state.displayQuizzes;\r\n    const displayCreate = this.state.displayCreate;\r\n    const displayQuiz = this.state.displayQuiz;\r\n    const currentQuiz = this.state.currentQuiz\r\n\r\n\r\n\r\n\r\n    // redirect to post/SubmitForm\r\n    if(this.state.submitted===true){\r\n      return <Redirect to={{ pathname: \"/postSubmitForm\", state: { quizMdp: this.state.quizMdp } }} />\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n      <div className=\"mainTeacherForm\">\r\n\r\n        <Snackbar anchorOrigin={{ vertical :'top', horizontal: 'center' }}open={this.state.open} autoHideDuration={6000} onClose={()=>this.handleClose()}>\r\n          <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        {\r\n          this.state.confirmDialog.isOpen && \r\n          <ConfirmDialogue\r\n          confirmDialog={this.state.confirmDialog}\r\n          setConfirmDialog={this.state.confirmDialog}\r\n          />\r\n        }\r\n\r\n        {(displayQuizzes===false || displayQuizzes) && \r\n          <div className=\"\">\r\n            {(allQuizzes && displayQuizzes) && (\r\n                <div >\r\n                    <SnackbarContent \r\n                    style={{backgroundColor: \"white\", position:\"sticky\", top: \"0\", \"z-index\": \"999\"}}\r\n                    message=\"\" \r\n                    action={<button className=\"btnn\" \r\n                    onClick={this.createQuiz}>Create new Quiz</button>} \r\n                    />\r\n                    <div >      \r\n                      <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                        <h4 style={{padding: \"20px\", \"margin-bottom\": \"10px\", \"margin-top\": \"20px\"}}> <span>{'Quizzes Created by : '}</span> <span>{currentUser.message.firstname+\" \"+currentUser.message.lastname}</span> </h4>\r\n                        <div className=\"row\" >\r\n                            {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\" onClick= {()=>this.getQuiz(quiz.quiz_id)}> \r\n                                    <NoteCard note={quiz.quiz_id}  handleDelete={\"no delete\"} color={'#4257b2'}/>\r\n                                </div> \r\n                            ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                        <List>\r\n                        {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                            <ListItem button  onClick= {()=>this.getQuiz(quiz.quiz_id)}>\r\n                                <ListItemIcon>\r\n                                    <BookOutlined />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\r\n                                    <h4>\r\n                                    {quiz.quiz_id} \r\n                                    </h4>\r\n                                }/>\r\n                            </ListItem>\r\n                        ))}\r\n                        </List>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {(displayQuizzes===false) && (\r\n              <div>\r\n                  <h4>{'Quizzes Created by : '}</h4>\r\n                  <h4> {currentUser.message.firstname+\" \"+currentUser.message.lastname}</h4>\r\n                  <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                      <h4>You have not created any quiz</h4>\r\n                  </div>\r\n              </div>\r\n            )}\r\n            <button className=\"btnn\" onClick={this.createQuiz}>Create new Quiz</button>\r\n          </div>}\r\n\r\n        {(displayQuiz || this.state.edit) && currentQuiz &&\r\n          <div className=\"container-questions\">\r\n            <MenuOption options = {this.state.menuOptions}></MenuOption>\r\n            <Tooltip title=\"Back to list\">\r\n              <IconButton aria-label=\"back\" style={{color:'#4257b2'}} onClick={this.backToQuizzes}>\r\n                <ArrowBackIcon fontsize=\"large\"/>\r\n              </IconButton>\r\n            </Tooltip>\r\n            {/* <button className=\"btnn\"  onClick={this.backToQuizzes}><ArrowBackIcon fontsize=\"large\"/></button>  */}\r\n\r\n            {/* <button className=\"btnn\"  onClick={this.deleteQuiz}><DeleteForeverIcon fontsize=\"large\"/></button>  */}\r\n            {/* <button className=\"btnn\"  onClick={this.editQuiz}>Edit Quiz</button> */}\r\n            <p>\r\n                {currentQuiz.quiz + ' is currently ' + (this.state.toggle ? (\"allowed\") : (\"not allowed\")) +\" to be taken\"}             \r\n                <Switch\r\n                checked={this.state.toggle}\r\n                onChange={this.handleToggle}\r\n                name=\"switch\"\r\n                inputProps={{\"aria-label\":\"test switch\"}}\r\n                style={{color:\"#4257b2\"}}\r\n                color=\"primary\"\r\n                />\r\n            </p>\r\n            \r\n            {(currentQuiz && this.state.edit) && (\r\n              <div  > \r\n    \r\n                <Form id=\"myForm\">\r\n                  <div className=\"container\">\r\n                    <div className=\"form-group\">\r\n                      <center><h5 >{currentQuiz.quiz}</h5><br/></center>\r\n\r\n                      <Input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name=\"quiz_id\"\r\n                              id=\"quiz_id\"\r\n                              value = {currentQuiz.quiz_id}\r\n                              readOnly\r\n                          /> \r\n                      {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                        <div key={questions.question_id}>\r\n                          <label htmlFor={'Q'+questions.question_id}><strong>{'Question : '+questions.question_id}</strong></label>\r\n                          <Input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name={'Q'+questions.question_id}\r\n                              id={'Q'+questions.question_id}\r\n                              value = {questions.question_title}\r\n                              // onChange = {this.onChangeTitle}\r\n                              validations = {[required]}\r\n                              autoComplete = \"off\"\r\n                          /> \r\n\r\n                          {questions.question_options && questions.question_options.map((options, index) => ( \r\n                            <div>\r\n                            <label htmlFor={'Q'+questions.question_id+'E'+options.options_id}><strong>{'Explanation : '+options.options_id}</strong></label>\r\n                            <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name={'Q'+questions.question_id+'E'+options.options_id}\r\n                            id={'Q'+questions.question_id+'E'+options.options_id}\r\n                            value = {options.options_text}\r\n                            // onChange = {this.onChangeTitle}\r\n                            validations = {[required]}\r\n                            autoComplete = \"off\"\r\n                            />\r\n                            </div>\r\n                          ))}                  \r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>   \r\n                </Form> \r\n                <button className=\"btnn\" onClick={()=>this.setConfirmDialog(\"update\",\"Do you want to Edit this Quiz?\", \"You can edit again\", this.updateQuiz)}>Update</button>   \r\n              </div>\r\n              \r\n              )}\r\n\r\n              <div >\r\n                {(currentQuiz && displayQuiz) && (\r\n                  <div  > \r\n                    <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n                    {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                      <div key={questions.question_id}>\r\n                        <p><strong>{questions.question_id}{'. '}{questions.question_title}</strong></p>    \r\n                      \r\n                          <div>\r\n                            {questions.question_options && questions.question_options.map((options, index) => ( \r\n                              <div>\r\n                                <label>\r\n                                  <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                                </label>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        \r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n          </div>\r\n        }\r\n\r\n\r\n        <div>\r\n          {displayCreate && <div>\r\n            <div style={{width:\"100%\",   display: \"inline-flex\", \"justify-content\": \"center\"}}>\r\n            <button  id=\"backButton\" onClick={this.backToQuizzes}><ArrowBackIcon fontsize=\"large\"/></button> \r\n\r\n            <SnackbarContent \r\n            style={{ width : \"100%\" ,fontWeight:\"bold\", fontSize:\"1.2rem\", color: \"#4257b2\" ,backgroundColor: \"white\", position:\"sticky\", top: \"0\", \"z-index\": \"999\"}}\r\n            message=\"Création de nouvelles questions\" \r\n            action={\r\n              <button\r\n               className=\"btnn\" variant = \"contained\" onClick = {this.handleSubmit}>Valider\r\n              </button>\r\n            } \r\n            />\r\n            </div> \r\n            {/* <div className=\"container\">\r\n              <header className=\"jumbotron\">\r\n                <h3>Création de nouvelles questions</h3>\r\n              </header>\r\n            </div> */}\r\n\r\n            <Form>\r\n              <div className=\"container\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"form-title\"><strong>Titre du formulaire</strong></label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"form-title\"\r\n                      value = {title}\r\n                      onChange = {this.onChangeTitle}\r\n                      validations = {[required]}\r\n                      autoComplete = \"off\"\r\n                    />\r\n                </div>\r\n              </div>\r\n\r\n\r\n              {this.createQuestionUI()}\r\n\r\n\r\n              <div className=\"container\">\r\n                <br></br>\r\n                <SnackbarContent \r\n                style={{backgroundColor: \"white\"}}\r\n                message=\"\" \r\n                action={<button\r\n                 className=\"btnn\" type=\"button\" onClick = {this.onClickAddQuestion}>Ajouter une question\r\n              </button>} \r\n                />\r\n                {/* <StyledButtonAddQuestion\r\n                    variant = \"contained\" onClick = {this.onClickAddQuestion}>Ajouter une question\r\n                </StyledButtonAddQuestion>\r\n                <br></br><br></br>\r\n                <StyledButtonSubmit\r\n                  variant = \"contained\" onClick = {this.handleSubmit}>Valider\r\n                </StyledButtonSubmit> */}\r\n              </div>\r\n            </Form>\r\n\r\n            { this.state.message && \r\n              <div className=\"container\">\r\n                <div className=\"itsanerror\"><h3>Une erreur est survenu lors de l'envoi du formulaire</h3></div>\r\n              </div>\r\n            }\r\n          </div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class PostSubmitForm extends Component {\r\n    render(){\r\n        if(this.props.location.state === undefined){\r\n            // console.log(this.props.location); \r\n            return <Redirect to={{pathname:'/home'}}/>\r\n        }\r\n        return(\r\n            <div>\r\n                <div className=\"container\">\r\n                    <header className=\"jumbotron\">\r\n                        <div className=\"success\">\r\n                            <h3>Formulaire envoyé avec succès !</h3>\r\n                            <br></br>\r\n                            <h5>Voici le code du quizz à partager aux élèves :</h5>\r\n                            <p className=\"quizMdp\">{\" \" + this.props.location.state.quizMdp}</p>\r\n                        </div>\r\n                    </header>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Bar, HorizontalBar } from 'react-chartjs-2';\r\n\r\n\r\nconst BarChart = ( props ) => {\r\n\r\n    const names = props.explanationArray;\r\n    const explanationLabels = props.explanationLabels;\r\n    const explanationValues = props.explanationValues;\r\n    const barData = props.barData;\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {(barData === \"Bar\") ? (\r\n                        <Bar\r\n                        data={{\r\n                            labels: explanationLabels,\r\n                            datasets: [{\r\n                                data: explanationValues,\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ]\r\n                            }]\r\n                        }}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                            scales: {\r\n                                yAxes: [{\r\n                                    ticks: {\r\n                                        beginAtZero: true\r\n                                    }\r\n                                }]\r\n                            },\r\n                            legend: {\r\n                                display: false\r\n                            },\r\n                            tooltips: {\r\n                                callbacks: {\r\n                                    label: function(item, data){\r\n                                        return names[item.index];\r\n                                    },\r\n                                    title: function(item, data){\r\n                                        return;\r\n                                    }\r\n                                },\r\n                                displayColors: false\r\n                            }\r\n                        }}\r\n                    />\r\n            ): (\r\n                <HorizontalBar\r\n                data={{\r\n                    labels: explanationLabels,\r\n                    datasets: [{\r\n                        data: explanationValues,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            label: function(item, data){\r\n                                return names[item.index];\r\n                            },\r\n                            title: function(item, data){\r\n                                return;\r\n                            }\r\n                        },\r\n                        displayColors: false\r\n                    }\r\n                }}\r\n            />\r\n            )}\r\n    \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BarChart;","import { Doughnut, Pie } from 'react-chartjs-2';\r\n\r\n\r\nconst DoughnutChart = ({ labels, answerValues, pieData }) => {\r\n    return ( \r\n        <div>\r\n            {(pieData === \"Doughnut\") ? (\r\n                <Doughnut\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: [{\r\n                            data: answerValues,\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                            ]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            ):(\r\n                <Pie\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: [{\r\n                            data: answerValues,\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                            ]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            )}\r\n            \r\n        </div>\r\n     );\r\n}\r\n\r\nexport default DoughnutChart;","import React, {useState} from 'react'\r\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NoteCard from \"./NoteCard\";\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport Tooltip from '@material-ui/core/Tooltip'; \r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\n\r\n\r\n\r\n\r\nconst FlippyItems = ({frontSide, backSide, handleStudentList, stats, index, quiz}) => {\r\n    const [lockFlip, setlockFlip] = useState(true)\r\n    return (\r\n        <Flippy\r\n        // onmouseover={onMouseOver}\r\n        className=\"col-xs-12 col-sm-12 col-md-4 col-lg-3\"\r\n        flipOnHover={true} // default false\r\n        flipOnClick={false} // default false\r\n        flipDirection=\"horizontal\" // horizontal or vertical\r\n        // ref={(r) => this.flippy = r} // to use toggle method like this.flippy.toggle()\r\n        // if you pass isFlipped prop component will be controlled component.\r\n        // and other props, which will go to div\r\n        style={{ minWidth: '260px', height: '150px', marginBottom : \"25px\", marginRight : \"25px\"}} /// these are optional style, it is not necessary\r\n      >\r\n        <FrontSide\r\n          style={{\r\n            // backgroundColor: '#41669d',\r\n            padding: 0,\r\n            margin:0\r\n          }}\r\n        // animationDuration=\"2000\"\r\n        >\r\n          {frontSide}\r\n        </FrontSide>\r\n        <BackSide\r\n          style={{ \r\n            backgroundColor: '#4257b2',\r\n            padding: 2,\r\n            margin:0}}\r\n          // animationDuration=\"2000\"\r\n        >\r\n\r\n          <div key={index}  > \r\n              \r\n              <NoteCard \r\n              note={quiz.quiz_title}  \r\n              handleDelete={\"no delete\"} \r\n              color={'#4257b2'} \r\n              avatar=\"no avatar\" \r\n              content={\r\n                  <div style={{float:\"right\", color:\"#4257b2\"}}> \r\n                  <Tooltip title=\"Cliquez pour les statistiques\">\r\n                      <IconButton  onClick={stats} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                          <EqualizerIcon />\r\n                      </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Liste des étudiants\">\r\n                      <IconButton  onClick={handleStudentList} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                          <FormatListNumberedIcon />\r\n                      </IconButton>\r\n                  </Tooltip>\r\n\r\n                  </div> \r\n              }\r\n              />\r\n          </div> \r\n        </BackSide>\r\n      </Flippy>\r\n    )\r\n}\r\n\r\nexport default FlippyItems\r\n","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n// import {FaTimes} from 'react-icons/fa'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SwapHorizRounded from '@material-ui/icons/SwapHorizRounded';import BarChart from './BarChart';\r\nimport { Container, List, ListItem, ListItemText} from '@material-ui/core';\r\nimport DoughnutChart from './DoughnutChart';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport NoteCard from \"./NoteCard\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport SearchService from \"../services/search.service\";\r\n\r\n\r\nimport FlippyItems from './Flippy';\r\n\r\n\r\n\r\nconst AllAnswers = () => {\r\n    const [allAnswers, setallAnswers] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [array, setarray] = useState(null);\r\n    const [answersArray, setanswersArray] = useState();\r\n    const [explanationsArray, setexplanationsArray] = useState()\r\n    const [currentStudent, setcurrentStudent] = useState(null)\r\n    const [explanationStats, setexplanationStats] = useState(null)\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n    const [allQuestions, setAllQuestions] = useState([]);\r\n    const [allExplanations, setAllExplanations] = useState([]);\r\n    const [pieData, setPieData] = useState(\"Doughnut\");\r\n    const [barData, setBarData] = useState(\"Bar\");\r\n    const [pieTitle, setPieTitle] = useState(\"Graphique en anneau\");\r\n    const [barTitle, setBarTitle] = useState(\"Diagramme à bandes\");\r\n    const [displayAllQuizzes, setdisplayAllQuizzes] = useState(true);\r\n    const [displayStudentList, setdisplayStudentList] = useState(false);\r\n    const [displayStats, setdisplayStats] = useState(false)\r\n    const [actualQuiz, setactualQuiz] = useState(null)\r\n\r\n\r\n    // FIND ALL ANSWERED QUESTIONS ON PAGE LOAD\r\n    useEffect(() => {\r\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllAnswered').then((response) => {\r\n          console.log(response.data);\r\n          setallAnswers(response.data);\r\n          setShowSpinner(false);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }, []);\r\n\r\n    //ALTERNATE BETWEEN PIE AND DOUGHNUT CHART\r\n\r\n    const handlePieChartChange = () => {\r\n        if(pieData === \"Doughnut\"){\r\n            setPieData(\"Pie\")\r\n            setPieTitle(\"Diagramme circulaire\")\r\n        }\r\n        if(pieData === \"Pie\"){\r\n            setPieData(\"Doughnut\")\r\n            setPieTitle(\"Graphique en anneau\")\r\n        }\r\n    }\r\n    const handleBarChartChange = () => {\r\n        if(barData === \"Bar\"){\r\n            setBarData(\"Horizontal Bar\")\r\n            setBarTitle(\"Graphique à barres horizontales\")\r\n        }\r\n        if(barData === \"Horizontal Bar\"){\r\n            setBarData(\"Bar\")\r\n            setBarTitle(\"Diagramme à bandes\")\r\n        }\r\n    }\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index, quiz_id) => {\r\n        console.log(quiz_id)\r\n        setcurrentQuiz(quiz);\r\n        getStats(quiz_id);\r\n        setcurrentStudent(null);\r\n        setexplanationStats(null);\r\n        setarray(null);\r\n\r\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${quiz_id}`)\r\n        .then(response => {\r\n            setAllQuestions(response.data.questions);\r\n            console.log(response.data.questions);\r\n        })\r\n        .catch(err => {\r\n            console.log(\"An error occurred\", err.response);\r\n        })\r\n\r\n\r\n        // GET ACTUAL QUESTIONS FROM DATABASE\r\n        SearchService.searchQuiz(\r\n            quiz.quiz_id,\r\n        ).then(\r\n            response => {\r\n            console.log(response.data);\r\n            //   setsuccessful(true);\r\n            setactualQuiz(response.data);\r\n            })\r\n            .catch(\r\n            error => {\r\n            console.log(error.response);\r\n            const resMessage =\r\n                (error.response && error.response.data && error.response.data.message) \r\n                || error.message || error.toString();\r\n\r\n            //   setmessage(resMessage);\r\n            //   setsuccessful(false);\r\n            }\r\n        );\r\n    }; \r\n\r\n    // RETRIEVE GROUPPED DATA FROM THE DATABASE BY SELECTED QUIZ ID \r\n    const getStats = (quiz_id) => {\r\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/groupStats/${quiz_id}`)\r\n        .then(response => {\r\n            if(response){\r\n            // SET GROUPPED ANSWERS \"FOR EACH STUDENT\" ARRAY\r\n            setanswersArray(response.data[0]._id.answer);\r\n            console.log(response.data[0]._id.answer)\r\n\r\n            // SET GROUPPED EXPLANATIONS \"FOR EACH STUDENT\" ARRAY\r\n            setexplanationsArray(response.data[0]._id.explanation);\r\n            console.log(response.data[0]._id.explanation)\r\n            }\r\n        })\r\n        .catch()\r\n    }\r\n\r\n    // SET SELECTED(CLICKED) STUDENT ARRAY\r\n    const setActiveStudent = (student) => {\r\n        console.log(student)\r\n        setcurrentStudent(student);\r\n    }\r\n\r\n// HANDLE STUDENT LIST\r\n    const handleStudentList = () => {\r\n        setdisplayAllQuizzes(false)\r\n        setdisplayStudentList(true)\r\n        setdisplayStats(false)\r\n    }\r\n\r\n    const backToQuizzes = () => {\r\n        setdisplayAllQuizzes(true)\r\n        setdisplayStudentList(false)\r\n        setdisplayStats(false)\r\n        setcurrentQuiz(null)\r\n        setcurrentStudent(null);\r\n        setexplanationStats(null);\r\n        setarray(null);\r\n    }\r\n\r\n    // MERGE ALL ANSWERS BY QUESTION NUMBER AND SET COUNT AND STATS\r\n    const stats = () => {\r\n        // MERGE ALL ANSWERS INTO AN ARRAY (arrAns)\r\n        const arrayAns = answersArray[0].map(function(value, index) {\r\n            const mergeAllStudentsByIndex = [value];\r\n            if(value){\r\n                for(let i=1; i<answersArray.length; i++){\r\n                    mergeAllStudentsByIndex.push(answersArray[i][index])\r\n                }\r\n            }\r\n            console.log(mergeAllStudentsByIndex);\r\n            return mergeAllStudentsByIndex;\r\n        });\r\n        console.log(arrayAns);\r\n\r\n         // MERGE ALL EXPLANATIONS INTO AN ARRAY (arrExp)\r\n        const arrayExp = explanationsArray[0].map(function(explanation, index) {\r\n            const mergeAllExplanation = [explanation];\r\n            if(explanation){\r\n                for(let i =1; i< explanationsArray.length; i++){\r\n                    mergeAllExplanation.push(explanationsArray[i][index])\r\n                }\r\n            }\r\n\r\n            return mergeAllExplanation;\r\n        });\r\n        console.log(arrayExp)\r\n        \r\n        // COUNT NUMBER OF OCCURRENCE OF AN ANSWER(\"Plutot Oui\", \"Non\"... etc) FOR EACH QUESTION\r\n        const countAnswers = arrayAns.map((answers, index) => {\r\n            console.log(array)\r\n            let all = {\r\n                \"Oui\" : 0,\r\n                \"Plutot Oui\" : 0,\r\n                \"Plutot Non\" : 0,\r\n                \"Non\": 0,\r\n            };\r\n            for(const answer of answers){\r\n                all = {...all,  [answer] : answers.filter((a) => {return a === answer}).length}\r\n            }\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setarray(countAnswers)\r\n\r\n        // GET EXPLANATIONS OF ALL QUESTIONS FOR THE CHART DISPLAY \r\n        const labelsArray = allQuestions.map((value, index) => {\r\n            const myArray = value.question_options.map((value, index) => {\r\n                return value.options_text;\r\n            })\r\n            return myArray\r\n        })\r\n\r\n        setAllExplanations(labelsArray);\r\n        console.log(labelsArray);\r\n\r\n        // COUNT NUMBER OF OCCURRENCE OF AN EXPLANATION(\"a\", \"b\", \"c\"... etc) FOR EACH QUESTION\r\n        const countExplanations = arrayExp.map((array,index) => {\r\n            //return arr.filter((a) => {return a === \"a\"}).length\r\n            console.log(array)\r\n            let all = {\r\n                a : 0,\r\n                b : 0,\r\n                c : 0,\r\n                d : 0,\r\n                e : 0\r\n            }\r\n            for(const letter of array){\r\n                all = {...all,  [letter] : array.filter((a) => {return a === letter}).length}\r\n            }\r\n\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setexplanationStats(countExplanations);\r\n        setdisplayStats(true)\r\n        setdisplayStudentList(false)\r\n        setdisplayAllQuizzes(false)    \r\n    }\r\n\r\n    // RETRIEVE INTEGERS(VALUES) FOR EXPLANATIONS\r\n    const getExplanationValues = (explanation, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(explanation[key])\r\n        })\r\n        return values;\r\n    }\r\n    // RETRIEVE INTEGERS(VALUES) FOR Y, MY, MN, N QUESTIONS\r\n    const getAnswerValues = (answer, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(answer[key])\r\n        })\r\n        return values;\r\n    }\r\n\r\n    //RETRIEVE KEYS(LABELS) FOR CHART DATA\r\n    const getLabels = object => {\r\n        return Object.keys(object);\r\n    }\r\n\r\n    // const disp = () => {\r\n    //     console.log(array);\r\n    //     console.log(explanationStats)\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-questions\">\r\n            {showSpinner && <div class=\"spinner\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            }\r\n            {!showSpinner &&  displayAllQuizzes && (<div  style={{borderRadius: \"10px\"}}>\r\n                <div >      \r\n                    <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                    <h4 style={{padding: \"20px\", \"margin-bottom\": \"10px\", \"margin-top\": \"20px\"}}> <span>Liste de toutes les réponses</span> </h4>\r\n                    <div className=\"row\" >\r\n                        {allAnswers && allAnswers.map((quiz, index) => (\r\n                            <FlippyItems\r\n                             \r\n                            frontSide={\r\n                                <div key={index} > \r\n                                \r\n                                <NoteCard \r\n\r\n                                note={quiz.quiz_title}  \r\n                                handleDelete={\"no delete\"} \r\n                                color={'#4257b2'} \r\n                                avatar=\"no avatar\" \r\n                                mouseover={() => setActiveQuiz(quiz, index, quiz.quiz_id)}\r\n                                // content={\r\n                                //     <div style={{float:\"right\", color:\"#4257b2\"}}> \r\n                                //     <Tooltip title=\"Cliquez pour les statistiques\">\r\n                                //         <IconButton  onClick={stats} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                                //             <EqualizerIcon />\r\n                                //         </IconButton>\r\n                                //     </Tooltip>\r\n                                //     <Tooltip title=\"Liste des étudiants\">\r\n                                //         <IconButton  onClick={handleStudentList} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                                //             <FormatListNumberedIcon />\r\n                                //         </IconButton>\r\n                                //     </Tooltip>\r\n                                //     <Tooltip title=\"Cliquez pour les statistiques\">\r\n                                //         <IconButton  onClick={stats} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                                //             <EqualizerIcon />\r\n                                //         </IconButton>\r\n                                //     </Tooltip>\r\n                                //    </div> \r\n                                // }\r\n                                />\r\n                            </div> \r\n                            }\r\n                            handleStudentList = {()=>handleStudentList()}\r\n                            stats={()=>stats()}\r\n                            index={index}\r\n                            quiz={quiz}\r\n                            backSide={\r\n                                <div key={index}  > \r\n                                \r\n                                <NoteCard \r\n                                note={quiz.quiz_title}  \r\n                                handleDelete={\"no delete\"} \r\n                                color={'#4257b2'} \r\n                                avatar=\"no avatar\" \r\n                                content={\r\n                                    <div style={{float:\"right\", color:\"#4257b2\"}}> \r\n                                    <Tooltip title=\"Cliquez pour les statistiques\">\r\n                                        <IconButton  onClick={stats} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                                            <EqualizerIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Liste des étudiants\">\r\n                                        <IconButton  onClick={handleStudentList} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                                            <FormatListNumberedIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    {/* <Tooltip title=\"Cliquez pour les statistiques\">\r\n                                        <IconButton  onClick={stats} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                                            <EqualizerIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip> */}\r\n                                   </div> \r\n                                }\r\n                                />\r\n                            </div> \r\n                            }\r\n                            />\r\n                            // <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\" onClick= {()=>setActiveQuiz(quiz, index, quiz.quiz_id)}> \r\n                                \r\n                            //     <NoteCard \r\n                            //     note={quiz.quiz_title}  \r\n                            //     handleDelete={\"no delete\"} \r\n                            //     color={'#4257b2'} \r\n                            //     avatar=\"no avatar\" \r\n                            //     content={\r\n                            //         <div style={{float:\"right\", color:\"#4257b2\"}}> \r\n                            //         <Tooltip title=\"Cliquez pour les statistiques\">\r\n                            //             <IconButton  onClick={stats} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                            //                 <EqualizerIcon />\r\n                            //             </IconButton>\r\n                            //         </Tooltip>\r\n                            //         <Tooltip title=\"Liste des étudiants\">\r\n                            //             <IconButton  onClick={handleStudentList} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                            //                 <FormatListNumberedIcon />\r\n                            //             </IconButton>\r\n                            //         </Tooltip>\r\n                            //         {/* <Tooltip title=\"Cliquez pour les statistiques\">\r\n                            //             <IconButton  onClick={stats} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                            //                 <EqualizerIcon />\r\n                            //             </IconButton>\r\n                            //         </Tooltip> */}\r\n                            //        </div> \r\n                            //     }\r\n                            //     />\r\n                            // </div> \r\n                        ))}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                {/* <List>\r\n                    {allAnswers && allAnswers.map((quiz, index) => (\r\n                        <ListItem button onClick= {() => setActiveQuiz(quiz, index, quiz.quiz_id)} >\r\n                            <ListItemIcon>\r\n                                <BookOutlined />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\r\n                                 <h4> \r\n                                     {quiz.quiz_title} {''} \r\n                                 </h4>\r\n                            } />\r\n                        </ListItem>\r\n                    ))}\r\n                </List> */}\r\n            </div>)}\r\n\r\n            <div>\r\n                {currentQuiz && (displayStudentList || displayStats) ? (\r\n                    <div>\r\n                        <IconButton  onClick={()=>backToQuizzes()} style={{float:\"left\", color:\"#4257b2\"}}>\r\n                        <ArrowBackIcon />\r\n                        </IconButton>\r\n                        <center><h4>{'Vous avez sélectionné le quiz : '}{currentQuiz.quiz_id}</h4></center>\r\n                        \r\n                        { displayStudentList && <div >\r\n                            <h4>{'Liste des étudiants : '}</h4>\r\n                            {currentQuiz.quiz_answers && currentQuiz.quiz_answers.map((students, index) => (\r\n                                <div>\r\n                                    <h4 onClick={() => setActiveStudent(students)}>{students.student_id}</h4>\r\n                                </div>\r\n                            ))}\r\n                        </div>}\r\n\r\n                        <div>\r\n                            {currentStudent && (\r\n                                <div>\r\n                                    <h4>{'Affichage des réponses sur  : '}{currentStudent.student_id}</h4>\r\n                                    {currentStudent && currentStudent.student_answers.map((answers, index) => (\r\n                                        <div> \r\n                                            <h4>{answers.question_answer_id}{' .'}{answers.answer}</h4>\r\n                                            <h4>{'Explication : '}{answers.explanation}</h4>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div style={{marginBottom: \"20px\"}}>\r\n\r\n                            {/* <button className=\"btnn\" onClick={stats}>Cliquez pour les statistiques</button> */}\r\n                        </div>\r\n                        <Container>\r\n                            {array && displayStats && (\r\n                                <div>\r\n                                    <Grid container spacing={3}>\r\n                                        {array && array.map((answer, index) => (\r\n                                            <Grid item sm={12} md={6} lg={4} >\r\n                                                <Card elevation={2}>\r\n                                                    <CardHeader\r\n                                                        action={\r\n                                                            <IconButton onClick={handlePieChartChange}>\r\n                                                                <SwapHorizRounded/>\r\n                                                            </IconButton>\r\n                                                        }\r\n                                                        title={\"\"}\r\n                                                        subheader={actualQuiz ? (`Q${index + 1}.`+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)} \r\n                                                    />\r\n                                                    <CardContent>\r\n                                                        <DoughnutChart\r\n                                                        pieData={pieData}\r\n                                                        labels={getLabels(answer)}\r\n                                                        answerValues={getAnswerValues(answer, getLabels(answer))} />\r\n                                                    </CardContent>\r\n                                                </Card>\r\n                                            </Grid>\r\n                                        ))}\r\n                                    </Grid>\r\n                                </div>\r\n                                                        \r\n                                ) }\r\n\r\n                            {explanationStats && (\r\n                                <div>\r\n                                        <Grid container spacing={3} >\r\n                                            {explanationStats && explanationStats.map((explanation, index) => (\r\n                                                <Grid item sm={12} md={6} lg={6}>\r\n                                                    <Card elevation={2}>\r\n                                                        <CardHeader\r\n                                                        action={\r\n                                                            <IconButton onClick={handleBarChartChange}>\r\n                                                                <SwapHorizRounded/>\r\n                                                            </IconButton>\r\n                                                        } \r\n                                                        title={\"\"}\r\n                                                        subheader={actualQuiz ? (`Q${index + 1}.`+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)}\r\n                                                        />\r\n                                                        <CardContent>\r\n                                                            <BarChart\r\n                                                                barData={barData} \r\n                                                                explanationArray={allExplanations[index]}\r\n                                                                explanationLabels={getLabels(explanation)}\r\n                                                                explanationValues={getExplanationValues(explanation, getLabels(explanation))} \r\n                                                            />\r\n                                                        </CardContent>\r\n                                                    </Card>\r\n                                                </Grid>\r\n                                            ))}\r\n                                        </Grid>\r\n                                </div>         \r\n                                )}\r\n                        </Container>    \r\n                    </div>\r\n                ) : (<h4>Veuillez sélectionner un quiz pour afficher les réponses</h4>)}\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllAnswers;","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n// import {FaTimes} from 'react-icons/fa'\r\nimport { List, ListItem, ListItemText, Button, ListItemIcon } from '@material-ui/core';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport NoteCard from \"./NoteCard\";\r\n\r\n\r\n\r\nconst AllQuestions = () => {\r\n    const [allQuizzes, setallQuizzes] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [radioOptions, setradioOptions] = useState({});\r\n    const [checkedItems, setCheckedItems] = useState([]); \r\n    const [displayQuiz, setdisplayQuiz] = useState(false);\r\n    const [displayQuizzes, setdisplayQuizzes] = useState(true)\r\n\r\n    // const [currentUser] = useState(AuthService.getCurrentUser());\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n\r\n    // LOAD ALL QUIZZES FROM DATABASE ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n    useEffect(() => {\r\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllQ').then((response) => {\r\n          console.log(response.data);\r\n          setallQuizzes(response.data) \r\n          setShowSpinner(false);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    }, []);\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index) => {\r\n        console.log(quiz)\r\n        setcurrentQuiz(quiz);\r\n        setdisplayQuizzes(false);\r\n        setdisplayQuiz(true);\r\n        \r\n    };\r\n\r\n    const backToQuizzes = () => {\r\n        setdisplayQuizzes(true);\r\n        setdisplayQuiz(false);\r\n    }\r\n\r\n    // RETURN CHECKED VALUE(true or false)\r\n    const checkRadioButton = (question_id, label) => {\r\n        if (!radioOptions[question_id]) {\r\n            return false;\r\n        }\r\n        return radioOptions[question_id] === label;\r\n    }\r\n\r\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n    const setradio = (id , answer) => {\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === id);\r\n        console.log(find_question)\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === id).answer = answer;\r\n            setradioOptions((state) => {\r\n                console.log(state);\r\n                return {\r\n                    ...state,\r\n                    [id] : answer\r\n                }\r\n            });\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        else{\r\n        setradioOptions((state) => {\r\n            console.log(state);\r\n            return {\r\n                ...state,\r\n                [id] : answer\r\n            }\r\n        });\r\n\r\n        setCheckedItems([\r\n            ...checkedItems,\r\n             {\r\n                question_answer_id : id,\r\n                answer: answer,\r\n                explanation: 'no explanation'\r\n            }\r\n        ]);}\r\n    }\r\n\r\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n        console.log(find_question)\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        \r\n    }\r\n\r\n    // SUBMIT ANSWERS TO THE BACKEND  // DISABLED BECAUSE ADMIN MUST NOT SUBMIT\r\n    // const submitAnswers = () =>{\r\n    //     setmessage('');\r\n    //     setsuccessful(false);\r\n    //     const answers = {\r\n    //         quiz_id : currentQuiz.quiz_id,\r\n    //         quiz_title : currentQuiz.quiz,\r\n    //         quiz_answers : {\r\n    //             student_id : currentUser.message.email,\r\n    //             student_answers : checkedItems\r\n    //         }\r\n    //     }\r\n    //     console.log(\"current: \", currentQuiz);\r\n\r\n    //     console.log(\"Radio Answer: \", radioOptions);\r\n    //     console.log(\"CheckedItems: \", checkedItems);\r\n    //     console.log(\"Final: \", answers);\r\n    //     Axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n    //         answers\r\n    //       }).then((res) => {\r\n    //             console.log(res);\r\n    //             if(res){\r\n    //                 //   window.location.reload(false);\r\n    //                 setmessage('You submitted Quiz as Admin or Teacher... Please Delete from the answers page else Stats will be affected');\r\n    //                 setsuccessful(true);\r\n    //                 setCheckedItems([]);\r\n    //                 setradioOptions({});\r\n\r\n    //             }\r\n    //       }).catch(error => {\r\n    //             console.log(error);\r\n    //             const errMessage =\r\n    //             (error.response.data.message[0].password || (error.response &&\r\n    //               error.response.data &&\r\n    //               error.response.data.message)) ||\r\n    //             error.message ||\r\n    //             error.toString();\r\n    //             console.log(errMessage);\r\n    //           setmessage(errMessage);\r\n    //             setsuccessful(false);            \r\n    //       });\r\n\r\n\r\n    // }\r\n\r\n\r\n\r\n    //DELETE SLECTED QUIZ WITH THE QUIZ ID FROM DAATABASE\r\n    // const onDelete = (id) => {\r\n    //     Axios.delete(`https://neuroeducation-feedback.herokuapp.com/api/delete/${id}`)\r\n    //     .then((res) => {\r\n    //         console.log(res)\r\n    //         setallQuizzes(allQuizzes.filter((question) => question._id !== id))\r\n    //     })\r\n    //     .catch(err => {\r\n    //         console.log(err); \r\n    //     });\r\n    // }; \r\n\r\n\r\n    return (\r\n        <div >\r\n            {/* html for spinner */}\r\n            {showSpinner && <div class=\"spinner\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            }\r\n            {!showSpinner && displayQuizzes && (<div  style={{borderRadius: \"10px\", marginTop: \"10px\"}}>\r\n                <List>\r\n                    {/* <h4></h4> */}\r\n                    <div >      \r\n                      <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                        <h4 style={{padding: \"20px\", \"margin-bottom\": \"10px\"}}> <span>Liste de quiz</span> </h4>\r\n                        <div className=\"row\" >\r\n                            {displayQuizzes && allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\" onClick= {() => setActiveQuiz(quiz, index)}> \r\n                                    <NoteCard note={quiz.quiz_id}  handleDelete={\"no delete\"} color={'#4257b2'}/>\r\n                                </div> \r\n                            ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* { displayQuizzes && allQuizzes && allQuizzes.map((quiz, index) => (\r\n                        <ListItem button onClick= {() => setActiveQuiz(quiz, index)} >\r\n                            <ListItemIcon>\r\n                                <BookOutlined />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\r\n                                <h4> \r\n                                    {quiz.quiz} {''} \r\n                                </h4>\r\n                            } />\r\n                        </ListItem>\r\n                    ))} */}\r\n                </List>\r\n            </div>)}\r\n\r\n            <div>\r\n                {(displayQuiz && currentQuiz ) && (\r\n                    <div className=\"container-questions\">\r\n                        <Button onClick={()=> backToQuizzes()}><ArrowBackIcon fontsize=\"large\" style={{color: \"#4257b2\"}}/></Button> \r\n                        <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n                        {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                            <div key={questions.question_id}>\r\n                                <p><strong>{questions.question_id}{'. '}{questions.question_title}</strong></p>    \r\n                                <div>\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Oui\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Oui\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Plutot Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Non\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Plutot Non\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Non\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Non\r\n                                </div>\r\n                                {radioOptions[questions.question_id] === \"Plutot Non\"\r\n                                || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n                                || radioOptions[questions.question_id] === \"Non\" ? (\r\n                                    <div>\r\n                                        {questions.question_options && questions.question_options.map((options, index) => ( \r\n                                            <div>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" value={options.options_id} \r\n                                                    checked={checkedItems[options.option_text]}  \r\n                                                    onChange={(e) => \r\n                                                        setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                                                    }\r\n                                                    />\r\n                                                    <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                                                </label>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ) : (<span>Aucune explication requise</span>)}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) }\r\n            </div>\r\n            {/* <Button disableElevation variant=\"contained\" onClick={submitAnswers}>Soumettre les réponses</Button> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllQuestions\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n}));\r\n\r\nexport default function FormCard() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card style={{height: \"500px\", width: \"100%\", backgroundImage: `url(${\"/blueBG.png\"})`}}\r\n    >\r\n      <div style={{backgroundColor: \"white\", height: \"100%\", width:\"70%\"}}>\r\n\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport AuthService from \"../services/auth.service\";\r\nimport FormCard from './formCard'\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default class AdminRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\r\n\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      admin: false,\r\n      teacher: false,\r\n      roles : [],\r\n      successful: false,\r\n      message: \"\",\r\n      noRoleError: false,\r\n      mdpTmp: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCheckbox(e) {\r\n    let target = e.target;\r\n    let value = target.checked;\r\n    let name = target.name;\r\n    this.setState({\r\n        [name]: value,\r\n        noRoleError: false\r\n    })\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (!this.state.admin && !this.state.teacher) {\r\n      return (this.setState({\r\n        noRoleError: true\r\n      }))\r\n    }\r\n    else {\r\n      let roles = this.state.roles;\r\n      if (this.state.admin) {\r\n        roles.push(\"ROLE_ADMIN\");\r\n      }\r\n      if (this.state.teacher) {\r\n        roles.push(\"ROLE_TEACHER\")\r\n      }\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.adminRegister(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.roles,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: \"Compte créé avec succès\",\r\n            successful: true,\r\n            mdpTmp: response.data.mdpTmp\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n                <TextField\r\n                    onChange={this.onChangeFirstname}\r\n                    // className={classes.field}\r\n                    // label=\"Note Title\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required //just adds the asterix\r\n                    // error={titleError} //this prop just adds a 'red styling' to the TextField to indicate an error, it is set to either true or false\r\n                />\r\n        \r\n\r\n        <FormCard/>\r\n\r\n        <div className=\"card card-container\">\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Prenom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangeFirstname}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Nom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangeLastname}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"teacher\"\r\n                      checked={this.state.teacher}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Professeur\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"admin\"\r\n                      checked={this.state.admin}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Administrateur\r\n                    </label>\r\n                  </div>\r\n\r\n                  {this.state.noRoleError && \r\n                    <div className=\"container\">\r\n                      <div className=\"itsanerror\">Vous devez sélectionner au moins un rôle</div>\r\n                    </div>\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button  className=\"btnn\">Créer le compte</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n\r\n                  {this.state.mdpTmp && (\r\n                    <div>\r\n                      <br></br><br></br>\r\n                      Votre mot de passe temporaire est :\r\n                      {\" \" + this.state.mdpTmp}\r\n                      <br></br><br></br>\r\n                      Vous pourrez le modifier en vous connectant à votre profil\r\n                    </div>\r\n                  )}\r\n                  \r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst ProtectedRoute =({ component: Component, role, ...rest })=> {\r\n        const currentUser = AuthService.getCurrentUser()\r\n        let isAuthenticated = '';\r\n        let isAuthorized = false;\r\n\r\n        if(currentUser){\r\n            isAuthenticated = currentUser.token;\r\n\r\n            role.map(roles => {\r\n                if(currentUser.message.roles.includes(roles)){\r\n                    isAuthorized = true;\r\n                } \r\n                return isAuthorized\r\n            });\r\n        }\r\n\r\n        return (isAuthenticated && (isAuthorized))? (\r\n            <Component />\r\n        ) : (\r\n            <div>\r\n            <Redirect to={{ pathname: '/home' }} />\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default ProtectedRoute;","\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nconst LineChart = ({ labels, data }) => {\r\n    return ( \r\n        <div>\r\n            <Line\r\n                data={{\r\n                    labels: labels,\r\n                    datasets: [{\r\n                        data: data,\r\n                        borderColor: 'rgba(75, 192, 192, 0.6)'\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    },\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            label: (item, datax) => {\r\n                                let string = \"\"\r\n                                switch(data[item.index]){\r\n                                    case 4:\r\n                                        string = \"Oui\"\r\n                                        break\r\n                                    case 3:\r\n                                        string = \"Plutot Oui\"\r\n                                        break\r\n                                    case 2: \r\n                                        string = \"Plutot Non\"\r\n                                        break\r\n                                    default:\r\n                                        string = \"Non\"\r\n                                        break\r\n                                }\r\n                                return string\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LineChart;\r\n","//CREATE LABELS FOR LINE CHART \r\nconst LineLabels = (integer) => { //integer is == groupArray.length\r\n    let array = []\r\n    switch(integer){\r\n        case 1:\r\n            array = [\"1er quiz\"];\r\n            break;\r\n        case 2:\r\n            array = [\"1er quiz\", \"2e quiz\"];\r\n            break;\r\n        case 3:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\"];\r\n            break;\r\n        case 4:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\"];\r\n            break;\r\n        case 5:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\"];\r\n            break;\r\n        case 6:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\"];\r\n            break;\r\n        case 7:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\"];\r\n            break;\r\n        case 8:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\"];\r\n            break;\r\n        case 9:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\"];\r\n            break;\r\n        case 10:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\"];\r\n            break;\r\n        case 11:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\"];\r\n            break;\r\n        case 12:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\"];\r\n            break;\r\n        case 13:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\"];\r\n            break;\r\n        case 14:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\"];\r\n            break;\r\n        default:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\", \"15e quiz\"];\r\n            break;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  export default LineLabels;\r\n\r\n","import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Avatar, Card, CardContent, CardHeader, Grid, IconButton, List, ListItem, ListItemAvatar, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport MoreVert from '@material-ui/icons/MoreVert';\r\nimport LineChart from './LineChart';\r\nimport LineLabels from './LineLabels';\r\nimport SearchService from \"../services/search.service\";\r\n\r\n\r\n\r\n\r\nconst AllStudents = () => {\r\n    const [allStudents, setallStudents] = useState([]);\r\n    const [allQuizzes, setallQuizzes] = useState(null)\r\n    // const [message, setmessage] = useState('');\r\n    const [errorMessage, seterrorMessage] = useState('')\r\n    // const [successful, setsuccessful] = useState(false);\r\n    const [displayQuizzes, setdisplayQuizzes] = useState(null);\r\n    const [displayActiveQuiz, setdisplayActiveQuiz] = useState(false)\r\n    const [displayEvolution, setdisplayEvolution] = useState(false);\r\n    const [displayMain, setdisplayMain] = useState(true);\r\n    const [currentStudent, setcurrentStudent] = useState(null);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n    const [lineArray, setLineArray] = useState([]);\r\n    const [displayLineChart, setDisplayLineChart] = useState(false);\r\n    const [actualQuiz, setactualQuiz] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get( \"https://neuroeducation-feedback.herokuapp.com/api/findAllStudents\")\r\n        .then(res => {\r\n            console.log(res.data);\r\n            setallStudents(res.data);\r\n            setShowSpinner(false);\r\n        })\r\n        .catch(error => {\r\n            const resMessage =\r\n            (error.response && error.response.data && error.response.data.message) \r\n            || error.message || error.toString();\r\n  \r\n            seterrorMessage(resMessage);\r\n        });\r\n\r\n    }, [])\r\n\r\n    const getAllQuizzes = (student_id, name) => {\r\n        setcurrentQuiz(null);\r\n        setallQuizzes([]);\r\n        setdisplayQuizzes(null) \r\n        axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\r\n            console.log(response.data.quizzes);\r\n            if((response.data.quizzes).length ){\r\n                setallQuizzes(response.data.quizzes)\r\n                setdisplayQuizzes(true); \r\n            }\r\n            else{\r\n                setallQuizzes(null)\r\n                setdisplayQuizzes(false)  \r\n            }\r\n            setActiveStudent(name);\r\n          })\r\n          .catch(function (err) {\r\n              seterrorMessage(err.response.data.message|| err.response.data.message[0].error);\r\n          });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n      // SET SELECTED(CLICKED) QUIZ\r\n  const setActiveQuiz = (quiz, index) => {\r\n    console.log(quiz);\r\n    setdisplayActiveQuiz(true);\r\n    setcurrentQuiz(quiz);\r\n    let tempLineArray = [];\r\n    quiz.quiz_answers.forEach((quiz, index) => {\r\n        tempLineArray.push(getAllAns(quiz))\r\n    })\r\n    setLineArray(tempLineArray)\r\n\r\n    \r\n    setdisplayQuizzes(null);\r\n\r\n// GET ACTUAL QUESTIONS FROM DATABASE\r\nSearchService.searchQuiz(\r\n    quiz.quiz_id,\r\n  ).then(\r\n    response => {\r\n      console.log(response.data);\r\n    //   setsuccessful(true);\r\n      setactualQuiz(response.data);\r\n    })\r\n    .catch(\r\n    error => {\r\n      console.log(error.response);\r\n      const resMessage =\r\n        (error.response && error.response.data && error.response.data.message) \r\n        || error.message || error.toString();\r\n\r\n    //   setmessage(resMessage);\r\n    //   setsuccessful(false);\r\n    }\r\n  );\r\n  };\r\n\r\n  const setActiveStudent = (name) => {\r\n    console.log(name)\r\n    setcurrentStudent(name);\r\n    // setcurrentQuiz(quiz);\r\n    // setcurrentIndex(index)\r\n  };\r\n\r\n  const backToAllQuizzes = () => {\r\n    setdisplayQuizzes(true);\r\n    setdisplayActiveQuiz(false);\r\n  }\r\n\r\n  const evolution = () => {\r\n    if(displayMain===true && displayEvolution===false){\r\n        setdisplayMain(false); \r\n        setdisplayEvolution(true);\r\n        setDisplayLineChart(true);\r\n    } \r\n    else if(displayMain===false && displayEvolution===true){\r\n        setdisplayMain(true); \r\n        setdisplayEvolution(false);\r\n        setDisplayLineChart(false);\r\n    } \r\n\r\n\r\n  }\r\n  // CREATE ARRAY CONTAINING ANSWERS OF EACH ATTEMPT\r\n  const getAllAns = quiz => {\r\n    let array = []\r\n    quiz.student_answers.forEach(answers=> {\r\n        switch(answers.answer){\r\n            case \"Non\":\r\n                array.push(1)\r\n                break\r\n            case \"Plutot Non\":\r\n                array.push(2)\r\n                break\r\n            case \"Plutot Oui\":\r\n                array.push(3)\r\n                break\r\n            default:\r\n                array.push(4)\r\n                break\r\n        }\r\n    })\r\n    return array\r\n  }\r\n\r\n  //GENERATE DATA VALUES FOR LINE CHART \r\n  const getLineData = (groupArray, index) => {\r\n    let dataArray = []\r\n    groupArray.forEach((item) => {\r\n        dataArray.push(item[index])\r\n    })\r\n    return dataArray\r\n  }\r\n\r\n \r\n \r\n\r\n    return (\r\n    \r\n        <div className=\"container-questions\">\r\n            {errorMessage ? (\r\n                <div className=\"form-group\">\r\n                    <div\r\n                    className={ \"alert alert-danger\"}\r\n                    role=\"alert\"\r\n                    >\r\n                    {errorMessage}\r\n                    </div>\r\n                </div>\r\n            ):(\r\n                <div>\r\n                    {displayMain  && <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n                            <h3>{'Liste des étudiants : '}</h3>\r\n                            {showSpinner && (<div class=\"spinner\">\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>)}\r\n                            {!showSpinner && (<div  class=\"quiz\" style={{borderRadius: \"10px\"}}>\r\n                                    <List>\r\n                                        {allStudents && allStudents.map((student,index) =>(\r\n                                            <ListItem button onClick={()=> getAllQuizzes(student.email,student.firstname +' ' +student.lastname )}>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar>\r\n                                                    {(student.firstname[0] +' ' +student.lastname[0]).toUpperCase()}\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText primary={<h4>{student.firstname +' ' +student.lastname}</h4>} />\r\n                                            </ListItem>\r\n                                        ))}\r\n                                    </List>\r\n                                </div>)}\r\n                        </div>\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-6\">  \r\n                            {(allQuizzes && displayQuizzes) && (\r\n                                <div >\r\n                                    <h4>{'Questionnaires auxquels ont répondu : '}</h4>\r\n                                    <h4> {currentStudent}</h4>\r\n                                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                        <List>\r\n                                        {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                            <ListItem button onClick= {() => setActiveQuiz(quiz, index)}>\r\n                                                <ListItemIcon>\r\n                                                    <BookOutlined />\r\n                                                </ListItemIcon>\r\n                                                <ListItemText primary={\r\n                                                    <h4>\r\n                                                    {quiz.quiz_id} \r\n                                                    </h4>\r\n                                                }/>\r\n                                            </ListItem>\r\n                                        ))}\r\n                                        </List>\r\n                                    </div>\r\n                                </div>\r\n                            ) }\r\n                            {(displayQuizzes===false) && (\r\n                                <div>\r\n                                    <h4>{'Questionnaires auxquels ont répondu : '}</h4>\r\n                                    <h4> {currentStudent}</h4>\r\n                                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                        <h4>Cet étudiant n'a répondu à aucun quiz</h4>\r\n                                    </div>\r\n                                </div>\r\n                            \r\n                            )}\r\n                            <div >\r\n                            {(currentQuiz && displayActiveQuiz) && \r\n                                <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                    <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <BookOutlined />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={\r\n                                            <h4>\r\n                                            {currentQuiz.quiz_id} \r\n                                            </h4>\r\n                                        }/>\r\n                                    </ListItem>\r\n                                    <h4>{currentStudent+' has taken this quiz '+ (currentQuiz.quiz_answers.length) +' times'}</h4>\r\n                                    <button className=\"btnn\" onClick={()=> backToAllQuizzes()}>Back</button>\r\n                                    <button className=\"btnn\" onClick={()=> evolution()}>{'View Answers & Evolution'}</button>\r\n                                </div>\r\n                            }\r\n                                \r\n\r\n                        </div> \r\n                        </div>\r\n\r\n            \r\n                    </div>\r\n                    }\r\n                    <div>\r\n                        { (currentQuiz && displayEvolution) && <button className=\"btnn\" onClick={()=> evolution()}>Back</button>}\r\n                        \r\n                        {/* <div className=\"row\">\r\n                            \r\n                            {(currentQuiz && displayEvolution) && currentQuiz.quiz_answers.map((quiz, index)=>(                            \r\n                                <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n                                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                        <h4>{'Attempt number ' + (index+1)}</h4>\r\n                                        {quiz.student_answers.map((answers, idx)=>(\r\n                                            <div>\r\n                                            <h4>{'Question '+answers.question_answer_id}</h4>\r\n                                            <h4>{'answer: ' +answers.answer +' explanation: ' +answers.explanation}</h4>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>    \r\n                                </div>  \r\n                            ))}\r\n                        </div> */}\r\n\r\n                        {displayLineChart && (\r\n                            <Grid container spacing={3}>\r\n                                {(lineArray.length && displayLineChart) && lineArray[0].map((attempt, index) => (\r\n                                    <Grid item md={6} sm={12} lg={4} >\r\n                                        <Card elevation={2}>\r\n                                            <CardHeader\r\n                                                action={\r\n                                                    <IconButton>\r\n                                                        <MoreVert />\r\n                                                    </IconButton>\r\n                                                }\r\n                                                title={actualQuiz ? (`Q${index + 1}.`+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)}\r\n                                                subheader={`Oui-4 Plutot Oui-3 Plutot Non-2 Non-1`}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <LineChart labels={LineLabels(lineArray.length)} data={getLineData(lineArray, index)} />\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        )}\r\n                    </div>    \r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllStudents\r\n","import {useState, useEffect} from 'react'\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\nconst VerifyAccount = ({match: { params }} ) => {\r\n    const [message, setmessage] = useState('');\r\n    const [successful, setsuccessful] = useState(false)\r\n\r\n    useEffect(() => {\r\n        AuthService.verifyAccount(params.token)\r\n        .then(response=>{\r\n            setmessage(response.data.message);\r\n            setsuccessful(true);\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n            setmessage(error.response.data.message|| error.response.data);\r\n            setsuccessful(false);\r\n        })\r\n    }, [params.token])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerifyAccount\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\r\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n\r\nconst AdminDashboard = () => {\r\n    let history = useHistory(); \r\n    const classes = useStyles();\r\n\r\n\r\n    const routeChange = (path, item) =>{\r\n    let newPath = path;\r\n    if(item===\"DATABASE\"){\r\n        return window.location.href = newPath;\r\n    }\r\n    history.push(newPath);\r\n  }\r\n\r\n  const childRoute = route =>{\r\n    if(route===\"USER\"){\r\n        window.location.href = 'http://localhost:5050/admin/resources/User'\r\n    }\r\n    else if(route===\"QUIZZES\"){\r\n        window.location.href = 'http://localhost:5050/admin/resources/Quizzes'\r\n    }\r\n    else if(route===\"HISTORY\"){\r\n        window.location.href = 'http://localhost:5050/admin/resources/history'\r\n    }\r\n  }\r\n\r\n  const dashboardArray = [\r\n      {\r\n        title: \"ADD ACCOUNT\",\r\n        path: '/adminRegister',\r\n        children: [],\r\n        message: \"Add a new Admin or Teacher into the Database.\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <SupervisorAccountIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n    {\r\n        title: \"EVOLUTION \",\r\n        path: '/students',\r\n        children: [],\r\n        message: \"As an admin or teacher, view all students progress with a few clicks\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <TrackChangesIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n    {\r\n        title: \"ALL QUIZZES\",\r\n        path: '/questions',\r\n        children: [],\r\n        message: \"A list of all quizzes in the database. View all with a few clicks\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <AssignmentIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },    \r\n    {\r\n        title: \"ALL ANSWERS\",\r\n        path: '/answers',\r\n        children: [],\r\n        message: \"A history of all student answers in the database. View all with a few clicks\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <RecentActorsIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n    {\r\n        title: \"DASHBOARD\",\r\n        path: '/dashboard',\r\n        children: [],\r\n        message: \"A link to the admin dashboard where you can see everything\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <DashboardIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n    {\r\n        title: \"DATABASE\",\r\n        path: 'https://neuroeducation-feedback.herokuapp.com/admin/',\r\n        children: ['USER', 'QUIZZES', 'HISTORY'],\r\n        message: \"This is a special page for the Admin. In desperate times of Database management this is a place to go.\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <StorageIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n        <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n            <div className=\"row\">\r\n                {dashboardArray && dashboardArray.map(item => (\r\n                    <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"> \r\n                        <Card className={classes.root} style={{height:200, padding: \"20px\", \"margin-bottom\": \"10px\"}}>\r\n                            <CardActionArea>\r\n                                {/* <CardMedia\r\n                                className={classes.media}\r\n                                image=\"/static/images/cards/contemplative-reptile.jpg\"\r\n                                title=\"Contemplative Reptile\"\r\n                                /> */}\r\n                                <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n                                    {/* <div className=\"row\" >\r\n                                        hii\r\n                                    {Parser(item.icon)}\r\n                                    </div> */}\r\n                                    {item.title}\r\n                                    {item.icon}\r\n                                    {/* <StorageIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" /> */}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {item.message}\r\n                                </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                                <Button size=\"small\" style={{background:\"#3ccfcf\", color: \"white\"}} onClick={()=>routeChange(item.path, item.title)}>\r\n                                GO TO\r\n                                </Button>\r\n                                {item.children && item.children.map(child=> (\r\n                                    <Button size=\"small\" style={{background:\"#3ccfcf\", color: \"white\"}} onClick={()=>childRoute(child)}>\r\n                                        {child}\r\n                                    </Button>\r\n                                 ))\r\n                                }\r\n                            </CardActions>\r\n                        </Card>\r\n                    </div>\r\n                ))\r\n   }\r\n            </div>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import React, {useEffect} from 'react';\r\nimport { Link} from \"react-router-dom\";\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n// import HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n      console.log(props)\r\n  }, [props])\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n      // style={{background:\"#e6e6d5\"}}\r\n    >\r\n\r\n    <List style={{\"paddingTop\": \"30px\", background: \"#4257b2\"}}>\r\n        <ListItem button key={\"home\"} style={{color: 'white'}}>\r\n            <ListItemIcon> <MenuIcon style={{color: 'white'}}fontsize=\"large\"/></ListItemIcon>\r\n            <ListItemText primary={\"MENU\"} />   \r\n          </ListItem>\r\n \r\n      </List>\r\n      <List >\r\n        {props.lists && (props.lists).map((text, index) => (\r\n         <Link to={text.link} style={{color: '#4257b2', textDecoration: 'none'}}>   \r\n          <ListItem button key={text.title}>\r\n            <ListItemIcon>{text.icon}</ListItemIcon>\r\n            <ListItemText primary={text.title} />   \r\n          </ListItem>\r\n         </Link> \r\n        ))}\r\n      </List>\r\n      {/* <Divider /> */}\r\n      <List style={{position: \"absolute\",bottom: 0}}>\r\n        {props.actions.map((text, index) => (\r\n         <Link to={text.link} onClick={text.onclick} style={{color: '#4257b2', textDecoration: 'none'}}>   \r\n            <ListItem button key={text.title}>\r\n                <ListItemIcon>{text.icon}</ListItemIcon>\r\n                <ListItemText primary={text.title} />   \r\n            </ListItem>\r\n        </Link>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div >\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}><MenuIcon style={{color:\"white\",  float:\"left\"}} fontSize=\"large\"></MenuIcon></Button>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)} style={{background:\"#e6e6d5\"}}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n// import axios from 'axios';\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Home2 from \"./components/home2.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport PostSubmitForm from \"./components/postSubmitForm.component\";\r\nimport AllAnswers from \"./components/all-answers.component\";\r\nimport AllQuestions from './components/allquestions.component';\r\nimport AdminRegister from \"./components/admin-register.component\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport ProtectedRoute from \"./components/protected-routes.component\";\r\nimport AllStudents from \"./components/all-students.component\";\r\nimport VerifyAccount from \"./components/verify-account.component\";\r\nimport AdminDashboard from \"./components/Admin/admin-dashboard\";\r\nimport TemporaryDrawer from \"./components/navbar\";\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n\r\nconst theme = createMuiTheme({\r\n  palette:{\r\n    primary: {\r\n      main: \"#DCDCDC\"\r\n    }\r\n  }\r\n})\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showAdminBoard: false,\r\n      showTeacherBoard: false,\r\n      currentUser: undefined,\r\n      admin:[\"ROLE_ADMIN\"],\r\n      adminTeacher:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\"],\r\n      allUsers:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\" , \"ROLE_STUDENT\"],\r\n      studentAdmin: [\"ROLE_STUDENT\", \"ROLE_ADMIN\"]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    \r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showAdminBoard: user.message.roles.includes(\"ROLE_ADMIN\"),\r\n        showTeacherBoard: user.message.roles.includes(\"ROLE_TEACHER\"),\r\n        navList : [\r\n        // {\r\n        //   title : \"Accueil\",\r\n        //   link : '/home'\r\n        // },\r\n        (user && !user.message.roles.includes(\"ROLE_TEACHER\")) && {\r\n          title : \"Utilisateur\",\r\n          link : '/user',\r\n          icon: <FindInPageIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\") ) && {\r\n          title : \"Ajouter un Quiz\",\r\n          link : '/addQuiz',\r\n          icon: <AddBoxIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {\r\n          title : \"Page Questions\",\r\n          link : '/questions',\r\n          icon: <SupervisorAccountIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {            \r\n          title : \"Page Reponses\",\r\n          link : '/answers',\r\n          icon: <AssignmentIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {            \r\n          title : \"Page Etudiants\",\r\n          link : '/students',\r\n          icon: <RecentActorsIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        user.message.roles.includes(\"ROLE_ADMIN\")  && {\r\n          title : \"Admin Dashboard\",\r\n          link : '/dashboard',\r\n          icon: <DashboardIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        }\r\n\r\n        \r\n      ],\r\n      actions : [user &&  {\r\n          title : (user.message.firstname),\r\n          link : '/profile',\r\n          onclick : '',\r\n          icon: <AccountCircleIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        user &&  {\r\n          title : \"Deconnecxion\",\r\n          link : '/home',\r\n          onclick : this.logOut,\r\n          icon: <ExitToAppIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        }\r\n      ]\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n    this.setState({\r\n      currentUser: undefined,\r\n      showAdminBoard: false,\r\n      showTeacherBoard: false\r\n    })\r\n    if (!this.state.currentUser) {  \r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //  const { currentUser, showAdminBoard, showTeacherBoard, admin, adminTeacher, allUsers, student, navList } = this.state;\r\n    const { currentUser, admin, adminTeacher, allUsers, studentAdmin, navList } = this.state;\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark \" style={{background:'#4257b2'}}>\r\n            \r\n            {currentUser && \r\n              <TemporaryDrawer lists = {navList} actions={this.state.actions}></TemporaryDrawer>\r\n              }\r\n\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n              Outsmarted\r\n            </Link>\r\n            \r\n            {/* <div className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/home\"} className=\"nav-link\">\r\n                  <Button color=\"primary\">Accueil</Button>\r\n                </Link>\r\n              </li>\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/admin\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Ajouter un quiz</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n              {showAdminBoard && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/adminRegister\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">Ajouter un compte</Button>\r\n                  </Link>\r\n                </li>\r\n              )}\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/questions\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Page Questions</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/answers\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Page Réponses</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/students\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Page Etudiants</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n                {(currentUser && !showTeacherBoard) && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/user\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">Répondre à un quiz</Button>\r\n                  </Link>\r\n                </li>\r\n                )}\r\n\r\n                {showAdminBoard  && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/dashboard\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">TEST</Button>\r\n                  </Link>\r\n                </li>\r\n                )}\r\n            </div> */}\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/profile\"} className=\"nav-link\">\r\n                    <Button color=\"primary\" style={{textTransform: \"none\"}}><AccountCircleIcon style={{color:\"white\",  float:\"right\"}} fontSize=\"large\" />{currentUser.message.firstname}</Button>\r\n                  </Link>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                  <Link to={\"/home\"} className=\"nav-link\" onClick={this.logOut}>\r\n                    <Button color=\"primary\">Déconnexion</Button>\r\n                  </Link>\r\n                </li> */}\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\">\r\n                    <Button color=\"primary\" style={{textTransform: \"none\"}}>Se Connecter</Button>\r\n                  </Link>\r\n                </li>\r\n                \r\n\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\">\r\n                    <Button color=\"primary\" style={{textTransform: \"none\", font:\"Robotto\"}}>Créer un Compte</Button>\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            )}\r\n\r\n            </nav>\r\n\r\n            <div className=\"container pt-3\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/home\" component={Home2} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                <Route exact path=\"/verifyAccount/:token\" component={VerifyAccount} />\r\n                <Route exact path=\"/postSubmitForm\" component={PostSubmitForm}/>\r\n                <ProtectedRoute exact path=\"/adminRegister\" component={AdminRegister} role={admin}/>\r\n                <ProtectedRoute exact path=\"/profile\" component={Profile} role={allUsers}/>\r\n                <ProtectedRoute exact path=\"/user\" component={BoardUser} role={studentAdmin}/>\r\n                <ProtectedRoute exact path=\"/questions\" component={AllQuestions} role={adminTeacher}/>\r\n                <ProtectedRoute exact path=\"/answers\" component={AllAnswers} role={adminTeacher}/>\r\n                <ProtectedRoute exact path=\"/students\" component={AllStudents} role={allUsers}/>\r\n                <ProtectedRoute exact path=\"/addQuiz\" component={BoardAdmin} role={adminTeacher}/>\r\n                <ProtectedRoute exact path=\"/dashboard\" component={AdminDashboard} role={admin}/>\r\n                <ProtectedRoute  component={Home} />\r\n              </Switch>\r\n            </div>\r\n          \r\n\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n\r\n  }\r\n    \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// serviceWorker.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}