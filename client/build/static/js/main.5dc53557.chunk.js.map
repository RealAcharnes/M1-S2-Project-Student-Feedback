{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","components/home.component.js","components/home2.component.js","components/profile.component.js","services/auth-header.js","services/user.service.js","components/board-user.component.js","services/admin-submit-form.js","components/board-admin.component.js","components/postSubmitForm.component.js","components/BarChart.js","components/DoughnutChart.js","components/all-answers.component.js","components/allquestions.component.js","components/admin-register.component.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","email","password","axios","post","then","response","console","log","data","token","localStorage","setItem","JSON","stringify","removeItem","firstname","lastname","password_confirmation","username","roles","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vlastname","vfirstname","vpassword","vpasswordConfirmation","Register","handleRegister","onChangeFirstname","onChangeLastname","onChangePasswordConfirmation","successful","register","Home","content","Home2","title","description","Profile","currentUser","getCurrentUser","substring","substr","_id","map","index","authHeader","user","get","headers","BoardUser","UserService","getUserBoard","questions","StyledButtonAddExplanation","withStyles","root","background","borderRadius","border","color","height","padding","boxShadow","margin","label","textTransform","Button","StyledButtonAddQuestion","StyledButtonDelExplanation","StyledButtonDelQuestion","StyledButtonSubmit","MyForm","onChangeQuestion","onClickAddExplanation","explanations","onQuestionChange","indexExplanation","onExplanationChange","onRemoveExplanationClick","onAddExplanationClick","element","options_text","onChangeExplanation","autoComplete","variant","onClick","onClickRemoveExplanation","question","createExplanationUI","BoardAdmin","onClickAddQuestion","onChangeTitle","handleSubmit","question_id","question_title","question_options","indexQuestion","explanation","alphabet","String","fromCharCode","options_id","prevState","splice","PostForm","submit","handleQuestionChange","onTitleChange","handleTitleChange","handleExplanationChange","handleAddExplanationClick","handleRemoveExplanationClick","onClickDelQuestion","createQuestionUI","PostSubmitForm","BarChart","explanationLabels","explanationValues","labels","datasets","backgroundColor","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","legend","DoughnutChart","answerValues","AllAnswers","useState","allAnswers","setallAnswers","currentQuiz","setcurrentQuiz","setcurrentIndex","array","setarray","answersArray","setanswersArray","explanationsArray","setexplanationsArray","currentStudent","setcurrentStudent","explanationStats","setexplanationStats","useEffect","Axios","catch","getStats","quiz_id","answer","getExplanationValues","keys","values","forEach","key","getAnswerValues","getLabels","object","Object","quiz","setActiveQuiz","cursor","quiz_answers","students","student","student_id","student_answers","answers","question_answer_id","disableElevation","arrayAns","mergeAllStudentsByIndex","i","arrayExp","mergeAllExplanation","countAnswers","all","filter","a","countExplanations","b","d","letter","Container","Grid","container","spacing","item","sm","md","lg","Card","elevation","CardHeader","action","IconButton","subheader","CardContent","AllQuestions","allQuizzes","setallQuizzes","radioOptions","setradioOptions","checkedItems","setCheckedItems","checkRadioButton","setradio","id","indexx","checked","option_text","checkedArray","x","find_question","find","setCheckbox","res","err","vusername","AdminRegister","onChangeUsername","onChangeCheckbox","admin","teacher","noRoleError","adminRegister","App","logOut","showAdminBoard","undefined","logout","to","href","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5dc53557.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5050/api/\";\r\n\r\nclass AuthService {\r\n  login(email, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        email,\r\n        password\r\n      })\r\n      .then(response => {\r\n      console.log(response.data);\r\n\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(firstname, lastname, email, password, password_confirmation) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      firstname, \r\n      lastname, \r\n      email, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  adminRegister(username, email, roles) {\r\n    return axios.post(API_URL + \"adminsignup\", {\r\n      username,\r\n      email,\r\n      roles\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.email, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n            \r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email de l'utilisateur</label>\r\n              <Input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Mot de passe</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Se connecter</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vlastname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vfirstname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le mot de passe doit contenir entre 6 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst vpasswordConfirmation = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangePasswordConfirmation = this.onChangePasswordConfirmation.bind(this);\r\n\r\n    this.state = {\r\n      lastname: \"\",\r\n      firstname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  // onChangeUsername(e) {\r\n  //   this.setState({\r\n  //     username: e.target.value\r\n  //   });\r\n  // }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePasswordConfirmation(e) {\r\n    this.setState({\r\n      password_confirmation: e.target.value\r\n    });\r\n  }\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.password_confirmation,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n\r\n          console.log(this.state);\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n          console.log(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"firstname\">Prenom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"firstname\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangeFirstname}\r\n                    validations={[required, vfirstname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"lastname\">Nom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"lastname\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangeLastname}\r\n                    validations={[required, vlastname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password_confirmation\">Confirmer Mot de passe</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password_confirmation\"\r\n                    value={this.state.password_confirmation}\r\n                    onChange={this.onChangePasswordConfirmation}\r\n                    validations={[required, vpasswordConfirmation]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Créer le compte</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // UserService.getPublicContent().then(\r\n    //   response => {\r\n    //     this.setState({\r\n    //       content: response.data.body\r\n    //     });\r\n    //   },\r\n    //   error => {\r\n    //     this.setState({\r\n    //       content:\r\n    //         (error.response && error.response.data) ||\r\n    //         error.message ||\r\n    //         error.toString()\r\n    //     });\r\n    //   }\r\n    // );\r\n    this.setState({\r\n      content: \"Bienvenue dans votre application de Neuroéducation\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      title: \"Bienvenue dans votre application de Neuroéducation\",\r\n      description: \"Cette application permet aux élèves de prendre conscience de leurs stratégies de réussite et des potentielles origines de leurs erreurs\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <header className=\"jumbotron\">\r\n                    <h3>{this.state.title}</h3>\r\n                </header>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h5>{this.state.description}</h5>\r\n            </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser()\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n          Profile : <strong>{currentUser.message.firstname}{' '}{currentUser.message.lastname}</strong> \r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.token.substring(0, 20)} ...{\" \"}\r\n          {currentUser.token.substr(currentUser.token.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.message._id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.message.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n  \r\n    if (user && user.token) {\r\n      // for Node.js Express back-end\r\n      return { 'x-access-token': user.token };\r\n    } else {\r\n      return {};\r\n    }\r\n  }","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:5050/api/test/';\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();","import React, { Component } from \"react\";\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5050/api/postform/\";\r\n\r\nclass PostForm {\r\n    submit(title, questions) {\r\n        return axios\r\n            .post(API_URL + \"submit\", {\r\n                title,\r\n                questions\r\n            })\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport default new PostForm();","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PostForm from \"../services/admin-submit-form\";\r\n\r\n\r\n// Here is 5 constants related to the visual of our custom button\r\nconst StyledButtonAddExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonAddQuestion = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #00BCFF 30%, #5355FF 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF8700 30%, #FF1E1E 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelQuestion = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF1D1D 30%, #4C4C4C 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonSubmit = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #11FF00 30%, #00FF82 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass MyForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.onChangeQuestion = this.onChangeQuestion.bind(this);\r\n    this.onClickAddExplanation = this.onClickAddExplanation.bind(this);\r\n\r\n    this.state = {\r\n      explanations: false\r\n    };\r\n  }\r\n\r\n  onChangeQuestion(e){\r\n    this.props.onQuestionChange(e.target.value);\r\n  }\r\n\r\n  onChangeExplanation(indexExplanation, e){\r\n    this.props.onExplanationChange(indexExplanation, e.target.value)\r\n  }\r\n\r\n  onClickRemoveExplanation(indexExplanation){\r\n    this.props.onRemoveExplanationClick(indexExplanation);\r\n  }\r\n\r\n  onClickAddExplanation(){\r\n    this.props.onAddExplanationClick();\r\n    this.setState({\r\n      explanations: true\r\n    });\r\n  }\r\n  \r\n  createExplanationUI(){\r\n    return(\r\n      <div>\r\n          {this.props.explanations ?(this.props.explanations.map((element, indexExplanation) =>\r\n            <div>\r\n              <div key={indexExplanation} className=\"form-group\">\r\n                <label htmlFor=\"explanation\">Explication</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"explanation\"\r\n                    value = {element.options_text||''}\r\n                    onChange = {this.onChangeExplanation.bind(this, indexExplanation)}\r\n                    validations = {[required]}\r\n                    autoComplete = \"off\"\r\n                  />\r\n              </div>\r\n\r\n              <StyledButtonDelExplanation \r\n                variant = \"contained\" onClick = {this.onClickRemoveExplanation.bind(this, indexExplanation)}>Supprimer cette explication\r\n              </StyledButtonDelExplanation>\r\n\r\n\r\n            </div>\r\n            )) : (<h3>No Explanation props</h3>)\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const question = this.state.question;\r\n\r\n    return (\r\n      <div>\r\n        <Form>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"question\"><strong>Question</strong></label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"question\"\r\n              value = {question}\r\n              onChange = {this.onChangeQuestion}\r\n              validations = {[required]}\r\n              autoComplete = \"off\"\r\n            />\r\n          </div>\r\n\r\n          <StyledButtonAddExplanation\r\n            variant = \"contained\" onClick = {this.onClickAddExplanation}>Ajouter une explication\r\n          </StyledButtonAddExplanation>\r\n          \r\n          {\r\n            this.state.explanations &&\r\n              this.createExplanationUI()\r\n          }\r\n\r\n        </Form>\r\n\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClickAddQuestion = this.onClickAddQuestion.bind(this);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.state = {\r\n      title: '',\r\n      questions: [\r\n        {\r\n          question_id: '',\r\n          question_title: '',\r\n          question_options: []\r\n        }\r\n      ],\r\n      message: ''\r\n    };\r\n  }\r\n\r\n  handleQuestionChange(indexQuestion, question){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_title = question;\r\n    questions[indexQuestion].question_id = indexQuestion+1;\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleExplanationChange(indexQuestion, indexExplanation, explanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options[indexExplanation].options_text = explanation;\r\n    \r\n    let alphabet = String.fromCharCode(96 + (indexExplanation+1));\r\n    questions[indexQuestion].question_options[indexExplanation].options_id = alphabet;\r\n    \r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  onChangeTitle(e){\r\n    let title = e.target.value;\r\n    this.setState({\r\n      title\r\n    });\r\n  }\r\n\r\n  onClickAddQuestion(){\r\n    this.setState(\r\n      prevState => ({questions : [...prevState.questions,        \r\n        {\r\n        question_title: '',\r\n        question_options: []\r\n      }]})\r\n    );\r\n  }\r\n\r\n  handleAddExplanationClick(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.push({options_text : ''});\r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  handleRemoveExplanationClick(indexQuestion, indexExplanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.splice(indexExplanation, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  onClickDelQuestion(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions.splice(indexQuestion, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleSubmit(){\r\n\r\n    PostForm.submit(this.state.title, this.state.questions).then(\r\n      () => {\r\n        this.props.history.push(\"/postSubmitForm\");\r\n        window.location.reload();\r\n      },\r\n      error => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        this.setState({\r\n          message: resMessage,\r\n          questions: [\r\n            {\r\n              question_title: '',\r\n              question_options: []\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  createQuestionUI(){\r\n\r\n    return(this.state.questions.map((element, indexQuestion) => \r\n      <div className=\"questionContainer\">\r\n        <div className=\"container\" key={indexQuestion}>\r\n          <MyForm \r\n            onQuestionChange = {this.handleQuestionChange.bind(this, indexQuestion)}\r\n            onTitleChange = {this.handleTitleChange}\r\n            onExplanationChange = {this.handleExplanationChange.bind(this, indexQuestion)}\r\n            onAddExplanationClick = {this.handleAddExplanationClick.bind(this, indexQuestion)}\r\n            onRemoveExplanationClick = {this.handleRemoveExplanationClick.bind(this, indexQuestion)}\r\n            explanations = {this.state.questions[indexQuestion].question_options}\r\n          />\r\n          <div className=\"delQuestion\">\r\n            <StyledButtonDelQuestion\r\n              variant = \"contained\" onClick = {this.onClickDelQuestion.bind(this, indexQuestion)}>Supprimer cette question\r\n            </StyledButtonDelQuestion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  // Pourrait être utile plus tard donc je met de coté (deprecated)\r\n  // componentDidMount() {\r\n  //   UserService.getAdminBoard().then(\r\n  //     response => {\r\n  //       this.setState({\r\n  //         content: response.data\r\n  //       });\r\n  //     },\r\n  //     error => {\r\n  //       this.setState({\r\n  //         content:\r\n  //           (error.response &&\r\n  //             error.response.data &&\r\n  //             error.response.data.message) ||\r\n  //           error.message ||\r\n  //           error.toString()\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n\r\n    const title = this.state.title;\r\n\r\n    return (\r\n      <div className=\"mainTeacherForm\">\r\n        <div className=\"container pt-3\">\r\n\r\n          <div className=\"container\">\r\n            <header className=\"jumbotron\">\r\n              <h3>Création de nouvelles questions</h3>\r\n            </header>\r\n          </div>\r\n\r\n          <Form>\r\n            <div className=\"container\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"form-title\"><strong>Titre du formulaire</strong></label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"form-title\"\r\n                    value = {title}\r\n                    onChange = {this.onChangeTitle}\r\n                    validations = {[required]}\r\n                    autoComplete = \"off\"\r\n                  />\r\n              </div>\r\n            </div>\r\n\r\n\r\n            {this.createQuestionUI()}\r\n\r\n\r\n            <div className=\"container\">\r\n              <br></br>\r\n              <StyledButtonAddQuestion\r\n                  variant = \"contained\" onClick = {this.onClickAddQuestion}>Ajouter une question\r\n              </StyledButtonAddQuestion>\r\n              <br></br><br></br>\r\n              <StyledButtonSubmit\r\n                variant = \"contained\" onClick = {this.handleSubmit}>Valider\r\n              </StyledButtonSubmit>\r\n            </div>\r\n          </Form>\r\n\r\n          { this.state.message && \r\n            <div className=\"container\">\r\n              <div className=\"itsanerror\"><h3>Une erreur est survenu lors de l'envoi du formulaire</h3></div>\r\n            </div>\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class PostSubmitForm extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"container\">\r\n                    <header className=\"jumbotron\">\r\n                        <div className=\"success\">\r\n                            <h3>Formulaire envoyé avec succès !</h3>\r\n                        </div>\r\n                    </header>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Bar } from 'react-chartjs-2';\r\nimport { Utils } from 'react-chartjs-2';\r\n\r\n\r\nconst BarChart = ( props ) => {\r\n\r\n    const explanationLabels = props.explanationLabels;\r\n    const explanationValues = props.explanationValues;\r\n    return (\r\n        <div>\r\n            <Bar\r\n                data={{\r\n                    labels: explanationLabels,\r\n                    datasets: [{\r\n                        data: explanationValues,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BarChart;","import { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\nconst DoughnutChart = ({ labels, answerValues }) => {\r\n\r\n    return ( \r\n        <div>\r\n            <Doughnut\r\n                data={{\r\n                    labels: labels,\r\n                    datasets: [{\r\n                        data: answerValues,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                        ]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false\r\n                }}\r\n            />\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default DoughnutChart;","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {FaTimes} from 'react-icons/fa'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVert from '@material-ui/icons/MoreVert';\r\nimport BarChart from './BarChart';\r\nimport { Button, Container } from '@material-ui/core';\r\nimport DoughnutChart from './DoughnutChart';\r\n\r\nconst AllAnswers = () => {\r\n    const [allAnswers, setallAnswers] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [currentIndex, setcurrentIndex] = useState(-1);\r\n    const [array, setarray] = useState(null);\r\n    const [answersArray, setanswersArray] = useState();\r\n    const [explanationsArray, setexplanationsArray] = useState()\r\n    const [currentStudent, setcurrentStudent] = useState(null)\r\n    const [explanationStats, setexplanationStats] = useState(null)\r\n\r\n    // FIND ALL ANSWERED QUESTIONS ON PAGE LOAD\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:5050/api/findAllAnswered').then((response) => {\r\n          console.log(response.data);\r\n          setallAnswers(response.data) \r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }, []);\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index, quiz_id) => {\r\n        console.log(quiz)\r\n        setcurrentQuiz(quiz);\r\n        setcurrentIndex(index);\r\n        getStats(quiz_id);\r\n        setcurrentStudent(null);\r\n        setexplanationStats(null);\r\n        setarray(null);\r\n    }; \r\n\r\n    // RETRIEVE GROUPPED DATA FROM THE DATABASE BY SELECTED QUIZ ID \r\n    const getStats = (quiz_id) => {\r\n        Axios.get(`http://localhost:5050/api/groupStats/${quiz_id}`)\r\n        .then(response => {\r\n            if(response){\r\n            // SET GROUPPED ANSWERS \"FOR EACH STUDENT\" ARRAY\r\n            setanswersArray(response.data[0]._id.answer);\r\n            console.log(response.data[0]._id.answer)\r\n\r\n            // SET GROUPPED EXPLANATIONS \"FOR EACH STUDENT\" ARRAY\r\n            setexplanationsArray(response.data[0]._id.explanation);\r\n            console.log(response.data[0]._id.explanation)\r\n            }\r\n        })\r\n        .catch()\r\n    }\r\n\r\n    // SET SELECTED(CLICKED) STUDENT ARRAY\r\n    const setActiveStudent = (student) => {\r\n        console.log(student)\r\n        setcurrentStudent(student);\r\n    }\r\n\r\n    // MERGE ALL ANSWERS BY QUESTION NUMBER AND SET COUNT AND STATS\r\n    const stats = () => {\r\n        // MERGE ALL ANSWERS INTO AN ARRAY (arrAns)\r\n        const arrayAns = answersArray[0].map(function(value, index) {\r\n            const mergeAllStudentsByIndex = [value];\r\n            if(value){\r\n                for(let i=1; i<answersArray.length; i++){\r\n                    mergeAllStudentsByIndex.push(answersArray[i][index])\r\n                }\r\n            }\r\n            console.log(mergeAllStudentsByIndex);\r\n            return mergeAllStudentsByIndex;\r\n        });\r\n        console.log(arrayAns);\r\n\r\n         // MERGE ALL EXPLANATIONS INTO AN ARRAY (arrExp)\r\n        const arrayExp = explanationsArray[0].map(function(explanation, index) {\r\n            const mergeAllExplanation = [explanation];\r\n            if(explanation){\r\n                for(let i =1; i< explanationsArray.length; i++){\r\n                    mergeAllExplanation.push(explanationsArray[i][index])\r\n                }\r\n            }\r\n\r\n            return mergeAllExplanation;\r\n        });\r\n        console.log(arrayExp)\r\n        \r\n        // COUNT NUMBER OF OCCURRENCE OF AN ANSWER(\"Plutot Oui\", \"Non\"... etc) FOR EACH QUESTION\r\n        const countAnswers = arrayAns.map((answers, index) => {\r\n            console.log(array)\r\n            let all = {\r\n                \"Oui\" : 0,\r\n                \"Plutot Oui\" : 0,\r\n                \"Plutot Non\" : 0,\r\n                \"Non\": 0,\r\n            };\r\n            for(const answer of answers){\r\n                all = {...all,  [answer] : answers.filter((a) => {return a === answer}).length}\r\n            }\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setarray(countAnswers)\r\n\r\n        // COUNT NUMBER OF OCCURRENCE OF AN EXPLANATION(\"a\", \"b\", \"c\"... etc) FOR EACH QUESTION\r\n        const countExplanations = arrayExp.map((array,index) => {\r\n            //return arr.filter((a) => {return a === \"a\"}).length\r\n            console.log(array)\r\n            let all = {\r\n                a : 0,\r\n                b : 0,\r\n                c : 0,\r\n                d : 0,\r\n                e : 0\r\n            }\r\n            for(const letter of array){\r\n                all = {...all,  [letter] : array.filter((a) => {return a === letter}).length}\r\n            }\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setexplanationStats(countExplanations);\r\n        \r\n    }\r\n\r\n    // RETRIEVE INTEGERS(VALUES) FOR EXPLANATIONS\r\n    const getExplanationValues = (explanation, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(explanation[key])\r\n        })\r\n        return values;\r\n    }\r\n    // RETRIEVE INTEGERS(VALUES) FOR Y, MY, MN, N QUESTIONS\r\n    const getAnswerValues = (answer, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(answer[key])\r\n        })\r\n        return values;\r\n    }\r\n\r\n    //RETRIEVE KEYS(LABELS) FOR CHART DATA\r\n    const getLabels = object => {\r\n        return Object.keys(object);\r\n    }\r\n\r\n    const disp = () => {\r\n        console.log(array);\r\n        console.log(explanationStats)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-questions\">\r\n            <h4>All Answered List</h4>\r\n\r\n            <div className={`quiz`} >\r\n                {allAnswers && allAnswers.map((quiz, index) => (\r\n                    <h4 \r\n                    onClick= {() => setActiveQuiz(quiz, index, quiz.quiz_id)}\r\n                    > {quiz.quiz_id} {''} \r\n                        <FaTimes \r\n                            style={{color: 'red', cursor: 'pointer'}}\r\n                            //  onClick={() => onDelete(quiz._id)}\r\n                        />\r\n                    </h4>\r\n                ))}\r\n            </div>\r\n\r\n            <div>\r\n                {currentQuiz ? (\r\n                    <div>\r\n                        <center><h4>{'You Selected Quiz : '}{currentQuiz.quiz_id}</h4></center>\r\n                        \r\n                        <div >\r\n                            <h4>{'Student List : '}</h4>\r\n                            {currentQuiz.quiz_answers && currentQuiz.quiz_answers.map((students, index) => (\r\n                                <div>\r\n                                    <h4 onClick={() => setActiveStudent(students)}>{students.student_id}</h4>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <div>\r\n                            {currentStudent ? (\r\n                                <div>\r\n                                    <h4>{'Showing Answers of  : '}{currentStudent.student_id}</h4>\r\n                                    {currentStudent && currentStudent.student_answers.map((answers, index) => (\r\n                                        <div> \r\n                                            <h4>{answers.question_answer_id}{' .'}{answers.answer}</h4>\r\n                                            <h4>{'Explanation : '}{answers.explanation}</h4>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            ) : (<h4></h4>)}\r\n                        </div>\r\n                        <Button disableElevation variant=\"contained\" onClick={disp}>Log</Button> <span></span>\r\n                        <Button disableElevation variant=\"contained\" onClick={stats}>Click for Stats</Button>\r\n\r\n                        <Container>\r\n                            {array ? (\r\n                                <div>\r\n                                    <Grid container spacing={3}>\r\n                                        {array && array.map((answer, index) => (\r\n                                            <Grid item sm={12} md={6} lg={4} >\r\n                                                <Card elevation={2}>\r\n                                                    <CardHeader\r\n                                                        action={\r\n                                                            <IconButton>\r\n                                                                <MoreVert />\r\n                                                            </IconButton>\r\n                                                        }\r\n                                                        title=\"Graphique en anneau\"\r\n                                                        subheader={\"Question. \" + (index + 1)} \r\n                                                    />\r\n                                                    <CardContent>\r\n                                                        <DoughnutChart labels={getLabels(answer)} answerValues={getAnswerValues(answer, getLabels(answer))} />\r\n                                                    </CardContent>\r\n                                                </Card>\r\n                                            </Grid>\r\n\r\n                                        ))}\r\n                                    </Grid>\r\n                                </div>\r\n                                                        \r\n                                ) : (<h4></h4>)}\r\n\r\n                            {explanationStats ? (\r\n                                <div>\r\n                                        <Grid container spacing={3} >\r\n                                            {explanationStats && explanationStats.map((explanation, index) => (\r\n                                                <Grid item sm={12} md={6} lg={4}>\r\n                                                    <Card elevation={2}>\r\n                                                        <CardHeader\r\n                                                        action={\r\n                                                            <IconButton>\r\n                                                                <MoreVert/>\r\n                                                            </IconButton>\r\n                                                        } \r\n                                                        title=\"Diagramme à bandes\"\r\n                                                        subheader={`Question. ${index + 1}`}\r\n                                                        />\r\n                                                        <CardContent>\r\n                                                            <BarChart explanationLabels={getLabels(explanation)} explanationValues={getExplanationValues(explanation, getLabels(explanation))} />\r\n                                                        </CardContent>\r\n                                                    </Card>\r\n                                                </Grid>\r\n                                            ))}\r\n                                        </Grid>\r\n                                </div>         \r\n                                ) : (<h4></h4>)}\r\n                        </Container>    \r\n                    </div>\r\n                ) : (<h4>Please Select A Quiz to view Answers</h4>)}\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllAnswers;","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {FaTimes} from 'react-icons/fa'\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\nconst AllQuestions = () => {\r\n    const [allQuizzes, setallQuizzes] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [currentIndex, setcurrentIndex] = useState(-1);\r\n    const [radioOptions, setradioOptions] = useState({})\r\n    const [checkedItems, setCheckedItems] = useState([]); \r\n    const [currentUser, setcurrentUser] = useState(AuthService.getCurrentUser()) \r\n    \r\n    // LOAD ALL QUIZZES FROM DATABASE ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:5050/api/findAllQ').then((response) => {\r\n          console.log(response.data);\r\n          setallQuizzes(response.data) \r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    }, []);\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index) => {\r\n        console.log(quiz)\r\n        setcurrentQuiz(quiz);\r\n        setcurrentIndex(index)\r\n    };\r\n\r\n    // RETURN CHECKED VALUE(true or false)\r\n    const checkRadioButton = (question_id, label) => {\r\n        if (!radioOptions[question_id]) {\r\n            return false;\r\n        }\r\n        return radioOptions[question_id] === label;\r\n    }\r\n\r\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n    const setradio = (id , value) => {\r\n        setradioOptions((state) => {\r\n            console.log(state);\r\n            return {\r\n                ...state,\r\n                [id] : value\r\n            }\r\n        });\r\n    }\r\n\r\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n\r\n\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n        console.log(find_question)\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        else{\r\n            setCheckedItems([\r\n                ...checkedItems,\r\n                 {\r\n                    question_answer_id : question_id,\r\n                    answer: radioOptions[question_id],\r\n                    explanation: value \r\n                }\r\n            ]);\r\n        }\r\n        \r\n    }\r\n\r\n    // SUBMIT ANSWERS TO THE BACKEND\r\n    const submitAnswers = () =>{\r\n        const answers = {\r\n            quiz_id : currentQuiz.quiz_id,\r\n            quiz_answers : {\r\n                student_id : currentUser.message.firstname+' '+currentUser.message.lastname,\r\n                student_answers : checkedItems\r\n            }\r\n        }\r\n        console.log(\"Radio Answer: \", radioOptions);\r\n        console.log(\"CheckedItems: \", checkedItems);\r\n        console.log(\"Final: \", answers);\r\n        Axios.post('http://localhost:5050/api/history', {\r\n            answers\r\n          }).then((res) => {\r\n                console.log(res);\r\n                if(res){\r\n                    //   window.location.reload(false);\r\n                    setCheckedItems([]);\r\n                    setradioOptions({});\r\n                }\r\n          }).catch(err => {\r\n                console.log(err);            \r\n          });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    //DELETE SLECTED QUIZ WITH THE QUIZ ID FROM DAATABASE\r\n    const onDelete = (id) => {\r\n        Axios.delete(`http://localhost:5050/api/delete/${id}`)\r\n        .then((res) => {\r\n            console.log(res)\r\n            setallQuizzes(allQuizzes.filter((question) => question._id !== id))\r\n        })\r\n        .catch(err => {\r\n            console.log(err); \r\n        });\r\n    }; \r\n\r\n\r\n    return (\r\n        <div className=\"container-questions\">\r\n            <h4>Quiz List</h4>\r\n            <div className={`quiz`} >\r\n                {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                    <h4 \r\n                    onClick= {() => setActiveQuiz(quiz, index)}\r\n                    > {quiz.quiz} {''} \r\n                        <FaTimes \r\n                            style={{color: 'red', cursor: 'pointer'}}\r\n                        />\r\n                    </h4>\r\n                ))}\r\n            </div>\r\n\r\n            <div>\r\n                {currentQuiz ? (\r\n                    <div> \r\n                        <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n                        {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                            <div key={questions.question_id}>\r\n                                <h4>{questions.question_id}{'. '}{questions.question_title}</h4>    \r\n                                <div>\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Oui\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Oui\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Plutot Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Non\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Plutot Non\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Non\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Non\r\n                                </div>\r\n                                {radioOptions[questions.question_id] === \"Plutot Non\"\r\n                                || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n                                || radioOptions[questions.question_id] === \"Non\" ? (\r\n                                    <div>\r\n                                        {questions.question_options && questions.question_options.map((options, index) => ( \r\n                                            <div>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" value={options.options_id} \r\n                                                    checked={checkedItems[options.option_text]}  \r\n                                                    onChange={(e) => \r\n                                                        setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                                                    }\r\n                                                    />\r\n                                                    <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                                                </label>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ) : (<span>No Explanation Needed</span>)}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (<h4>Please click on a quiz</h4>)}\r\n            </div>\r\n            <button className='btn' onClick={submitAnswers}>Submit Answers</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllQuestions\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default class AdminRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      admin: false,\r\n      teacher: false,\r\n      roles : [],\r\n      successful: false,\r\n      message: \"\",\r\n      noRoleError: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCheckbox(e) {\r\n    let target = e.target;\r\n    let value = target.checked;\r\n    let name = target.name;\r\n    this.setState({\r\n        [name]: value,\r\n        noRoleError: false\r\n    })\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (!this.state.admin && !this.state.teacher) {\r\n      return (this.setState({\r\n        noRoleError: true\r\n      }))\r\n    }\r\n    else {\r\n      let roles = this.state.roles;\r\n      if (this.state.admin) {\r\n        roles.push(\"ROLE_ADMIN\");\r\n      }\r\n      if (this.state.teacher) {\r\n        roles.push(\"ROLE_TEACHER\")\r\n      }\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.adminRegister(\r\n        this.state.username,\r\n        this.state.email,\r\n        this.state.roles,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Nom d'utilisateur</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"teacher\"\r\n                      checked={this.state.teacher}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Professeur\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"admin\"\r\n                      checked={this.state.admin}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Administrateur\r\n                    </label>\r\n                  </div>\r\n\r\n                  {this.state.noRoleError && \r\n                    <div className=\"container\">\r\n                      <div className=\"itsanerror\">Vous devez sélectionner au moins un rôle</div>\r\n                    </div>\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Créer le compte</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n// import axios from 'axios';\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Home2 from \"./components/home2.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport PostSubmitForm from \"./components/postSubmitForm.component\";\r\nimport AllAnswers from \"./components/all-answers.component\";\r\nimport AllQuestions from './components/allquestions.component';\r\nimport AdminRegister from \"./components/admin-register.component\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showAdminBoard: \"ROLE_ADMIN\",\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n     const { currentUser, showAdminBoard } = this.state;\r\n\r\n    return (\r\n      <div>\r\n         <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n           <Link to={\"/\"} className=\"navbar-brand\">\r\n             Outsmarted\r\n           </Link>\r\n           <div className=\"navbar-nav mr-auto\">\r\n             <li className=\"nav-item\">\r\n               <Link to={\"/home\"} className=\"nav-link\">\r\n                 Accueil\r\n               </Link>\r\n             </li>\r\n\r\n             {showAdminBoard && (\r\n              <div>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/admin\"} className=\"nav-link\">\r\n                    Tableau Administrateur\r\n                  </Link>\r\n                </li>\r\n               </div> \r\n             )}\r\n\r\n             {showAdminBoard && (\r\n               <li className=\"nav-item\">\r\n                 <Link to={\"/adminRegister\"} className=\"nav-link\">\r\n                   Ajouter un compte\r\n                 </Link>\r\n               </li>\r\n             )}\r\n\r\n            {showAdminBoard && (\r\n              <div>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/questions\"} className=\"nav-link\">\r\n                    Questions Page\r\n                  </Link>\r\n                </li>\r\n               </div> \r\n             )}\r\n\r\n            {showAdminBoard && (\r\n              <div>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/answers\"} className=\"nav-link\">\r\n                    Answers Page\r\n                  </Link>\r\n                </li>\r\n               </div> \r\n             )}\r\n\r\n              {currentUser && (\r\n               <li className=\"nav-item\">\r\n                 <Link to={\"/user\"} className=\"nav-link\">\r\n                   Utilisateur\r\n                 </Link>\r\n               </li>\r\n              )}\r\n           </div>\r\n\r\n           {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                  Déconnexion\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                  Se connecter\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/register\"} className=\"nav-link\">\r\n                  Créer un compte\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n\r\n          </nav>\r\n\r\n          \r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/home\" component={Home2} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/adminRegister\" component={AdminRegister} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route path=\"/user\" component={BoardUser} />\r\n            <Route path=\"/questions\" component={AllQuestions} />\r\n            <Route path=\"/answers\" component={AllAnswers} />\r\n            <Route path=\"/admin\" component={BoardAdmin} />\r\n            <Route path=\"/postSubmitForm\" component={PostSubmitForm} />\r\n          </Switch>\r\n         \r\n\r\n      </div>\r\n    );\r\n\r\n  }\r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// serviceWorker.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}