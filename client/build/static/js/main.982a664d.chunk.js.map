{"version":3,"sources":["services/auth.service.js","components/formCard.js","components/login.component.js","components/register.component.js","components/home.component.js","components/home2.component.js","components/formCard2.js","components/modifyPassword.component.js","components/profile.component.js","services/search.service.js","components/Title.js","components/board-user.component.js","services/admin-submit-form.js","components/confirm-dialogue.js","components/menu.js","components/board-admin.component.js","components/postSubmitForm.component.js","components/BarChart.js","components/DoughnutChart.js","components/Flippy.js","components/all-answers.component.js","components/allquestions.component.js","components/admin-register.component.js","components/protected-routes.component.js","components/LineChart.js","components/LineLabels.js","components/Paginate.js","components/all-students.component.js","components/verify-account.component.js","components/Admin/admin-dashboard.jsx","components/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","email","password","axios","post","then","response","console","log","data","token","localStorage","setItem","JSON","stringify","removeItem","firstname","lastname","password_confirmation","roles","old_password","parse","getItem","useStyles","makeStyles","theme","root","display","details","flexDirection","content","flex","cover","width","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","FormCard","float","useTheme","Card","style","maxHeight","backgroundImage","maxWidth","margin","marginTop","backgroundColor","minWidth","Login","props","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","e","this","setState","target","value","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","className","onSubmit","ref","c","padding","paddingTop","role","htmlFor","color","TextField","size","onChange","variant","fullWidth","required","type","marginBottom","disabled","onClick","pathname","border","Component","isEmail","vlastname","vfirstname","vpassword","vpasswordConfirmation","Register","handleRegister","onChangeFirstname","onChangeLastname","onChangePasswordConfirmation","successful","register","clear","name","validations","Home","Home2","title","description","textAlign","borderRadius","src","alt","FormCard2","ModifyPassword","useState","oldPw","setOldPw","newPw","setNewPw","confirmNewPw","setConfirmNewPw","setmessage","setsuccessful","userEmail","currentUser","currentuser","id","class","placeholder","oldPass","newPass","confirmPass","changePassword","res","catch","errMessage","marginRight","Profile","getCurrentUser","get","answers","Title","noUnderline","subHeader","Typography","Alert","elevation","field","BoardUser","search","setsearch","errorMessage","seterrorMessage","currentQuiz","setcurrentQuiz","radioOptions","setradioOptions","checkedItems","setCheckedItems","allQuizzes","setallQuizzes","displayAllAnswered","setdisplayAllAnswered","validate","setvalidate","useEffect","student_id","quizzes","err","checkRadioButton","question_id","label","setradio","answer","checkedArray","map","x","find_question","find","a","question_answer_id","explanation","handleClose","SearchService","searchQuiz","quiz","index","CardHeader","avatar","Avatar","quiz_id","toUpperCase","CardContent","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","severity","questions","indexx","fontSize","question_title","checked","question_options","options","options_id","option_text","setCheckbox","options_text","timestamp","Date","now","formatedTimestamp","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","quiz_title","quiz_answers","student_answers","time_submitted","created_by","ConfirmDialogue","confirmDialog","Dialog","isOpen","DialogTitle","DialogContent","subTitle","DialogActions","onDiscard","onConfirm","MenuOption","React","anchorEl","setAnchorEl","Boolean","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","PaperProps","ITEM_HEIGHT","option","MenuItem","selected","onclick","icon","withStyles","background","boxShadow","textTransform","Button","MyForm","onChangeQuestion","onClickAddExplanation","explanations","delete","onQuestionChange","indexExplanation","onExplanationChange","onRemoveExplanationClick","onAddExplanationClick","element","onChangeExplanation","Tooltip","onClickRemoveExplanation","question","deleteQuiz","autoComplete","createExplanationUI","BoardAdmin","createQuiz","laststate","displayQuizzes","displayCreate","displayQuiz","backToQuizzes","edit","getQuiz","quiz_idd","toggle","allow","setConfirmDialog","subtitle","onconfirm","discard","handleToggle","allowQuiz","success","updateQuiz","updated_questions","i","document","getElementById","expArr","j","alphabet","String","fromCharCode","expId","exp","danger","filter","editQuiz","onClickAddQuestion","onChangeTitle","handleSubmit","test","undefined","submitted","quizMdp","updateTitle","updateSubTitle","user","menuOptions","fontsize","alert","indexQuestion","prevState","splice","PostForm","submit","handleQuestionChange","onTitleChange","handleTitleChange","handleExplanationChange","handleAddExplanationClick","handleRemoveExplanationClick","onClickDelQuestion","to","SnackbarContent","position","top","action","Switch","inputProps","readOnly","fontWeight","createQuestionUI","PostSubmitForm","BarChart","names","explanationArray","explanationLabels","explanationValues","barData","labels","datasets","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","legend","tooltips","callbacks","item","displayColors","DoughnutChart","answerValues","pieData","FlippyItems","frontSide","backSide","flipOnHover","flipOnClick","flipDirection","AllAnswers","allAnswers","setallAnswers","array","setarray","answersArray","setanswersArray","explanationsArray","setexplanationsArray","currentStudent","setcurrentStudent","explanationStats","setexplanationStats","showSpinner","setShowSpinner","allQuestions","setAllQuestions","allExplanations","setAllExplanations","setPieData","setBarData","setPieTitle","setBarTitle","displayAllQuizzes","setdisplayAllQuizzes","displayStudentList","setdisplayStudentList","displayStats","setdisplayStats","actualQuiz","setactualQuiz","Axios","handlePieChartChange","handleBarChartChange","getStats","_id","handleStudentList","stats","arrayAns","mergeAllStudentsByIndex","arrayExp","mergeAllExplanation","countAnswers","all","labelsArray","countExplanations","b","d","letter","getExplanationValues","keys","values","forEach","key","getAnswerValues","getLabels","object","Object","Flippy","onMouseOver","setActiveQuiz","substr","students","Container","Grid","container","sm","md","lg","subheader","AllQuestions","setdisplayQuiz","setdisplayQuizzes","List","vusername","AdminRegister","onChangeCheckbox","admin","teacher","noRoleError","mdpTmp","adminRegister","ProtectedRoute","component","isAuthenticated","isAuthorized","includes","LineChart","borderColor","datax","string","LineLabels","integer","Paginate","allStudents","getAllQuizzes","evolution","start","setStart","end","setEnd","expanded","setExpanded","slice","student","Accordion","panel","isExpanded","AccordionSummary","expandIcon","marginLeft","AccordionDetails","Chip","startIcon","old","newStart","newEnd","endIcon","AllStudents","setallStudents","setdisplayActiveQuiz","displayEvolution","setdisplayEvolution","displayMain","setdisplayMain","lineArray","setLineArray","displayLineChart","setDisplayLineChart","setActiveStudent","getAllAns","getLineData","groupArray","dataArray","tempLineArray","attempt","VerifyAccount","params","match","verifyAccount","media","AdminDashboard","useHistory","classes","dashboardArray","path","children","actions","one","two","CardActionArea","gutterBottom","CardActions","newPath","href","routeChange","child","route","list","fullList","TemporaryDrawer","left","bottom","right","toggleDrawer","anchor","clsx","onKeyDown","ListItem","button","ListItemIcon","ListItemText","primary","lists","text","link","textDecoration","Fragment","Drawer","createMuiTheme","palette","main","App","logOut","showAdminBoard","showTeacherBoard","adminTeacher","allUsers","studentAdmin","navList","logout","ThemeProvider","font","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.982a664d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n// const API_URL = \"http://localhost:5050/api/\";\r\n\r\nclass AuthService {\r\n  login(email, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        email,\r\n        password\r\n      })\r\n      .then(response => {\r\n        console.log(response.data);\r\n\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(firstname, lastname, email, password, password_confirmation) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      firstname, \r\n      lastname, \r\n      email, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  verifyAccount(token) {\r\n    return axios.post(API_URL + \"verifyAccount\", {\r\n      token\r\n    });\r\n  }\r\n\r\n  adminRegister(firstname, lastname, email, roles) {\r\n    return axios\r\n    .post(API_URL + \"signup\", {\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      roles\r\n    });\r\n  }\r\n\r\n  changePassword(email, old_password, password, password_confirmation) {\r\n    return axios\r\n    .post(API_URL + \"changePassword\", {\r\n      email, \r\n      old_password, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n}));\r\n\r\nexport default function FormCard({content, float}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card style={{ height: \"680px\", maxHeight:\"700\", width: \"100%\", backgroundImage: `url(${\"/blueBG.png\"})`, maxWidth:\"890px\",  margin: \"auto\", marginTop:\"70px\"}}\r\n    >\r\n      <div style={{backgroundColor: \"white\", height: \"100%\",  maxWidth:\"480px\", minWidth:\"300px\", float: float}}>\r\n            {content}\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\nimport FormCard from './formCard'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.email, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        \r\n\r\n\r\n        <div >\r\n            \r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n\r\n            <FormCard\r\n              content={\r\n            <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"70px\", paddingBottom:\"60px\"}}>\r\n              {this.state.message && (\r\n                <div className=\"form-group\">\r\n                  <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {this.state.message}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <h2 style={{marginTop: \"30px\"}}>Bienvenue sur la page de connexion</h2>\r\n              <p>C'est génial que tu sois de retour</p>\r\n\r\n              <div style={{marginTop: \"50px\"}}>\r\n                {/* <FormLabel style={{marginTop: \"30px\", color:\"black\"}}><strong >Email</strong></FormLabel> */}\r\n                <label htmlFor=\"email\" style={{marginTop: \"30px\", color:\"black\"}}><strong>Email de l'utilisateur</strong></label>\r\n                <TextField\r\n                      size=\"small\"\r\n                      onChange={this.onChangeEmail}\r\n                      value={this.state.email}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      required //just adds the asterix\r\n                  />\r\n                {/* <FormLabel style={{marginTop: \"30px\", color:\"black\"}}><strong >Password</strong></FormLabel> */}\r\n                <label htmlFor=\"password\" style={{marginTop: \"30px\", color:\"black\"}}><strong>Mot de passe</strong></label>\r\n                <TextField\r\n                      type=\"password\"\r\n                      size=\"small\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      required //just adds the asterix\r\n                      \r\n                  />\r\n                </div>  \r\n                <div>\r\n                {/* <span style={{float:\"left\", marginTop: \"30px\", marginBottom: \"30px\"}}>Remember me?</span> */}\r\n                <span style={{width: \"100%\", float:\"right\", marginTop: \"30px\", marginBottom: \"30px\"}}>Mot de passe oublié ?</span>\r\n                </div>\r\n                <div style={{marginTop: \"15px\", width: \"100%\"}}>\r\n                  <button \r\n                  className=\"btnn\" style={{\"font-size\" : \"12px\", width: \"45%\"}}\r\n                  disabled={this.state.loading}\r\n                  >\r\n                    {this.state.loading && (\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                    )}\r\n                    SE CONNECTER\r\n                    </button>\r\n                  <button\r\n                  onClick={() =>  this.props.history.push({\r\n                       pathname: \"/register\",\r\n                     })}\r\n                  className=\"btnn\" \r\n                  style={{\"font-size\" : \"12px\", backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\", width: \"45%\"}}>CREER EN COMPTE</button>\r\n                </div>\r\n            </div>\r\n              }\r\n              float=\"left\"\r\n            />\r\n\r\n              {/* <label htmlFor=\"email\">Email de l'utilisateur</label>\r\n              <Input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[required]}\r\n              /> */}\r\n            </div>\r\n\r\n            {/* <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Mot de passe</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div> */}\r\n{/* \r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btnn\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Se connecter</span>\r\n              </button>\r\n            </div> */}\r\n{/* \r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )} */}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport FormCard from './formCard'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vlastname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vfirstname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le mot de passe doit contenir entre 6 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst vpasswordConfirmation = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangePasswordConfirmation = this.onChangePasswordConfirmation.bind(this);\r\n\r\n    this.state = {\r\n      lastname: \"\",\r\n      firstname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  // onChangeUsername(e) {\r\n  //   this.setState({\r\n  //     username: e.target.value\r\n  //   });\r\n  // }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePasswordConfirmation(e) {\r\n    this.setState({\r\n      password_confirmation: e.target.value\r\n    });\r\n  }\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.password_confirmation,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n          // console.log(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div >\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n\r\n<FormCard\r\n                  content={\r\n                <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"50px\", paddingBottom:\"60px\", clear: \"both\" }}>\r\n                  {this.state.message && (\r\n                    <div className=\"form-group\">\r\n                      <div\r\n                        className={\r\n                          this.state.successful\r\n                            ? \"alert alert-success\"\r\n                            : \"alert alert-danger\"\r\n                        }\r\n                        role=\"alert\"\r\n                      >\r\n                        {this.state.message}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <h2>Bienvenue sur la page d'inscription</h2>\r\n\r\n                  <div style={{marginTop: \"20px\"}}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"firstname\" style={{marginTop: \"20px\", color:\"black\"}}><strong>Prenom</strong></label>\r\n                      <TextField\r\n                          size=\"small\"\r\n                          name=\"firstname\"\r\n                          value={this.state.firstname}\r\n                          onChange={this.onChangeFirstname}\r\n                          validations={[required, vfirstname]}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          required //just adds the asterix\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">  \r\n                      <label htmlFor=\"lastname\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Nom</strong></label>\r\n                      <TextField\r\n                            size=\"small\"\r\n                            name=\"lastname\"\r\n                            value={this.state.lastname}\r\n                            onChange={this.onChangeLastname}\r\n                            validations={[required, vlastname]}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            required //just adds the asterix\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">    \r\n                      <label htmlFor=\"email\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Email</strong></label>\r\n                      <TextField\r\n                            size=\"small\"\r\n                            name=\"email\"\r\n                            onChange={this.onChangeEmail}\r\n                            value={this.state.email}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            required //just adds the asterix\r\n                            validations={[required, email]}\r\n                      />\r\n                    </div> \r\n\r\n                    <div className=\"form-group\">    \r\n                      <label htmlFor=\"password\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Mot de passe</strong></label>\r\n                      <TextField\r\n                            type=\"password\"\r\n                            size=\"small\"\r\n                            name=\"password\"\r\n                            value={this.state.password}\r\n                            onChange={this.onChangePassword}\r\n                            validations={[required, vpassword]}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            required //just adds the asterix \r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">    \r\n                      <label htmlFor=\"password_confirmation\" style={{marginTop: \"10px\", color:\"black\"}}><strong> Confirmer Mot de passe</strong></label>\r\n                      <TextField\r\n                            type=\"password\"\r\n                            size=\"small\"\r\n                            name=\"password_confirmation\"\r\n                            value={this.state.password_confirmation}\r\n                            onChange={this.onChangePasswordConfirmation}\r\n                            validations={[required, vpasswordConfirmation]}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            required //just adds the asterix \r\n                      />\r\n                    </div>\r\n\r\n                  </div>  \r\n\r\n                  <div style={{marginTop: \"15px\", width: \"100%\"}} className=\"form-group\">\r\n                    <button\r\n                    onClick={() =>  this.props.history.push({\r\n                      pathname: \"/login\",\r\n                    })} \r\n                    className=\"btnn\" style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\",\"font-size\" : \"12px\", width: \"44%\"}}\r\n                    disabled={this.state.loading}\r\n                    >\r\n                      {this.state.loading && (\r\n                      <span className=\"spinner-border spinner-border-sm\"></span>\r\n                      )}\r\n                      SE CONNECTER\r\n                      </button> \r\n                    <button \r\n                    className=\"btnn\" \r\n                    style={{\"font-size\" : \"12px\", width: \"45%\"}} \r\n                    >\r\n                      CREER EN COMPTE\r\n                      </button>\r\n                  </div>\r\n                </div>\r\n                  }\r\n                  float=\"right\"\r\n                />\r\n\r\n                {/* <div className=\"form-group\">\r\n                  <label htmlFor=\"firstname\">Prenom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"firstname\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangeFirstname}\r\n                    validations={[required, vfirstname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"lastname\">Nom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"lastname\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangeLastname}\r\n                    validations={[required, vlastname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password_confirmation\">Confirmer Mot de passe</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password_confirmation\"\r\n                    value={this.state.password_confirmation}\r\n                    onChange={this.onChangePasswordConfirmation}\r\n                    validations={[required, vpasswordConfirmation]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btnn\">Créer le compte</button>\r\n                </div> */}\r\n              </div>\r\n            )}\r\n\r\n            {/* {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )} */}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // UserService.getPublicContent().then(\r\n    //   response => {\r\n    //     this.setState({\r\n    //       content: response.data.body\r\n    //     });\r\n    //   },\r\n    //   error => {\r\n    //     this.setState({\r\n    //       content:\r\n    //         (error.response && error.response.data) ||\r\n    //         error.message ||\r\n    //         error.toString()\r\n    //     });\r\n    //   }\r\n    // );\r\n    this.setState({\r\n      content: \"Bienvenue dans votre application de Neuroéducation\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      title: \"Bienvenue dans votre application de Neuroéducation\",\r\n      description: \"Cette application permet aux élèves de prendre conscience de leurs stratégies de réussite et des potentielles origines de leurs erreurs\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <header className=\"jumbotron\">\r\n                    <h3>{this.state.title}</h3>\r\n                </header>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h5>{this.state.description}</h5>\r\n                <div style={{textAlign: \"center\", marginTop: \"20px\"}}>\r\n                  <img style={{height: \"500px\", width: \"500px\", borderRadius: \"10px\"}} src=\"/brain-storming.png\" alt=\"students brainstorming\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n}));\r\n\r\nexport default function FormCard2({content, float}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card style={{ height: \"850px\", maxHeight:\"900\", width: \"100%\", backgroundImage: `url(${\"/blueBG.png\"})`, maxWidth:\"890px\",  margin: \"auto\", marginTop:\"70px\"}}\r\n    >\r\n      <div style={{backgroundColor: \"white\",height: \"100%\",  minWidth:\"300px\", maxWidth:\"600px\", maxHeight:\"770px\" , width: \"100%\",  margin:\"auto\", marginTop: \"40px\",}}>\r\n            {content}\r\n      </div>\r\n    </Card>\r\n  );\r\n}","import {useState} from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\n// import CheckButton from \"react-validation/build/button\";\r\n// import React, { Component } from \"react\";\r\nimport FormCard2 from './formCard2'\r\n\r\nimport AuthService from '../services/auth.service'\r\n\r\n\r\n\r\n// const currentPassword = \"\"\r\n\r\n\r\n// const required = (value) => {\r\n//     if (!value) {\r\n//         return (\r\n//             <div className=\"alert alert-danger\" role=\"alert\">\r\n//                 Ce champ est obligatoire !\r\n//             </div>\r\n//         );\r\n//     }\r\n// };\r\n\r\n// const vpassword = value => {\r\n//     if (value.length < 6 || value.length > 50) {\r\n//       return (\r\n//         <div className=\"alert alert-danger\" role=\"alert\">\r\n//           Le mot de passe doit contenir entre 6 et 50 charactères.\r\n//         </div>\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const vpasswordConfirmation = value => {\r\n//     if (value !== newPw) {\r\n//       return (\r\n//         <div className=\"alert alert-danger\" role=\"alert\">\r\n//           Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n//         </div>\r\n//       );\r\n//     }\r\n//   };\r\n\r\nconst ModifyPassword = (props) =>{\r\n    const [oldPw, setOldPw] = useState('')\r\n    const [newPw, setNewPw] = useState('')\r\n    const [confirmNewPw, setConfirmNewPw] = useState('')\r\n    const [message, setmessage] = useState('');\r\n    const [successful, setsuccessful] = useState(false);\r\n    const [userEmail] = useState(props.email)\r\n    const currentUser = props.currentuser\r\n\r\n    const ApplyModifications =(email,oldPass, newPass, confirmPass) => {\r\n        setmessage('');\r\n        setsuccessful(false);\r\n        AuthService.changePassword(email, oldPass, newPass, confirmPass)\r\n        .then((res) => {\r\n            setmessage(\"Mot de passe modifié avec succès\");\r\n            setsuccessful(true);\r\n        })\r\n        .catch((error) =>{\r\n            const errMessage =\r\n              (error.response.data.message[0].password || (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message)) ||\r\n              error.message ||\r\n              error.toString();\r\n              console.log(errMessage);\r\n            setmessage(errMessage);\r\n            setsuccessful(false);\r\n        })\r\n    }\r\n\r\n\r\n\r\nreturn (\r\n    <div >\r\n        {message && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\r\n                successful\r\n                  ? \"alert alert-success\"\r\n                  : \"alert alert-danger\"\r\n              }\r\n              role=\"alert\"\r\n            >\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n         <FormCard2\r\n         content={\r\n           <div  className=\"formCardContent\">\r\n              <header className=\"jumbotron\">\r\n                <h3>\r\n                    Profile : <strong>{currentUser.message.firstname}{' '}{currentUser.message.lastname}</strong> \r\n                </h3>\r\n              </header>\r\n\r\n              <div \r\n              className=\"row2\" \r\n              style={{margin: \"20px\", marginTop: \"20px\", width : \"80%\",marginBottom:\"10px\"}}\r\n              >\r\n              <h5>ACCOUNT INFORMATION</h5>\r\n              </div>  \r\n              <div \r\n              className=\"row1\" \r\n              style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n              >\r\n                <label style={{width: \"40%\"}}>Prenom</label>\r\n                <input \r\n                type=\"text\" \r\n                id=\"name\" \r\n                class=\"input-field\" \r\n                disabled \r\n                style={{width: \"60%\"}}\r\n                value={currentUser.message.firstname}\r\n                />    \r\n              </div>\r\n\r\n              <div \r\n              className=\"row1\" \r\n              style={{margin: \"20px\", marginTop: \"10px\", width : \"90%\",marginBottom:\"10px\"}}\r\n              >\r\n                <label style={{width: \"40%\"}}>Nom</label>\r\n                <input \r\n                type=\"text\" \r\n                id=\"name\" \r\n                class=\"input-field\" \r\n                disabled \r\n                style={{width: \"60%\"}}\r\n                value={currentUser.message.lastname}\r\n                />    \r\n              </div>\r\n              <div \r\n              className=\"row1\" \r\n              style={{margin: \"20px\", marginTop: \"10px\", width : \"90%\",marginBottom:\"10px\"}}\r\n              >\r\n                <label style={{width: \"40%\"}}>Email</label>\r\n                <input \r\n                type=\"text\" \r\n                id=\"name\" \r\n                class=\"input-field\" \r\n                disabled \r\n                style={{width: \"60%\"}}\r\n                value={currentUser.message.email}\r\n                />    \r\n              </div>\r\n\r\n              <div \r\n              className=\"row2\" \r\n              style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n              >\r\n              <h5>Changement de mot de passe</h5>\r\n              </div> \r\n\r\n              <div \r\n              className=\"row1\" \r\n              style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n              >\r\n                <label style={{width: \"40%\"}}>Ancien mot de passe</label>\r\n                <input \r\n                type=\"password\" \r\n                name=\"oldPw\" \r\n                value={oldPw} \r\n                placeholder=\"******\" \r\n                onChange={(e) => setOldPw(e.target.value)} \r\n                class=\"input-field\" \r\n                style={{width: \"60%\"}}\r\n                />    \r\n              </div>\r\n\r\n              <div \r\n              className=\"row1\" \r\n              style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n              >\r\n                <label style={{width: \"40%\"}}> Nouveau mot de passe </label>\r\n                <input \r\n                type=\"password\" \r\n                name=\"newPw\" \r\n                value={newPw} \r\n                placeholder=\"******\" \r\n                onChange={(e) => setNewPw(e.target.value)} \r\n                class=\"input-field\" \r\n                style={{width: \"60%\"}}\r\n                />    \r\n              </div>\r\n\r\n              <div \r\n              className=\"row1\" \r\n              style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n              >\r\n                <label style={{width: \"40%\"}}>Confirmer mot de passe</label>\r\n                <input \r\n                type=\"password\" \r\n                name=\"confirmNewPw\" \r\n                value={confirmNewPw} \r\n                placeholder=\"******\" \r\n                onChange={(e) => setConfirmNewPw(e.target.value)} \r\n                class=\"input-field\" \r\n                style={{width: \"60%\"}}\r\n                />    \r\n              </div>\r\n\r\n              <center>\r\n              <button\r\n              onClick={() => ApplyModifications(userEmail,oldPw,newPw,confirmNewPw)}\r\n              className=\"btnn\" \r\n              style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\",\"font-size\" : \"12px\", float:\"right\", marginRight: \"40px\"}}\r\n              >\r\n               Confirmer\r\n              </button>  \r\n              </center>      \r\n\r\n\r\n           </div>\r\n         }\r\n        />\r\n{/*         \r\n        <strong>Changement de mot de passe</strong>\r\n        <Form>\r\n        <label name=\"oldPw\">Ancien mot de passe</label>\r\n        <Input name=\"oldPw\" value={oldPw} placeholder=\"******\" onChange={(e) => setOldPw(e.target.value)} />\r\n        <label name=\"newPw\">Nouveau mot de passe</label>\r\n        <Input name=\"newPw\" value={newPw} placeholder=\"******\" onChange={(e) => setNewPw(e.target.value)} />\r\n        <label name=\"confirmNewPw\">Confirmer le nouveau mot de passe</label>\r\n        <Input name=\"confirmNewPw\" value={confirmNewPw} placeholder=\"******\" onChange={(e) => setConfirmNewPw(e.target.value)} />\r\n        <CheckButton\r\n            style={{ display: \"none\" }}\r\n            ref={c => {\r\n            Component.checkBtn = c;\r\n            }}\r\n        />\r\n        </Form>\r\n        <button className=\"btnn\" onClick={() => ApplyModifications(userEmail,oldPw,newPw,confirmNewPw)}>Confirmer</button> */}\r\n\r\n        {message && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\r\n                successful\r\n                  ? \"alert alert-success\"\r\n                  : \"alert alert-danger\"\r\n              }\r\n              role=\"alert\"\r\n            >\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n    </div>\r\n);\r\n}\r\n\r\n\r\n\r\nexport default ModifyPassword;\r\n","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport ModifyPassword from \"./modifyPassword.component\";\r\nimport FormCard2 from './formCard2'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser()\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n\r\n\r\n\r\n        {/* <header className=\"jumbotron\">\r\n          <h3>\r\n          Profile : <strong>{currentUser.message.firstname}{' '}{currentUser.message.lastname}</strong> \r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.token.substring(0, 20)} ...{\" \"}\r\n          {currentUser.token.substr(currentUser.token.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.message._id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.message.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.message.roles &&\r\n            currentUser.message.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul> */}\r\n        <ModifyPassword currentuser={currentUser} email={currentUser.message.email}/>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n// const API_URL = \"http://localhost:5050/api/${id}\";\r\n\r\n\r\nclass SearchService {\r\n\r\n  searchQuiz(id) {\r\n    return axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${id}`, {\r\n      \r\n    });\r\n  }\r\n\r\n  submitAnswers(answers){\r\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n        answers\r\n      })\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new SearchService();\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport const Title = ({data, noUnderline, subHeader}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Typography\r\n                style={{textAlign: \"center\", color:\"#4257b2\", marginTop: \"20px\", marginBottom: \"20px\"}}\r\n                variant={subHeader ? \"h6\": \"h5\"}\r\n            >\r\n                {data}\r\n                <div className={noUnderline ? \"\": \"underline\"}></div>\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport SearchService from \"../services/search.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { FormControlLabel, makeStyles } from '@material-ui/core';\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport NoteCard from \"./NoteCard\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\nimport {Title} from './Title';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vsearch = value => {\r\n  if (value.length < 6) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 6 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) =>({ //makeStyles returns to us a hook, the hook subsequently gives us the object. NB: react hooks must begin with the word 'use'\r\n  field: {\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n      display: 'block'\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst BoardUser = () => {\r\n  const [search, setsearch] = useState('');\r\n  const [successful, setsuccessful] = useState(false);\r\n  const [message, setmessage] = useState('');\r\n  const [errorMessage, seterrorMessage] = useState('');\r\n  // const [errors, seterrors] = useState([])\r\n  const [currentQuiz, setcurrentQuiz] = useState(null);\r\n  const [radioOptions, setradioOptions] = useState({})\r\n  const [checkedItems, setCheckedItems] = useState([]); \r\n  const [currentUser] = useState(AuthService.getCurrentUser()) ;\r\n  const [allQuizzes, setallQuizzes] = useState([]);\r\n  const [displayAllAnswered, setdisplayAllAnswered] = useState(false);\r\n  const [validate, setvalidate] = useState(false)\r\n  const classes = useStyles();\r\n\r\n\r\n  // LOAD ALL QUIZZES ANSWERED BY CURRENT STUDENT FROM DATABASE \r\n  //ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n  useEffect(() => {\r\n    const student_id = currentUser.message.email;\r\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\r\n      console.log(response.data.quizzes);\r\n      setallQuizzes(response.data.quizzes) \r\n    })\r\n    .catch(function (err) {\r\n        seterrorMessage(err.response);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  // SET SELECTED(CLICKED) QUIZ\r\n  const setActiveQuiz = (quiz, index) => {\r\n    console.log(quiz)\r\n    // setcurrentQuiz(quiz);\r\n    // setcurrentIndex(index)\r\n  };\r\n\r\n  const onChangeSearch = (e) =>{\r\n    setsearch(e.target.value)\r\n  }\r\n\r\n  // RETURN CHECKED VALUE(true or false)\r\n  const checkRadioButton = (question_id, label) => {\r\n      if (!radioOptions[question_id]) {\r\n          return false;\r\n      }\r\n      return radioOptions[question_id] === label;\r\n  }\r\n\r\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n    const setradio = (id , answer) => {\r\n      let checkedArray = checkedItems.map(x => {return {...x}})\r\n      const find_question = checkedArray.find(a => a.question_answer_id === id);\r\n      console.log(find_question)\r\n      if(find_question) {\r\n          checkedArray.find(a => a.question_answer_id === id).answer = answer;\r\n          setradioOptions((state) => {\r\n              console.log(state);\r\n              return {\r\n                  ...state,\r\n                  [id] : answer\r\n              }\r\n          });\r\n          setCheckedItems(checkedArray);\r\n      }\r\n      else{\r\n      setradioOptions((state) => {\r\n          console.log(state);\r\n          return {\r\n              ...state,\r\n              [id] : answer\r\n          }\r\n      });\r\n\r\n      setCheckedItems([\r\n          ...checkedItems,\r\n           {\r\n              question_answer_id : id,\r\n              answer: answer,\r\n              explanation: 'no explanation'\r\n          }\r\n      ]);}\r\n  }\r\n\r\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n      let checkedArray = checkedItems.map(x => {return {...x}})\r\n      const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n      console.log(find_question)\r\n      if(find_question) {\r\n          checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n          setCheckedItems(checkedArray);\r\n      }\r\n      \r\n  }\r\n\r\n  // SUBMIT ANSWERS TO THE BACKEND\r\n  const submitAnswers = () =>{\r\n    // setmessage(\"\");\r\n    // setsuccessful(false);\r\n    // setdisplayAllAnswered(false);\r\n    const timestamp = Date.now(); // This would be the timestamp you want to format\r\n    const formatedTimestamp = new Intl.DateTimeFormat('en-US', {year: 'numeric',\r\n                              month: '2-digit',day: '2-digit', hour: '2-digit', \r\n                              minute: '2-digit', second: '2-digit'}).format(timestamp);\r\n    console.log(new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',\r\n                day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'})\r\n                .format(timestamp));\r\n    const answers = {\r\n        quiz_id : currentQuiz.quiz_id,\r\n        quiz_title : currentQuiz.quiz,\r\n        quiz_answers : {\r\n            student_id : currentUser.message.email,\r\n            student_answers : checkedItems,\r\n            time_submitted : formatedTimestamp,\r\n        }\r\n    }\r\n\r\n\r\n    if((currentQuiz.questions).length !== (answers.quiz_answers.student_answers).length){\r\n      // setmessage(null);\r\n      // setsuccessful(null);\r\n      // setdisplayAllAnswered(false);\r\n      console.log((currentQuiz.questions).length);\r\n      console.log((answers.quiz_answers.student_answers).length);\r\n      setvalidate(true);\r\n      // setmessage('Please answer all quizzes');\r\n              // setsuccessful(false);\r\n              return setvalidate(true);\r\n    }\r\n\r\n    console.log(\"Radio Answer: \", radioOptions);\r\n    console.log(\"CheckedItems: \", checkedItems);\r\n    console.log(\"Final: \", answers);\r\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api//history', {\r\n        answers\r\n      }).then((res) => {\r\n          console.log(res);\r\n          if(res){\r\n              //   window.location.reload(false);\r\n              setcurrentQuiz(null);\r\n              setCheckedItems([]);\r\n              setradioOptions({});\r\n              setallQuizzes([...allQuizzes, answers])\r\n              setmessage('Answers Submitted');\r\n              setsuccessful(true);\r\n              setdisplayAllAnswered(true);\r\n              \r\n          }\r\n      }).catch(err => {\r\n          setcurrentQuiz(null)  \r\n          setsuccessful(false);\r\n          console.log(err.response.data.message|| err.response.data.message[0].error);   \r\n          setmessage(err.response.data.message|| err.response.data.message[0].error);\r\n                 \r\n      });\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setvalidate(false)\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    setmessage(\"\");\r\n    setsuccessful(false);\r\n    setdisplayAllAnswered(false);\r\n\r\n    // this.form.validateAll();\r\n\r\n    {SearchService.searchQuiz(\r\n      search,\r\n    ).then(\r\n      response => {\r\n        console.log(response.data);\r\n        setsuccessful(true);\r\n        setcurrentQuiz(response.data);\r\n      })\r\n      .catch(\r\n      error => {\r\n        console.log(error.response);\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) \r\n          || error.message || error.toString();\r\n\r\n        setmessage(resMessage);\r\n        setsuccessful(false);\r\n      }\r\n    );}\r\n    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <div >\r\n      <div >\r\n        {errorMessage && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\"alert alert-danger\"}\r\n              role=\"alert\"\r\n            >\r\n              {errorMessage}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {(!successful || displayAllAnswered)  && (\r\n          <div>\r\n            <div style={{\"margin-top\" :\"50px\"}}>\r\n              {message && (\r\n                <div className=\"form-group\">\r\n                  <div\r\n                    className={\r\n                      successful\r\n                        ? \"alert alert-success\"\r\n                        : \"alert alert-danger\"\r\n                    }\r\n                    role=\"alert\"\r\n                  >\r\n                    {message}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <form id =\"form\" >\r\n                <TextField\r\n                    onChange={onChangeSearch}\r\n                    id=\"commonSearchTerm\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required //just adds the asterix\r\n                />\r\n                <button id=\"searchButton\" onClick={handleSearch}>Recherche</button>\r\n              </form>\r\n            </div>\r\n\r\n            {(displayAllAnswered || !successful )  && allQuizzes && (\r\n              <div >      \r\n                <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                  <center>\r\n                    <Title data={'Quiz déjà répondus'} />\r\n                  </center>\r\n                  <div className=\"row\" >\r\n                      {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                          <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"> \r\n                              {/* <NoteCard note={quiz.quiz_id}  handleDelete={\"handleDelete\"} color={'#'+Math.floor(Math.random()*16777215).toString(16).padStart(6, '0')}/> */}\r\n                              <Card elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\r\n                                        <CardHeader\r\n                                              avatar={\r\n                                                  (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                      {quiz.quiz_id[0].toUpperCase()}\r\n                                                  </Avatar>)\r\n                                          }\r\n                                              // action={ handleDelete===\"no delete\" ? (\"\") :\r\n                                              //     (<IconButton style={{color: \"#4257b2\"}}>\r\n                                              //         <DeleteOutlined />\r\n                                              //     </IconButton>)\r\n                                              // }\r\n                                              title={quiz.quiz_id}\r\n                                              // subheader={note}\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                {quiz.quiz_id}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </Card> \r\n                          </div> \r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              </div>  \r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* <div className={!successful || message ? \"card card-container\" : \"\"}>\r\n            {(!successful || displayAllAnswered)  && (\r\n              <div >\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"search\">Search for Quiz</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"search\"\r\n                    value={search}\r\n                    onChange={onChangeSearch}\r\n                    validations={[required, vsearch]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\"  onClick={handleSearch}>Search Quiz</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div> */}\r\n        </div>\r\n\r\n        {/* <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n          <div className={!successful || message ? \"card card-container\" : \"\"}>\r\n            {(displayAllAnswered || !successful )  && allQuizzes && (\r\n              <div >\r\n                <h4>Quiz déjà répondus</h4>\r\n                <div className={`quiz`} >\r\n                    {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                        <h4 \r\n                        onClick= {() => setActiveQuiz(quiz, index)}\r\n                        > {quiz.quiz_id} \r\n                        </h4>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n\r\n\r\n      <div >\r\n        {currentQuiz && (\r\n          <div className=\"container-questions\"> \r\n            { validate &&\r\n                <Snackbar anchorOrigin={{ vertical :'top', horizontal: 'center' }}open={validate} autoHideDuration={6000} onClose={()=>handleClose()}>\r\n                <Alert onClose={()=>handleClose()} severity=\"error\">\r\n                  {'Please answer all questions'}\r\n                </Alert>\r\n            </Snackbar>\r\n            }\r\n            <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n            {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n              <div key={questions.question_id}>\r\n                <span style={{fontSize:\"20px\"}}>{questions.question_id}{'. '}{questions.question_title}</span>    \r\n                <div>\r\n                    <input \r\n                        className=\"input\"\r\n                        type=\"radio\" \r\n                        value=\"Oui\" \r\n                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                    /> Oui\r\n                    <input \r\n                        className=\"input\"\r\n                        type=\"radio\" \r\n                        value=\"Plutot Oui\"  \r\n                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                    /> Plutot Oui\r\n                    <input\r\n                        className=\"input\" \r\n                        type=\"radio\" \r\n                        value=\"Plutot Non\"  \r\n                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                    /> Plutot Non\r\n                    <input\r\n                        className=\"input\" \r\n                        type=\"radio\" \r\n                        value=\"Non\" \r\n                        checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                    /> Non\r\n                </div>\r\n\r\n                {radioOptions[questions.question_id] === \"Plutot Non\"\r\n                || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n                || radioOptions[questions.question_id] === \"Non\" ? (\r\n                  <div>\r\n                    {questions.question_options && questions.question_options.map((options, index) => ( \r\n                      <div>\r\n                        <label>\r\n                          <input type=\"checkbox\" value={options.options_id} \r\n                          checked={checkedItems[options.option_text]}  \r\n                          onChange={(e) => \r\n                              setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                          }\r\n                          />\r\n                          <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                        </label>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : (<span>No Explanation Needed</span>)}\r\n              </div>\r\n            ))}\r\n            <div className=\"form-group\">\r\n              <button className=\"btnn\" onClick={submitAnswers}>Submit Answers</button>\r\n            </div>\r\n          </div>\r\n            )\r\n          }\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\n  export default BoardUser","import axios from \"axios\";\r\n\r\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\r\n\r\nclass PostForm {\r\n    submit(title, created_by, questions) {\r\n        return axios\r\n            .post(API_URL + \"submit\", {\r\n                title,\r\n                created_by,\r\n                questions\r\n            })\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport default new PostForm();\r\n","import { Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@material-ui/core'\r\nimport {React} from 'react'\r\n\r\nconst ConfirmDialogue = (props) => {\r\n    const {confirmDialog} = props;\r\n    return (\r\n        <div>\r\n            <Dialog open={confirmDialog.isOpen}>\r\n                <DialogTitle >\r\n                    \r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Typography variant=\"h6\">\r\n                        {confirmDialog.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                        {confirmDialog.subTitle}\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <button className=\"btnn\" onClick={confirmDialog.onDiscard}>No</button>\r\n                    <button className=\"btnn\" onClick={confirmDialog.onConfirm}>Yes</button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmDialogue\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nconst ITEM_HEIGHT = 48; \r\n\r\nexport default function MenuOption(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n        style={{float:\"right\",color: '#4257b2'}}\r\n      >\r\n        <MoreVertIcon />\r\n        <span>Options</span>\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: '20ch',\r\n            color: '#4257b2'\r\n          },\r\n        }}\r\n      >\r\n        {props.options && props.options.map((option) => (\r\n          <MenuItem key={option.title} selected={option === 'Pyxis'} onClick={option.onclick} >\r\n            {option.icon}{option.title}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { Button, Snackbar, Switch } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PostForm from \"../services/admin-submit-form\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { List, ListItem,ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport SearchService from \"../services/search.service\";\r\nimport ConfirmDialogue from \"./confirm-dialogue\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport MenuOption from \"./menu\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport NoteCard from \"./NoteCard\";\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport { TextField } from \"@material-ui/core\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { EmailOutlined } from \"@material-ui/icons\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import Button from '@material-ui/core/Button';\r\nimport { Avatar, makeStyles, Typography } from '@material-ui/core';\r\nimport { DeleteOutlined } from '@material-ui/icons';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport {Title} from './Title';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n// Here is 5 constants related to the visual of our custom button\r\nconst StyledButtonAddExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonAddQuestion = withStyles({\r\n  root: {\r\n    background: '#4257b2',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF8700 30%, #FF1E1E 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelQuestion = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF1D1D 30%, #4C4C4C 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonSubmit = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #11FF00 30%, #00FF82 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass MyForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.onChangeQuestion = this.onChangeQuestion.bind(this);\r\n    this.onClickAddExplanation = this.onClickAddExplanation.bind(this);\r\n    // console.log(this.props.delete)\r\n    this.state = {\r\n      explanations: false,\r\n      delete : this.props.delete\r\n    };\r\n  }\r\n\r\n  onChangeQuestion(e){\r\n    this.props.onQuestionChange(e.target.value);\r\n  }\r\n\r\n  onChangeExplanation(indexExplanation, e){\r\n    this.props.onExplanationChange(indexExplanation, e.target.value)\r\n  }\r\n\r\n  onClickRemoveExplanation(indexExplanation){\r\n    this.props.onRemoveExplanationClick(indexExplanation);\r\n  }\r\n\r\n  onClickAddExplanation(){\r\n    this.props.onAddExplanationClick();\r\n    this.setState({\r\n      explanations: true\r\n    });\r\n  }\r\n\r\n  deleteQuiz(){\r\n    console.log(this.props)\r\n    // this.props.delete();\r\n  }\r\n  \r\n  createExplanationUI(){\r\n    return(\r\n      <div>\r\n          {this.props.explanations ?(this.props.explanations.map((element, indexExplanation) =>\r\n            <div>\r\n              <div key={indexExplanation} className=\"form-group\">\r\n                <label htmlFor=\"explanation\">Explication</label>\r\n                  <form id =\"formExp\" >\r\n                    <TextField\r\n                        onChange={this.onChangeExplanation.bind(this, indexExplanation)}\r\n                        id=\"inputExp\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        required //just adds the asterix\r\n                        size=\"small\"\r\n                        style={{height: \"50\"}}\r\n                    />\r\n                    <Tooltip title=\"Supprimer cette explication\">\r\n                    <button type= \"button\" id=\"buttonExp\" onClick={this.onClickRemoveExplanation.bind(this, indexExplanation)}> <DeleteForeverIcon style={{color:\"red\"}}/> </button>\r\n                    </Tooltip>\r\n                  </form>\r\n              </div>\r\n            </div>\r\n            )) : (<h3>No Explanation props</h3>)\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const question = this.state.question;\r\n    const deleteQuiz = this.state.delete;\r\n\r\n    return (\r\n      <div>\r\n        <Form >\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"question\" style={{paddingTop: \"10px\"}}>\r\n              <span>\r\n              <strong >Question</strong>\r\n              <Tooltip title=\"Supprimer cette question\">\r\n                <IconButton className=\"deleteQuestion\" onClick={deleteQuiz} style={{float:\"right\"}}>\r\n                    <DeleteForeverIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              </span>\r\n\r\n            </label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"question\"\r\n              value = {question}\r\n              onChange = {this.onChangeQuestion}\r\n              validations = {[required]}\r\n              autoComplete = \"off\"\r\n            />\r\n          </div>\r\n          {\r\n            this.state.explanations &&\r\n              this.createExplanationUI()\r\n          }\r\n          \r\n          <Tooltip title=\"Adjouter une explication\">\r\n            <IconButton  onClick={this.onClickAddExplanation} style={{color: \"#4257b2\", float:\"left\", marginBottom: \"15px\"}}>\r\n              <QueueIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <br/><br/>\r\n        </Form>\r\n\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClickAddQuestion = this.onClickAddQuestion.bind(this);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.allowQuiz = this.allowQuiz.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n    this.getQuiz = this.getQuiz.bind(this);\r\n    this.test = this.test.bind(this)\r\n\r\n    this.state = {\r\n      title: '',\r\n      created_by: '',\r\n      questions: [\r\n        {\r\n          question_id: '',\r\n          question_title: '',\r\n          question_options: []\r\n        }\r\n      ],\r\n      message: '',\r\n      currentUser: undefined,\r\n      submitted: false,\r\n      quizMdp:'',\r\n      allQuizzes: null,\r\n      displayQuizzes: null,\r\n      errorMessage: '',\r\n      laststate: null,\r\n      confirmDialog: {\r\n        isOpen:false,\r\n        title:'',\r\n        subTitle:''\r\n      },\r\n      updateTitle: \"Are you sure you want to update?\",\r\n      updateSubTitle : \"You will be able to edit again\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n      });\r\n    }\r\n\r\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${user.message.email}`).then((response) => {\r\n            console.log(response.data.quizzes);\r\n            if((response.data.quizzes).length ){\r\n                this.setState({\r\n                  allQuizzes: response.data.quizzes,\r\n                  displayQuizzes: true\r\n                });\r\n                // console.log(response.data.quizzes)\r\n            }\r\n            else{  \r\n                this.setState({\r\n                  allQuizzes: null,\r\n                  displayQuizzes: false\r\n                });\r\n            }\r\n          })\r\n          .catch(function (err) {\r\n              this.setState({\r\n                errorMessage: err.response.data.message|| err.response.data.message[0].error,\r\n              });\r\n          });\r\n\r\n          this.setState({\r\n            menuOptions : [\r\n              {\r\n                title: \"Back\",\r\n                icon : <ArrowBackIcon fontsize=\"large\"/>,\r\n                onclick : this.backToQuizzes\r\n              },\r\n              {\r\n                title: \"Edit\",\r\n                icon : <EditIcon fontsize=\"large\"/>,\r\n                onclick : this.editQuiz\r\n              },\r\n              {\r\n                title: \"Delete\",\r\n                icon : <DeleteForeverIcon fontsize=\"large\"/>,\r\n                onclick : ()=>this.setConfirmDialog(\"delete\",\"Are you sure you want to Delete this Quiz?\", \"Question will be deleted permanently but no with Students Records\", this.deleteQuiz)\r\n              }\r\n            ]\r\n          })\r\n  }\r\n\r\n  createQuiz = () => {\r\n    this.setState({\r\n      laststate: this.state.displayQuizzes,\r\n      displayQuizzes : null,\r\n      displayCreate : true,\r\n      displayQuiz: false,\r\n\r\n    })\r\n  }\r\n\r\n  backToQuizzes = () => {\r\n    this.setState({\r\n      displayQuizzes: this.state.laststate,\r\n      displayCreate: false,\r\n      displayQuiz: false,\r\n      edit: false\r\n\r\n    })\r\n  }\r\n\r\n  test(e){\r\n    alert(\"test\")\r\n  }\r\n\r\n  getQuiz = (quiz_idd) => {\r\n    SearchService.searchQuiz(\r\n      quiz_idd,\r\n    ).then(\r\n      response => {\r\n        // console.log(response.data.created_by);\r\n        // console.log()\r\n        this.setState({\r\n          displayQuiz: true,\r\n          laststate: this.state.displayQuizzes,\r\n          currentQuiz: response.data,\r\n          toggle: response.data.allow,\r\n          displayQuizzes : null,\r\n          displayCreate: false,\r\n        })\r\n      })\r\n      .catch(\r\n      error => {\r\n        console.log(error.response);\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) \r\n          || error.message || error.toString();\r\n        this.setState({\r\n          message: resMessage,\r\n          successful: false\r\n        })\r\n      }\r\n    );\r\n  }\r\n\r\n  setConfirmDialog = (type ,title, subtitle, onconfirm) => {\r\n        this.setState({\r\n          confirmDialog: {\r\n            isOpen: true,\r\n            title: title,\r\n            subTitle: subtitle,\r\n            onConfirm: onconfirm,\r\n            onDiscard: ()=>this.discard(type)\r\n          }\r\n        })\r\n  }\r\n\r\n  discard = (type) => {\r\n    if(type===\"update\" || type === \"delete\"){\r\n      this.setState({\r\n        confirmDialog: {\r\n          isOpen: false,\r\n          title: '',\r\n          subTitle: \"\",\r\n          onConfirm: null,\r\n          onDiscard: null\r\n        }\r\n      })\r\n    }\r\n    else if(type===\"toggle\"){\r\n      this.setState({\r\n        confirmDialog: {\r\n          isOpen: false,\r\n          title: '',\r\n          subTitle: \"\",\r\n          onConfirm: null,\r\n          onDiscard: null\r\n        },\r\n         toggle: !this.state.toggle\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleToggle = (event) =>{\r\n    this.setState({\r\n      toggle: event.target.checked\r\n    })\r\n    let title;\r\n    let message;\r\n    if(event.target.checked){\r\n      title = \"Allow Students to take Quiz?\";\r\n      message = \"Students Can Take Quiz now\"\r\n    }\r\n    else{\r\n      title = \"Do you want to Close Quiz?\"\r\n      message = \"Students Cannot Take Quiz now\"\r\n    }\r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: true,\r\n        title: title,\r\n        subTitle: this.state.subTitle,\r\n        onConfirm: () => this.allowQuiz(message),\r\n        onDiscard: ()=> this.discard(\"toggle\")\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  allowQuiz = (message) => {\r\n    let allow = this.state.toggle\r\n    // console.log(allow)\r\n    const quiz_id = this.state.currentQuiz.quiz_id;\r\n    axios.post(`https://neuroeducation-feedback.herokuapp.com/api/allowQuiz/${quiz_id}` , {\r\n      allow\r\n    })\r\n    .then((response) => {\r\n      // console.log(response.data);\r\n      let success;\r\n      if(allow){\r\n        success = allow\r\n      }\r\n      else{\r\n        success=allow\r\n      }\r\n      this.setState({\r\n        message: message,\r\n        open:true,\r\n        successful:success,\r\n        toggle: allow\r\n      })\r\n    })\r\n    .catch(function (err) {\r\n        // this.setState({\r\n        //   toggle: !this.state.toggle\r\n        // });\r\n        console.log(err.response.data.message|| err.response);\r\n    });\r\n    \r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: false,\r\n        title: '',\r\n        subTitle: \"\",\r\n        onConfirm: null,\r\n        onDiscard: null\r\n      }\r\n    })\r\n  }\r\n\r\n  updateQuiz = (event) =>{\r\n    event.preventDefault();\r\n    let updated_questions = [];\r\n\r\n    for(let i=1;i<=5;i++){\r\n      if(document.getElementById('Q'+i) === null){\r\n        break\r\n      }\r\n      var id = document.getElementById('Q'+i).value;\r\n\r\n      let expArr = [];\r\n      for(let j=1;j<=20;j++){\r\n        let alphabet = String.fromCharCode(96 + (j));\r\n        let expId = 'Q'+i+'E'+alphabet;\r\n\r\n        if(document.getElementById(expId) === null){\r\n          break\r\n        }\r\n        else{\r\n        var exp = document.getElementById(expId).value;\r\n        expArr.push({\r\n          options_id : alphabet,\r\n          options_text : exp\r\n        })}\r\n      }\r\n      updated_questions.push({question_id:i, question_title: id, question_options : expArr})\r\n    }\r\n\r\n    // console.log(updated_questions)\r\n    const quiz_id = document.getElementById(\"quiz_id\").value;\r\n    // console.log(quiz_id)\r\n    axios.post(`https://neuroeducation-feedback.herokuapp.com/api/updateQuiz/${quiz_id}` , {\r\n      updated_questions\r\n    })\r\n    .then((response) => {\r\n      // console.log(response.data);\r\n      this.setState({\r\n        message: \"Quiz Updated\",\r\n        open: true,\r\n        successful:true\r\n      })\r\n    })\r\n    .catch(function (err) {\r\n        console.log(err.response.data.message|| err.response);\r\n        this.setState({\r\n          message: \"Quiz Not Updated\",\r\n          open:true,\r\n          successful: false\r\n        })\r\n    });\r\n    \r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: false,\r\n        title: '',\r\n        subTitle: \"\",\r\n        onConfirm: null,\r\n        onDiscard: null\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteQuiz=()=> {\r\n        const id = this.state.currentQuiz.quiz_id;\r\n        const email = this.state.currentQuiz.created_by;\r\n        axios.delete(`https://neuroeducation-feedback.herokuapp.com/api/delete/${id}/${email}`)\r\n        .then((res) => {\r\n            // console.log(res)\r\n            this.setState({\r\n              open: true,\r\n              message: \"Quiz Deleted\",\r\n              danger: true,\r\n              successful:null,\r\n              allQuizzes : this.state.allQuizzes.filter((question) => question.quiz_id !== id)\r\n            })\r\n            // setallQuizzes(allQuizzes.filter((question) => question._id !== id))\r\n        })\r\n        .catch(err => {\r\n            console.log(err); \r\n            this.setState({\r\n              message: \"Quiz Not Deleted... Please Try Again\",\r\n              open:true,\r\n              successful: false\r\n            })\r\n        });\r\n        this.setState({\r\n          confirmDialog: {\r\n            isOpen: false,\r\n            title: '',\r\n            subTitle: \"\",\r\n            onConfirm: null,\r\n            onDiscard: null\r\n          }\r\n        })\r\n\r\n        this.backToQuizzes()\r\n    // this.setState({\r\n    //   open: true,\r\n    //   message: \"Not Functional Yet\",\r\n    //   danger: true,\r\n    //   successful:null\r\n    // })\r\n  }\r\n\r\n  editQuiz=()=>{\r\n    this.setState({\r\n      edit: true,\r\n      displayQuiz: false\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n\r\n  handleQuestionChange(indexQuestion, question){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_title = question;\r\n    questions[indexQuestion].question_id = indexQuestion+1;\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleExplanationChange(indexQuestion, indexExplanation, explanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options[indexExplanation].options_text = explanation;\r\n    \r\n    let alphabet = String.fromCharCode(96 + (indexExplanation+1));\r\n    questions[indexQuestion].question_options[indexExplanation].options_id = alphabet;\r\n    \r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  onChangeTitle(e){\r\n    let title = e.target.value;\r\n    this.setState({\r\n      title\r\n    });\r\n  }\r\n\r\n  onClickAddQuestion(){\r\n    this.setState(\r\n      prevState => ({questions : [...prevState.questions,        \r\n        {\r\n        question_title: '',\r\n        question_options: []\r\n      }]})\r\n    );\r\n  }\r\n\r\n  handleAddExplanationClick(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.push({options_text : ''});\r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  handleRemoveExplanationClick(indexQuestion, indexExplanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.splice(indexExplanation, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  onClickDelQuestion(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions.splice(indexQuestion, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleSubmit(){\r\n\r\n    const { currentUser} = this.state;\r\n\r\n    PostForm.submit(this.state.title, currentUser.message.email, this.state.questions).then(\r\n      (response) => {\r\n        // this.props.history.push({\r\n        //   pathname: \"/postSubmitForm\",\r\n        //   state:{quizMdp: response.quizMdp}\r\n        // })\r\n        // window.location.reload();\r\n      //  console.log(response);\r\n        this.setState({\r\n          message: 'Quiz submitted',\r\n          submitted: true,\r\n          quizMdp:response.quizMdp\r\n        });\r\n      },\r\n      error => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        this.setState({\r\n          message: resMessage,\r\n          questions: [\r\n            {\r\n              question_title: '',\r\n              question_options: []\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  createQuestionUI(){\r\n\r\n    return(this.state.questions.map((element, indexQuestion) => \r\n      <div className=\"questionContainer\">\r\n        <div className=\"container\" key={indexQuestion}>\r\n          <MyForm \r\n            onQuestionChange = {this.handleQuestionChange.bind(this, indexQuestion)}\r\n            onTitleChange = {this.handleTitleChange}\r\n            onExplanationChange = {this.handleExplanationChange.bind(this, indexQuestion)}\r\n            onAddExplanationClick = {this.handleAddExplanationClick.bind(this, indexQuestion)}\r\n            onRemoveExplanationClick = {this.handleRemoveExplanationClick.bind(this, indexQuestion)}\r\n            explanations = {this.state.questions[indexQuestion].question_options}\r\n            delete = {this.onClickDelQuestion.bind(this, indexQuestion)}\r\n          />\r\n          {/* <div className=\"delQuestion\">\r\n            <StyledButtonDelQuestion\r\n              variant = \"contained\" onClick = {this.onClickDelQuestion.bind(this, indexQuestion)}>Supprimer cette question\r\n            </StyledButtonDelQuestion>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  // Pourrait être utile plus tard donc je met de coté (deprecated)\r\n  // componentDidMount() {\r\n  //   UserService.getAdminBoard().then(\r\n  //     response => {\r\n  //       this.setState({\r\n  //         content: response.data\r\n  //       });\r\n  //     },\r\n  //     error => {\r\n  //       this.setState({\r\n  //         content:\r\n  //           (error.response &&\r\n  //             error.response.data &&\r\n  //             error.response.data.message) ||\r\n  //           error.message ||\r\n  //           error.toString()\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n\r\n    const title = this.state.title;\r\n    const currentUser = this.state.currentUser;\r\n    const allQuizzes = this.state.allQuizzes;\r\n    const displayQuizzes = this.state.displayQuizzes;\r\n    const displayCreate = this.state.displayCreate;\r\n    const displayQuiz = this.state.displayQuiz;\r\n    const currentQuiz = this.state.currentQuiz\r\n\r\n\r\n\r\n\r\n    // redirect to post/SubmitForm\r\n    if(this.state.submitted===true){\r\n      return <Redirect to={{ pathname: \"/postSubmitForm\", state: { quizMdp: this.state.quizMdp } }} />\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n      <div className=\"mainTeacherForm\">\r\n\r\n        <Snackbar anchorOrigin={{ vertical :'top', horizontal: 'center' }}open={this.state.open} autoHideDuration={6000} onClose={()=>this.handleClose()}>\r\n          <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        {\r\n          this.state.confirmDialog.isOpen && \r\n          <ConfirmDialogue\r\n          confirmDialog={this.state.confirmDialog}\r\n          setConfirmDialog={this.state.confirmDialog}\r\n          />\r\n        }\r\n\r\n        {(displayQuizzes===false || displayQuizzes) && \r\n          <div className=\"\">\r\n            {(allQuizzes && displayQuizzes) && (\r\n                <div >\r\n                    <SnackbarContent \r\n                    style={{backgroundColor: \"white\", position:\"sticky\", top: \"0\", \"z-index\": \"999\"}}\r\n                    message=\"\" \r\n                    action={<button className=\"btnn\" \r\n                    onClick={this.createQuiz}>Créer un nouveau Quiz</button>} \r\n                    />\r\n                    <div >      \r\n                      <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                        <Title data={'Quizs Créé par : ' + currentUser.message.firstname + \" \"+ currentUser.message.lastname} />\r\n                        <div className=\"row\" >\r\n                            {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"  onClick= {()=>this.getQuiz(quiz.quiz_id)}> \r\n                                    {/* <NoteCard note={quiz.quiz_id}  handleDelete={\"no delete\"} color={'#4257b2'}/> */}\r\n\r\n                                    <Card elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\r\n                                        <CardHeader\r\n                                              avatar={\r\n                                                  (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                      {quiz.quiz_id[0].toUpperCase()}\r\n                                                  </Avatar>)\r\n                                          }\r\n                                              // action={ handleDelete===\"no delete\" ? (\"\") :\r\n                                              //     (<IconButton style={{color: \"#4257b2\"}}>\r\n                                              //         <DeleteOutlined />\r\n                                              //     </IconButton>)\r\n                                              // }\r\n                                              title={quiz.quiz_id}\r\n                                              // subheader={note}\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                {quiz.quiz_id}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </Card>\r\n\r\n                                </div> \r\n                            ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {/* <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                        <List>\r\n                        {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                            <ListItem button  onClick= {()=>this.getQuiz(quiz.quiz_id)}>\r\n                                <ListItemIcon>\r\n                                    <BookOutlined />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\r\n                                    <h4>\r\n                                    {quiz.quiz_id} \r\n                                    </h4>\r\n                                }/>\r\n                            </ListItem>\r\n                        ))}\r\n                        </List>\r\n                    </div> */}\r\n                </div>\r\n            )}\r\n            {(displayQuizzes===false) && (\r\n              <div>\r\n                  <h4>{'Quizs Créé par : '}</h4>\r\n                  <h4> {currentUser.message.firstname+\" \"+currentUser.message.lastname}</h4>\r\n                  <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                      <h4>Vous n'avez pas créé de quiz</h4>\r\n                  </div>\r\n              </div>\r\n            )}\r\n            {/* <button className=\"btnn\" onClick={this.createQuiz}>Créer un nouveau Quiz</button> */}\r\n          </div>}\r\n\r\n        {(displayQuiz || this.state.edit) && currentQuiz &&\r\n          <div className=\"container-questions\">\r\n            <MenuOption options = {this.state.menuOptions}></MenuOption>\r\n            <Tooltip title=\"Back to list\">\r\n              <IconButton aria-label=\"back\" style={{color:'#4257b2'}} onClick={this.backToQuizzes}>\r\n                <ArrowBackIcon fontsize=\"large\"/>\r\n              </IconButton>\r\n            </Tooltip>\r\n            {/* <button className=\"btnn\"  onClick={this.backToQuizzes}><ArrowBackIcon fontsize=\"large\"/></button>  */}\r\n\r\n            {/* <button className=\"btnn\"  onClick={this.deleteQuiz}><DeleteForeverIcon fontsize=\"large\"/></button>  */}\r\n            {/* <button className=\"btnn\"  onClick={this.editQuiz}>Edit Quiz</button> */}\r\n            <p>\r\n                {currentQuiz.quiz + ' est actuellement ' + (this.state.toggle ? (\"permis\") : (\"interdit\")) +\"à prendre\"}             \r\n                <Switch\r\n                checked={this.state.toggle}\r\n                onChange={this.handleToggle}\r\n                name=\"switch\"\r\n                inputProps={{\"aria-label\":\"test switch\"}}\r\n                style={{color:\"#4257b2\"}}\r\n                color=\"primary\"\r\n                />\r\n            </p>\r\n            \r\n            {(currentQuiz && this.state.edit) && (\r\n              <div  > \r\n    \r\n                <Form id=\"myForm\">\r\n                  <div className=\"container\">\r\n                    <div className=\"form-group\">\r\n                      <center><h5 >{currentQuiz.quiz}</h5><br/></center>\r\n\r\n                      <Input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name=\"quiz_id\"\r\n                              id=\"quiz_id\"\r\n                              value = {currentQuiz.quiz_id}\r\n                              readOnly\r\n                          /> \r\n                      {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                        <div key={questions.question_id}>\r\n                          <label htmlFor={'Q'+questions.question_id}><strong>{'Question : '+questions.question_id}</strong></label>\r\n                          <Input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name={'Q'+questions.question_id}\r\n                              id={'Q'+questions.question_id}\r\n                              value = {questions.question_title}\r\n                              // onChange = {this.onChangeTitle}\r\n                              validations = {[required]}\r\n                              autoComplete = \"off\"\r\n                          /> \r\n\r\n                          {questions.question_options && questions.question_options.map((options, index) => ( \r\n                            <div>\r\n                            <label htmlFor={'Q'+questions.question_id+'E'+options.options_id}><strong>{'Explanation : '+options.options_id}</strong></label>\r\n                            <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name={'Q'+questions.question_id+'E'+options.options_id}\r\n                            id={'Q'+questions.question_id+'E'+options.options_id}\r\n                            value = {options.options_text}\r\n                            // onChange = {this.onChangeTitle}\r\n                            validations = {[required]}\r\n                            autoComplete = \"off\"\r\n                            />\r\n                            </div>\r\n                          ))}                  \r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>   \r\n                </Form> \r\n                <button className=\"btnn\" onClick={()=>this.setConfirmDialog(\"update\",\"Do you want to Edit this Quiz?\", \"You can edit again\", this.updateQuiz)}>Update</button>   \r\n              </div>\r\n              \r\n              )}\r\n\r\n              <div >\r\n                {(currentQuiz && displayQuiz) && (\r\n                  <div  > \r\n                    <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n                    {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                      <div key={questions.question_id}>\r\n                        <p><strong>{questions.question_id}{'. '}{questions.question_title}</strong></p>    \r\n                      \r\n                          <div>\r\n                            {questions.question_options && questions.question_options.map((options, index) => ( \r\n                              <div>\r\n                                <label>\r\n                                  <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                                </label>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        \r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n          </div>\r\n        }\r\n\r\n\r\n        <div>\r\n          {displayCreate && <div>\r\n            <div style={{width:\"100%\",   display: \"inline-flex\", \"justify-content\": \"center\"}}>\r\n            <button  id=\"backButton\" onClick={this.backToQuizzes}><ArrowBackIcon fontsize=\"large\"/></button> \r\n\r\n            <SnackbarContent \r\n            style={{ width : \"100%\" ,fontWeight:\"bold\", fontSize:\"1.2rem\", color: \"#4257b2\" ,backgroundColor: \"white\", position:\"sticky\", top: \"0\", \"z-index\": \"999\"}}\r\n            message=\"Création de nouvelles questions\" \r\n            action={\r\n              <button\r\n               className=\"btnn\" variant = \"contained\" onClick = {this.handleSubmit}>Valider\r\n              </button>\r\n            } \r\n            />\r\n            </div> \r\n            {/* <div className=\"container\">\r\n              <header className=\"jumbotron\">\r\n                <h3>Création de nouvelles questions</h3>\r\n              </header>\r\n            </div> */}\r\n\r\n            <Form>\r\n              <div className=\"container\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"form-title\"><strong>Titre du formulaire</strong></label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"form-title\"\r\n                      value = {title}\r\n                      onChange = {this.onChangeTitle}\r\n                      validations = {[required]}\r\n                      autoComplete = \"off\"\r\n                    />\r\n                </div>\r\n              </div>\r\n\r\n\r\n              {this.createQuestionUI()}\r\n\r\n\r\n              <div className=\"container\">\r\n                <br></br>\r\n                <SnackbarContent \r\n                style={{backgroundColor: \"white\"}}\r\n                message=\"\" \r\n                action={<button\r\n                 className=\"btnn\" type=\"button\" onClick = {this.onClickAddQuestion}>Ajouter une question\r\n              </button>} \r\n                />\r\n                {/* <StyledButtonAddQuestion\r\n                    variant = \"contained\" onClick = {this.onClickAddQuestion}>Ajouter une question\r\n                </StyledButtonAddQuestion>\r\n                <br></br><br></br>\r\n                <StyledButtonSubmit\r\n                  variant = \"contained\" onClick = {this.handleSubmit}>Valider\r\n                </StyledButtonSubmit> */}\r\n              </div>\r\n            </Form>\r\n\r\n            { this.state.message && \r\n              <div className=\"container\">\r\n                <div className=\"itsanerror\"><h3>Une erreur est survenu lors de l'envoi du formulaire</h3></div>\r\n              </div>\r\n            }\r\n          </div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class PostSubmitForm extends Component {\r\n    render(){\r\n        if(this.props.location.state === undefined){\r\n            // console.log(this.props.location); \r\n            return <Redirect to={{pathname:'/home'}}/>\r\n        }\r\n        return(\r\n            <div>\r\n                <div className=\"container\">\r\n                    <header className=\"jumbotron\">\r\n                        <div className=\"success\">\r\n                            <h3>Formulaire envoyé avec succès !</h3>\r\n                            <br></br>\r\n                            <h5>Voici le code du quizz à partager aux élèves :</h5>\r\n                            <p className=\"quizMdp\">{\" \" + this.props.location.state.quizMdp}</p>\r\n                        </div>\r\n                    </header>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Bar, HorizontalBar } from 'react-chartjs-2';\r\n\r\n\r\nconst BarChart = ( props ) => {\r\n\r\n    const names = props.explanationArray;\r\n    const explanationLabels = props.explanationLabels;\r\n    const explanationValues = props.explanationValues;\r\n    const barData = props.barData;\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {(barData === \"Bar\") ? (\r\n                        <Bar\r\n                        data={{\r\n                            labels: explanationLabels,\r\n                            datasets: [{\r\n                                data: explanationValues,\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ]\r\n                            }]\r\n                        }}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                            scales: {\r\n                                yAxes: [{\r\n                                    ticks: {\r\n                                        beginAtZero: true\r\n                                    }\r\n                                }]\r\n                            },\r\n                            legend: {\r\n                                display: false\r\n                            },\r\n                            tooltips: {\r\n                                callbacks: {\r\n                                    label: function(item, data){\r\n                                        return names[item.index];\r\n                                    },\r\n                                    title: function(item, data){\r\n                                        return;\r\n                                    }\r\n                                },\r\n                                displayColors: false\r\n                            }\r\n                        }}\r\n                    />\r\n            ): (\r\n                <HorizontalBar\r\n                data={{\r\n                    labels: explanationLabels,\r\n                    datasets: [{\r\n                        data: explanationValues,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            label: function(item, data){\r\n                                return names[item.index];\r\n                            },\r\n                            title: function(item, data){\r\n                                return;\r\n                            }\r\n                        },\r\n                        displayColors: false\r\n                    }\r\n                }}\r\n            />\r\n            )}\r\n    \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BarChart;","import { Doughnut, Pie } from 'react-chartjs-2';\r\n\r\n\r\nconst DoughnutChart = ({ labels, answerValues, pieData }) => {\r\n    return ( \r\n        <div>\r\n            {(pieData === \"Doughnut\") ? (\r\n                <Doughnut\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: [{\r\n                            data: answerValues,\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                            ]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            ):(\r\n                <Pie\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: [{\r\n                            data: answerValues,\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                            ]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            )}\r\n            \r\n        </div>\r\n     );\r\n}\r\n\r\nexport default DoughnutChart;","import React, {useState} from 'react'\r\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NoteCard from \"./NoteCard\";\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport Tooltip from '@material-ui/core/Tooltip'; \r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\n\r\n\r\n\r\n\r\nconst FlippyItems = ({frontSide, backSide}) => {\r\n    return (\r\n        <Flippy\r\n        // onmouseover={onMouseOver}\r\n        className=\"col-xs-12 col-sm-12 col-md-4 col-lg-3\"\r\n        flipOnHover={true} // default false\r\n        flipOnClick={false} // default false\r\n        flipDirection=\"horizontal\" // horizontal or vertical\r\n        // ref={(r) => this.flippy = r} // to use toggle method like this.flippy.toggle()\r\n        // if you pass isFlipped prop component will be controlled component.\r\n        // and other props, which will go to div\r\n        style={{ minWidth: '260px', height: '150px', marginBottom : \"25px\", marginRight : \"25px\"}} /// these are optional style, it is not necessary\r\n      >\r\n        <FrontSide\r\n          style={{\r\n            // backgroundColor: '#41669d',\r\n            padding: 0,\r\n            margin:0\r\n          }}\r\n        >\r\n          {frontSide}\r\n        </FrontSide>\r\n        <BackSide\r\n          style={{ \r\n            backgroundColor: '#4257b2',\r\n            padding: 2,\r\n            margin:0}}\r\n        >\r\n        <div> \r\n          {backSide}  \r\n        </div> \r\n        </BackSide>\r\n      </Flippy>\r\n    )\r\n}\r\n\r\nexport default FlippyItems\r\n","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n// import {FaTimes} from 'react-icons/fa'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SwapHorizRounded from '@material-ui/icons/SwapHorizRounded';import BarChart from './BarChart';\r\nimport { Container, List, ListItem, ListItemText} from '@material-ui/core';\r\nimport DoughnutChart from './DoughnutChart';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport NoteCard from \"./NoteCard\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport SearchService from \"../services/search.service\";\r\nimport { Avatar, Typography } from '@material-ui/core';\r\nimport {Title} from './Title';\r\n\r\n\r\n\r\nimport FlippyItems from './Flippy';\r\n\r\n\r\n\r\nconst AllAnswers = () => {\r\n    const [allAnswers, setallAnswers] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [array, setarray] = useState(null);\r\n    const [answersArray, setanswersArray] = useState();\r\n    const [explanationsArray, setexplanationsArray] = useState()\r\n    const [currentStudent, setcurrentStudent] = useState(null)\r\n    const [explanationStats, setexplanationStats] = useState(null)\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n    const [allQuestions, setAllQuestions] = useState([]);\r\n    const [allExplanations, setAllExplanations] = useState([]);\r\n    const [pieData, setPieData] = useState(\"Doughnut\");\r\n    const [barData, setBarData] = useState(\"Bar\");\r\n    const [pieTitle, setPieTitle] = useState(\"Graphique en anneau\");\r\n    const [barTitle, setBarTitle] = useState(\"Diagramme à bandes\");\r\n    const [displayAllQuizzes, setdisplayAllQuizzes] = useState(true);\r\n    const [displayStudentList, setdisplayStudentList] = useState(false);\r\n    const [displayStats, setdisplayStats] = useState(false)\r\n    const [actualQuiz, setactualQuiz] = useState(null)\r\n\r\n\r\n    // FIND ALL ANSWERED QUESTIONS ON PAGE LOAD\r\n    useEffect(() => {\r\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllAnswered').then((response) => {\r\n        //   console.log(response.data);\r\n          setallAnswers(response.data);\r\n          setShowSpinner(false);\r\n        })\r\n        .catch(function (error) {\r\n            // console.log(error);\r\n        });\r\n    }, []);\r\n\r\n    //ALTERNATE BETWEEN PIE AND DOUGHNUT CHART\r\n\r\n    const handlePieChartChange = () => {\r\n        if(pieData === \"Doughnut\"){\r\n            setPieData(\"Pie\")\r\n            setPieTitle(\"Diagramme circulaire\")\r\n        }\r\n        if(pieData === \"Pie\"){\r\n            setPieData(\"Doughnut\")\r\n            setPieTitle(\"Graphique en anneau\")\r\n        }\r\n    }\r\n    const handleBarChartChange = () => {\r\n        if(barData === \"Bar\"){\r\n            setBarData(\"Horizontal Bar\")\r\n            setBarTitle(\"Graphique à barres horizontales\")\r\n        }\r\n        if(barData === \"Horizontal Bar\"){\r\n            setBarData(\"Bar\")\r\n            setBarTitle(\"Diagramme à bandes\")\r\n        }\r\n    }\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index, quiz_id) => {\r\n        // console.log(quiz_id)\r\n        setcurrentQuiz(quiz);\r\n        getStats(quiz_id);\r\n        setcurrentStudent(null);\r\n        setexplanationStats(null);\r\n        setarray(null);\r\n\r\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${quiz_id}`)\r\n        .then(response => {\r\n            setAllQuestions(response.data.questions);\r\n            // console.log(response.data.questions);\r\n        })\r\n        .catch(err => {\r\n            // console.log(\"An error occurred\", err.response);\r\n        })\r\n\r\n\r\n        // GET ACTUAL QUESTIONS FROM DATABASE\r\n        SearchService.searchQuiz(\r\n            quiz.quiz_id,\r\n        ).then(\r\n            response => {\r\n            // console.log(response.data);\r\n            //   setsuccessful(true);\r\n            setactualQuiz(response.data);\r\n            })\r\n            .catch(\r\n            error => {\r\n            console.log(error.response);\r\n            const resMessage =\r\n                (error.response && error.response.data && error.response.data.message) \r\n                || error.message || error.toString();\r\n\r\n            //   setmessage(resMessage);\r\n            //   setsuccessful(false);\r\n            }\r\n        );\r\n    }; \r\n\r\n    // RETRIEVE GROUPPED DATA FROM THE DATABASE BY SELECTED QUIZ ID \r\n    const getStats = (quiz_id) => {\r\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/groupStats/${quiz_id}`)\r\n        .then(response => {\r\n            if(response){\r\n            // SET GROUPPED ANSWERS \"FOR EACH STUDENT\" ARRAY\r\n            setanswersArray(response.data[0]._id.answer);\r\n            // console.log(response.data[0]._id.answer)\r\n\r\n            // SET GROUPPED EXPLANATIONS \"FOR EACH STUDENT\" ARRAY\r\n            setexplanationsArray(response.data[0]._id.explanation);\r\n            // console.log(response.data[0]._id.explanation)\r\n            }\r\n        })\r\n        .catch()\r\n    }\r\n\r\n    // SET SELECTED(CLICKED) STUDENT ARRAY\r\n    const setActiveStudent = (student) => {\r\n        // console.log(student)\r\n        setcurrentStudent(student);\r\n    }\r\n\r\n// HANDLE STUDENT LIST\r\n    const handleStudentList = () => {\r\n        setdisplayAllQuizzes(false)\r\n        setdisplayStudentList(true)\r\n        setdisplayStats(false)\r\n    }\r\n\r\n    const backToQuizzes = () => {\r\n        setdisplayAllQuizzes(true)\r\n        setdisplayStudentList(false)\r\n        setdisplayStats(false)\r\n        setcurrentQuiz(null)\r\n        setcurrentStudent(null);\r\n        setexplanationStats(null);\r\n        setarray(null);\r\n    }\r\n\r\n    // MERGE ALL ANSWERS BY QUESTION NUMBER AND SET COUNT AND STATS\r\n    const stats = () => {\r\n        // MERGE ALL ANSWERS INTO AN ARRAY (arrAns)\r\n        const arrayAns = answersArray[0].map(function(value, index) {\r\n            const mergeAllStudentsByIndex = [value];\r\n            if(value){\r\n                for(let i=1; i<answersArray.length; i++){\r\n                    mergeAllStudentsByIndex.push(answersArray[i][index])\r\n                }\r\n            }\r\n            // console.log(mergeAllStudentsByIndex);\r\n            return mergeAllStudentsByIndex;\r\n        });\r\n        // console.log(arrayAns);\r\n\r\n         // MERGE ALL EXPLANATIONS INTO AN ARRAY (arrExp)\r\n        const arrayExp = explanationsArray[0].map(function(explanation, index) {\r\n            const mergeAllExplanation = [explanation];\r\n            if(explanation){\r\n                for(let i =1; i< explanationsArray.length; i++){\r\n                    mergeAllExplanation.push(explanationsArray[i][index])\r\n                }\r\n            }\r\n\r\n            return mergeAllExplanation;\r\n        });\r\n        // console.log(arrayExp)\r\n        \r\n        // COUNT NUMBER OF OCCURRENCE OF AN ANSWER(\"Plutot Oui\", \"Non\"... etc) FOR EACH QUESTION\r\n        const countAnswers = arrayAns.map((answers, index) => {\r\n            // console.log(array)\r\n            let all = {\r\n                \"Oui\" : 0,\r\n                \"Plutot Oui\" : 0,\r\n                \"Plutot Non\" : 0,\r\n                \"Non\": 0,\r\n            };\r\n            for(const answer of answers){\r\n                all = {...all,  [answer] : answers.filter((a) => {return a === answer}).length}\r\n            }\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setarray(countAnswers)\r\n\r\n        // GET EXPLANATIONS OF ALL QUESTIONS FOR THE CHART DISPLAY \r\n        const labelsArray = allQuestions.map((value, index) => {\r\n            const myArray = value.question_options.map((value, index) => {\r\n                return value.options_text;\r\n            })\r\n            return myArray\r\n        })\r\n\r\n        setAllExplanations(labelsArray);\r\n        // console.log(labelsArray);\r\n\r\n        // COUNT NUMBER OF OCCURRENCE OF AN EXPLANATION(\"a\", \"b\", \"c\"... etc) FOR EACH QUESTION\r\n        const countExplanations = arrayExp.map((array,index) => {\r\n            //return arr.filter((a) => {return a === \"a\"}).length\r\n            // console.log(array)\r\n            let all = {\r\n                a : 0,\r\n                b : 0,\r\n                c : 0,\r\n                d : 0,\r\n                e : 0\r\n            }\r\n            for(const letter of array){\r\n                all = {...all,  [letter] : array.filter((a) => {return a === letter}).length}\r\n            }\r\n\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setexplanationStats(countExplanations);\r\n        setdisplayStats(true)\r\n        setdisplayStudentList(false)\r\n        setdisplayAllQuizzes(false)    \r\n    }\r\n\r\n    // RETRIEVE INTEGERS(VALUES) FOR EXPLANATIONS\r\n    const getExplanationValues = (explanation, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(explanation[key])\r\n        })\r\n        return values;\r\n    }\r\n    // RETRIEVE INTEGERS(VALUES) FOR Y, MY, MN, N QUESTIONS\r\n    const getAnswerValues = (answer, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(answer[key])\r\n        })\r\n        return values;\r\n    }\r\n\r\n    //RETRIEVE KEYS(LABELS) FOR CHART DATA\r\n    const getLabels = object => {\r\n        return Object.keys(object);\r\n    }\r\n\r\n    // const disp = () => {\r\n    //     console.log(array);\r\n    //     console.log(explanationStats)\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-questions\">\r\n            {showSpinner && <div class=\"spinner\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            }\r\n            {!showSpinner &&  displayAllQuizzes && (<div  style={{borderRadius: \"10px\"}}>\r\n                <div >      \r\n                    <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                        <Title data=\"Liste de toutes les réponses\" />\r\n                    <div className=\"row\" >\r\n                        {allAnswers && allAnswers.map((quiz, index) => (\r\n                            <FlippyItems     \r\n                                frontSide={\r\n                                    <div key={index}  > \r\n                                        <Card \r\n                                        elevation={1} \r\n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}\r\n                                        onMouseOver={() => setActiveQuiz(quiz, index, quiz.quiz_id)}\r\n                                        >\r\n                                            <CardHeader\r\n                                                avatar={\r\n                                                    (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                        {quiz.quiz_id[0].toUpperCase()}\r\n                                                    </Avatar>)\r\n                                                }\r\n                                                title={quiz.quiz_id}\r\n                                                // subheader={note}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                    {(quiz.quiz_title).substr(0,27) + \"...\"}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Card>\r\n\r\n                                </div> \r\n                                }\r\n                            // handleStudentList = {()=>handleStudentList()}\r\n                            // stats={()=>stats()}\r\n                            // index={index}\r\n                            // quiz={quiz}\r\n                                backSide={\r\n                                    <div key={index}  > \r\n                                        <Card elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\r\n                                            <CardHeader\r\n                                                avatar={\r\n                                                    (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                        {quiz.quiz_id[0].toUpperCase()}\r\n                                                    </Avatar>)\r\n                                                }\r\n                                                title={(quiz.quiz_title)}\r\n                                                // subheader={note}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <div style={{float:\"right\", color:\"#4257b2\"}}> \r\n                                                    <Tooltip title=\"Cliquez pour les statistiques\">\r\n                                                        <IconButton  onClick={stats} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                                                            <EqualizerIcon />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                    <Tooltip title=\"Liste des étudiants\">\r\n                                                        <IconButton  onClick={handleStudentList} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                                                            <FormatListNumberedIcon />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n\r\n                                                </div>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                </div> \r\n                                }\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                {/* <List>\r\n                    {allAnswers && allAnswers.map((quiz, index) => (\r\n                        <ListItem button onClick= {() => setActiveQuiz(quiz, index, quiz.quiz_id)} >\r\n                            <ListItemIcon>\r\n                                <BookOutlined />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\r\n                                 <h4> \r\n                                     {quiz.quiz_title} {''} \r\n                                 </h4>\r\n                            } />\r\n                        </ListItem>\r\n                    ))}\r\n                </List> */}\r\n            </div>)}\r\n\r\n            <div>\r\n                {currentQuiz && (displayStudentList || displayStats) ? (\r\n                    <div>\r\n                        <IconButton  onClick={()=>backToQuizzes()} style={{float:\"left\", color:\"#4257b2\"}}>\r\n                        <ArrowBackIcon />\r\n                        </IconButton>\r\n                        <center><Title data={'Vous avez sélectionné le quiz : '+ currentQuiz.quiz_id} /></center>\r\n                        \r\n                        { displayStudentList && <div >\r\n                            <h4>{'Liste des étudiants : '}</h4>\r\n                            {currentQuiz.quiz_answers && currentQuiz.quiz_answers.map((students, index) => (\r\n                                <div>\r\n                                    <h4 onClick={() => setActiveStudent(students)}>{students.student_id}</h4>\r\n                                </div>\r\n                            ))}\r\n                        </div>}\r\n\r\n                        <div>\r\n                            {currentStudent && (\r\n                                <div>\r\n                                    <h4>{'Affichage des réponses sur  : '}{currentStudent.student_id}</h4>\r\n                                    {currentStudent && currentStudent.student_answers.map((answers, index) => (\r\n                                        <div> \r\n                                            <h4>{answers.question_answer_id}{' .'}{answers.answer}</h4>\r\n                                            <h4>{'Explication : '}{answers.explanation}</h4>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div style={{marginBottom: \"20px\"}}>\r\n\r\n                            {/* <button className=\"btnn\" onClick={stats}>Cliquez pour les statistiques</button> */}\r\n                        </div>\r\n                        <Container>\r\n                            {array && displayStats && (\r\n                                <div>\r\n                                    <Grid container spacing={3}>\r\n                                        {array && array.map((answer, index) => (\r\n                                            <Grid item sm={12} md={6} lg={4} >\r\n                                                <Card elevation={2}>\r\n                                                    <CardHeader\r\n                                                        action={\r\n                                                            <IconButton onClick={handlePieChartChange}>\r\n                                                                <SwapHorizRounded/>\r\n                                                            </IconButton>\r\n                                                        }\r\n                                                        title={\"\"}\r\n                                                        subheader={actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)} \r\n                                                    />\r\n                                                    <CardContent>\r\n                                                        <DoughnutChart\r\n                                                        pieData={pieData}\r\n                                                        labels={getLabels(answer)}\r\n                                                        answerValues={getAnswerValues(answer, getLabels(answer))} />\r\n                                                    </CardContent>\r\n                                                </Card>\r\n                                            </Grid>\r\n                                        ))}\r\n                                    </Grid>\r\n                                </div>\r\n                                                        \r\n                                ) }\r\n\r\n                            {explanationStats && (\r\n                                <div>\r\n                                        <Grid container spacing={3} >\r\n                                            {explanationStats && explanationStats.map((explanation, index) => (\r\n                                                <Grid item sm={12} md={6} lg={6}>\r\n                                                    <Card elevation={2}>\r\n                                                        <CardHeader\r\n                                                        action={\r\n                                                            <IconButton onClick={handleBarChartChange}>\r\n                                                                <SwapHorizRounded/>\r\n                                                            </IconButton>\r\n                                                        } \r\n                                                        title={\"\"}\r\n                                                        subheader={actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)}\r\n                                                        />\r\n                                                        <CardContent>\r\n                                                            <BarChart\r\n                                                                barData={barData} \r\n                                                                explanationArray={allExplanations[index]}\r\n                                                                explanationLabels={getLabels(explanation)}\r\n                                                                explanationValues={getExplanationValues(explanation, getLabels(explanation))} \r\n                                                            />\r\n                                                        </CardContent>\r\n                                                    </Card>\r\n                                                </Grid>\r\n                                            ))}\r\n                                        </Grid>\r\n                                </div>         \r\n                                )}\r\n                        </Container>    \r\n                    </div>\r\n                ) : (<Title data=\"Veuillez sélectionner un quiz pour afficher les réponses\" noUnderline={true} subHeader={true} />)}\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllAnswers;","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n// import {FaTimes} from 'react-icons/fa'\r\nimport { List, ListItem, ListItemText, Button, ListItemIcon } from '@material-ui/core';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\n\r\nimport FlippyItems from './Flippy';\r\n\r\n\r\nimport NoteCard from \"./NoteCard\";\r\nimport Flippy from 'react-flippy/dist/Flippy';\r\nimport {Title} from './Title';\r\n\r\n\r\nconst AllQuestions = () => {\r\n    const [allQuizzes, setallQuizzes] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [radioOptions, setradioOptions] = useState({});\r\n    const [checkedItems, setCheckedItems] = useState([]); \r\n    const [displayQuiz, setdisplayQuiz] = useState(false);\r\n    const [displayQuizzes, setdisplayQuizzes] = useState(true)\r\n\r\n    // const [currentUser] = useState(AuthService.getCurrentUser());\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n\r\n    // LOAD ALL QUIZZES FROM DATABASE ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n    useEffect(() => {\r\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllQ').then((response) => {\r\n        //   console.log(response.data);\r\n          setallQuizzes(response.data) \r\n          setShowSpinner(false);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    }, []);\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index) => {\r\n        // console.log(quiz)\r\n        setcurrentQuiz(quiz);\r\n        setdisplayQuizzes(false);\r\n        setdisplayQuiz(true);\r\n        \r\n    };\r\n\r\n    const backToQuizzes = () => {\r\n        setdisplayQuizzes(true);\r\n        setdisplayQuiz(false);\r\n    }\r\n\r\n    // RETURN CHECKED VALUE(true or false)\r\n    const checkRadioButton = (question_id, label) => {\r\n        if (!radioOptions[question_id]) {\r\n            return false;\r\n        }\r\n        return radioOptions[question_id] === label;\r\n    }\r\n\r\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n    const setradio = (id , answer) => {\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === id);\r\n        // console.log(find_question)\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === id).answer = answer;\r\n            setradioOptions((state) => {\r\n                // console.log(state);\r\n                return {\r\n                    ...state,\r\n                    [id] : answer\r\n                }\r\n            });\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        else{\r\n        setradioOptions((state) => {\r\n            console.log(state);\r\n            return {\r\n                ...state,\r\n                [id] : answer\r\n            }\r\n        });\r\n\r\n        setCheckedItems([\r\n            ...checkedItems,\r\n             {\r\n                question_answer_id : id,\r\n                answer: answer,\r\n                explanation: 'no explanation'\r\n            }\r\n        ]);}\r\n    }\r\n\r\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n        console.log(find_question)\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        \r\n    }\r\n\r\n    // SUBMIT ANSWERS TO THE BACKEND  // DISABLED BECAUSE ADMIN MUST NOT SUBMIT\r\n    // const submitAnswers = () =>{\r\n    //     setmessage('');\r\n    //     setsuccessful(false);\r\n    //     const answers = {\r\n    //         quiz_id : currentQuiz.quiz_id,\r\n    //         quiz_title : currentQuiz.quiz,\r\n    //         quiz_answers : {\r\n    //             student_id : currentUser.message.email,\r\n    //             student_answers : checkedItems\r\n    //         }\r\n    //     }\r\n    //     console.log(\"current: \", currentQuiz);\r\n\r\n    //     console.log(\"Radio Answer: \", radioOptions);\r\n    //     console.log(\"CheckedItems: \", checkedItems);\r\n    //     console.log(\"Final: \", answers);\r\n    //     Axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n    //         answers\r\n    //       }).then((res) => {\r\n    //             console.log(res);\r\n    //             if(res){\r\n    //                 //   window.location.reload(false);\r\n    //                 setmessage('You submitted Quiz as Admin or Teacher... Please Delete from the answers page else Stats will be affected');\r\n    //                 setsuccessful(true);\r\n    //                 setCheckedItems([]);\r\n    //                 setradioOptions({});\r\n\r\n    //             }\r\n    //       }).catch(error => {\r\n    //             console.log(error);\r\n    //             const errMessage =\r\n    //             (error.response.data.message[0].password || (error.response &&\r\n    //               error.response.data &&\r\n    //               error.response.data.message)) ||\r\n    //             error.message ||\r\n    //             error.toString();\r\n    //             console.log(errMessage);\r\n    //           setmessage(errMessage);\r\n    //             setsuccessful(false);            \r\n    //       });\r\n\r\n\r\n    // }\r\n\r\n\r\n\r\n    //DELETE SLECTED QUIZ WITH THE QUIZ ID FROM DAATABASE\r\n    // const onDelete = (id) => {\r\n    //     Axios.delete(`https://neuroeducation-feedback.herokuapp.com/api/delete/${id}`)\r\n    //     .then((res) => {\r\n    //         console.log(res)\r\n    //         setallQuizzes(allQuizzes.filter((question) => question._id !== id))\r\n    //     })\r\n    //     .catch(err => {\r\n    //         console.log(err); \r\n    //     });\r\n    // }; \r\n\r\n\r\n    return (\r\n        <div >\r\n            {/* html for spinner */}\r\n            {showSpinner && <div class=\"spinner\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            }\r\n            {!showSpinner && displayQuizzes && (<div  style={{borderRadius: \"10px\", marginTop: \"10px\"}}>\r\n                <List>\r\n                    {/* <h4></h4> */}\r\n                    <div >      \r\n                      <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                          <Title data='Liste de quiz' />\r\n                        <div className=\"row\" >\r\n                            {displayQuizzes && allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\" onClick= {() => setActiveQuiz(quiz, index)} style={{paddingTop: \"10px\"}}> \r\n                                    {/* <NoteCard note={quiz.quiz_id}  handleDelete={\"no delete\"} color={'#4257b2'}/> */}\r\n                                    <FlippyItems\r\n                                    frontSide={\r\n                                        <Card \r\n                                        elevation={1} \r\n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\r\n                                            <CardHeader\r\n                                                  avatar={\r\n                                                      (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                          {quiz.quiz_id[0].toUpperCase()}\r\n                                                      </Avatar>)\r\n                                              }\r\n        \r\n                                                  title={quiz.quiz_id}\r\n                                                  // subheader={note}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                    {(quiz.quiz).substr(0,27) + \"...\"}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Card> \r\n                                    }\r\n                                    backSide={\r\n                                        <Card \r\n                                        elevation={1} \r\n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\r\n                                            <CardHeader\r\n                                                  avatar={\r\n                                                      (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                          {quiz.quiz_id[0].toUpperCase()}\r\n                                                      </Avatar>)\r\n                                              }\r\n        \r\n                                                  title={quiz.quiz_id}\r\n                                                  // subheader={note}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                    {(quiz.quiz).substr(0,27) + \"...\"}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Card> \r\n                                    }\r\n                                    />\r\n\r\n                                </div> \r\n                            ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* { displayQuizzes && allQuizzes && allQuizzes.map((quiz, index) => (\r\n                        <ListItem button onClick= {() => setActiveQuiz(quiz, index)} >\r\n                            <ListItemIcon>\r\n                                <BookOutlined />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\r\n                                <h4> \r\n                                    {quiz.quiz} {''} \r\n                                </h4>\r\n                            } />\r\n                        </ListItem>\r\n                    ))} */}\r\n                </List>\r\n            </div>)}\r\n\r\n            <div>\r\n                {(displayQuiz && currentQuiz ) && (\r\n                    <div className=\"container-questions\">\r\n                        <Button onClick={()=> backToQuizzes()}><ArrowBackIcon fontsize=\"large\" style={{color: \"#4257b2\"}}/></Button> \r\n                        <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n                        {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                            <div key={questions.question_id}>\r\n                                <p><strong>{questions.question_id}{'. '}{questions.question_title}</strong></p>    \r\n                                <div>\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Oui\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Oui\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Plutot Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Non\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Plutot Non\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Non\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Non\r\n                                </div>\r\n                                {radioOptions[questions.question_id] === \"Plutot Non\"\r\n                                || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n                                || radioOptions[questions.question_id] === \"Non\" ? (\r\n                                    <div>\r\n                                        {questions.question_options && questions.question_options.map((options, index) => ( \r\n                                            <div>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" value={options.options_id} \r\n                                                    checked={checkedItems[options.option_text]}  \r\n                                                    onChange={(e) => \r\n                                                        setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                                                    }\r\n                                                    />\r\n                                                    <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                                                </label>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ) : (<span>Aucune explication requise</span>)}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) }\r\n            </div>\r\n            {/* <Button disableElevation variant=\"contained\" onClick={submitAnswers}>Soumettre les réponses</Button> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllQuestions\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport AuthService from \"../services/auth.service\";\r\nimport FormCard from './formCard'\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default class AdminRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\r\n\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      admin: false,\r\n      teacher: false,\r\n      roles : [],\r\n      successful: false,\r\n      message: \"\",\r\n      noRoleError: false,\r\n      mdpTmp: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCheckbox(e) {\r\n    let target = e.target;\r\n    let value = target.checked;\r\n    let name = target.name;\r\n    this.setState({\r\n        [name]: value,\r\n        noRoleError: false\r\n    })\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (!this.state.admin && !this.state.teacher) {\r\n      return (this.setState({\r\n        noRoleError: true\r\n      }))\r\n    }\r\n    else {\r\n      let roles = this.state.roles;\r\n      if (this.state.admin) {\r\n        roles.push(\"ROLE_ADMIN\");\r\n      }\r\n      if (this.state.teacher) {\r\n        roles.push(\"ROLE_TEACHER\")\r\n      }\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.adminRegister(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.roles,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: \"Compte créé avec succès\",\r\n            successful: true,\r\n            mdpTmp: response.data.mdpTmp\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n                {/* <TextField\r\n                    onChange={this.onChangeFirstname}\r\n                    // className={classes.field}\r\n                    // label=\"Note Title\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required //just adds the asterix\r\n                    // error={titleError} //this prop just adds a 'red styling' to the TextField to indicate an error, it is set to either true or false\r\n                /> */}\r\n        \r\n\r\n        {/* <FormCard/> */}\r\n\r\n        <div className=\"card card-container\">\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Prenom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangeFirstname}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Nom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangeLastname}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"teacher\"\r\n                      checked={this.state.teacher}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Professeur\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"admin\"\r\n                      checked={this.state.admin}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Administrateur\r\n                    </label>\r\n                  </div>\r\n\r\n                  {this.state.noRoleError && \r\n                    <div className=\"container\">\r\n                      <div className=\"itsanerror\">Vous devez sélectionner au moins un rôle</div>\r\n                    </div>\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button  className=\"btnn\">Créer le compte</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n\r\n                  {this.state.mdpTmp && (\r\n                    <div>\r\n                      <br></br><br></br>\r\n                      Votre mot de passe temporaire est :\r\n                      {\" \" + this.state.mdpTmp}\r\n                      <br></br><br></br>\r\n                      Vous pourrez le modifier en vous connectant à votre profil\r\n                    </div>\r\n                  )}\r\n                  \r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst ProtectedRoute =({ component: Component, role, ...rest })=> {\r\n        const currentUser = AuthService.getCurrentUser()\r\n        let isAuthenticated = '';\r\n        let isAuthorized = false;\r\n\r\n        if(currentUser){\r\n            isAuthenticated = currentUser.token;\r\n\r\n            role.map(roles => {\r\n                if(currentUser.message.roles.includes(roles)){\r\n                    isAuthorized = true;\r\n                } \r\n                return isAuthorized\r\n            });\r\n        }\r\n\r\n        return (isAuthenticated && (isAuthorized))? (\r\n            <Component />\r\n        ) : (\r\n            <div>\r\n            <Redirect to={{ pathname: '/home' }} />\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default ProtectedRoute;","\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nconst LineChart = ({ labels, data }) => {\r\n    return ( \r\n        <div>\r\n            <Line\r\n                data={{\r\n                    labels: labels,\r\n                    datasets: [{\r\n                        data: data,\r\n                        borderColor: 'hsl(205, 78%, 60%)'\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    },\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            label: (item, datax) => {\r\n                                let string = \"\"\r\n                                switch(data[item.index]){\r\n                                    case 4:\r\n                                        string = \"Oui\"\r\n                                        break\r\n                                    case 3:\r\n                                        string = \"Plutot Oui\"\r\n                                        break\r\n                                    case 2: \r\n                                        string = \"Plutot Non\"\r\n                                        break\r\n                                    default:\r\n                                        string = \"Non\"\r\n                                        break\r\n                                }\r\n                                return string\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LineChart;\r\n","//CREATE LABELS FOR LINE CHART \r\nconst LineLabels = (integer) => { //integer is == groupArray.length\r\n    let array = []\r\n    switch(integer){\r\n        case 1:\r\n            array = [\"1er quiz\"];\r\n            break;\r\n        case 2:\r\n            array = [\"1er quiz\", \"2e quiz\"];\r\n            break;\r\n        case 3:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\"];\r\n            break;\r\n        case 4:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\"];\r\n            break;\r\n        case 5:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\"];\r\n            break;\r\n        case 6:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\"];\r\n            break;\r\n        case 7:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\"];\r\n            break;\r\n        case 8:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\"];\r\n            break;\r\n        case 9:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\"];\r\n            break;\r\n        case 10:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\"];\r\n            break;\r\n        case 11:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\"];\r\n            break;\r\n        case 12:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\"];\r\n            break;\r\n        case 13:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\"];\r\n            break;\r\n        case 14:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\"];\r\n            break;\r\n        default:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\", \"15e quiz\"];\r\n            break;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  export default LineLabels;\r\n\r\n","import React from 'react';\r\nimport '../paginate.css';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport { List, ListItem, ListItemText, ListItemAvatar, Avatar, Button, IconButton } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nexport const Paginate = ({allStudents, getAllQuizzes, allQuizzes, displayQuizzes, setActiveQuiz, evolution}) => {\r\n    const [start, setStart] = useState(0)\r\n    const [end, setEnd] = useState(10)\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n\r\n    const prevStudent = () => {\r\n        setStart((old) => {\r\n            let newStart = old - 10\r\n            if(newStart < 0){\r\n                return allStudents.length - 10\r\n            }\r\n            else{\r\n                return newStart\r\n            }\r\n        })\r\n        setEnd((old) => {\r\n            let newEnd = old - 10\r\n            if((start - 10) < 0){\r\n                return allStudents.length\r\n            }\r\n            else{\r\n                return newEnd\r\n            }\r\n        })\r\n    }\r\n    const nextStudent = () => {\r\n        setStart((old) => {\r\n            let newStart = old + 10\r\n            if(newStart >= allStudents.length){\r\n                return 0\r\n            }\r\n            else{\r\n                return newStart\r\n            }\r\n        })\r\n        setEnd((old) => {\r\n            let newEnd = old + 10\r\n            if((start + 10) >= allStudents.length) {\r\n                return 10\r\n            }\r\n            else{\r\n                return newEnd\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        // {(allQuizzes && displayQuizzes) &00p0& (\r\n        //     <div >\r\n        //         <h4>{'Questionnaires auxquels ont répondu : '}</h4>\r\n        //         <h4> {currentStudent}</h4>\r\n        //         <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n        //             <List>\r\n        //             {allQuizzes && allQuizzes.map((quiz, index) => (\r\n        //                 <ListItem button onClick= {() => setActiveQuiz(quiz, index)}>\r\n        //                     <ListItemIcon>\r\n        //                         <BookOutlined />\r\n        //                     </ListItemIcon>\r\n        //                     <ListItemText primary={\r\n        //                         <h4>\r\n        //                         {quiz.quiz_id} \r\n        //                         </h4>\r\n        //                     }/>\r\n        //                 </ListItem>\r\n        //             ))}\r\n        //             </List>\r\n        //         </div>\r\n        //     </div>\r\n        // ) }\r\n        \r\n\r\n        <div>\r\n            {allStudents && allStudents.slice(start, end).map((student, index) => (\r\n                <Accordion expanded={expanded === `panel${index + 0}`} onChange={handleChange(`panel${index + 0}`)} onClick={()=> getAllQuizzes(student.email,student.firstname +' ' +student.lastname )}>\r\n                    <AccordionSummary\r\n                        aria-controls=\"panel2a-content\"\r\n                        id=\"panel2a-header\"\r\n                        expandIcon={<ExpandMore style={{color: \"#4257b2\"}} />}\r\n                    >\r\n                        <Avatar style={{fontSize: \"0.8rem\", backgroundColor: \"#4257b2\"}}>\r\n                            {(student.firstname[0] +' ' + student.lastname[0]).toUpperCase()}\r\n                        </Avatar>\r\n                        <Typography  style={{marginLeft: \"15px\"}} variant=\"h6\">{student.firstname +' ' +student.lastname}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        {(allQuizzes && displayQuizzes) && (\r\n                            <div style={{display: \"flex\"}}>\r\n                                {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                    <Tooltip title=\"show evolution\">\r\n                                        <Chip  style={{color:\"#fff\", marginLeft: \"5px\", backgroundColor: \"hsl(205, 78%, 60%)\"}} label={quiz.quiz_id} onMouseOver= {() => setActiveQuiz(quiz, index)} onClick={()=> evolution()}/>\r\n                                    </Tooltip>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        {(displayQuizzes === false) && (\r\n                            <Typography>Cet étudiant n'a répondu à aucun quiz</Typography>\r\n                        )}\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                // <ListItem key={student.email} button onClick={() => getAllQuizzes(student.email,student.firstname +' ' +student.lastname)}>\r\n                //     <ListItemAvatar>\r\n                //         \r\n                //     </ListItemAvatar>\r\n                //     <ListItemText primary={<h4>{student.firstname +' ' +student.lastname}</h4>}/>\r\n                // </ListItem>\r\n            ))}\r\n            <div className=\"button-container\">\r\n                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\"}} startIcon={ <FaChevronLeft />} className=\"prev-btn\" onClick={prevStudent}>\r\n                    Précédent\r\n                </Button>\r\n                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\"}} endIcon={<FaChevronRight />} className=\"next-btn\" onClick={nextStudent}>\r\n                    Suivant\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Avatar, Card, CardContent, CardHeader, Grid, IconButton, List, ListItem, ListItemAvatar, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport MoreVert from '@material-ui/icons/MoreVert';\r\nimport LineChart from './LineChart';\r\nimport LineLabels from './LineLabels';\r\nimport SearchService from \"../services/search.service\";\r\nimport {Paginate} from './Paginate';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\n\r\n\r\n\r\nconst AllStudents = () => {\r\n    const [allStudents, setallStudents] = useState([]);\r\n    const [allQuizzes, setallQuizzes] = useState(null)\r\n    // const [message, setmessage] = useState('');\r\n    const [errorMessage, seterrorMessage] = useState('')\r\n    // const [successful, setsuccessful] = useState(false);\r\n    const [displayQuizzes, setdisplayQuizzes] = useState(null);\r\n    const [displayActiveQuiz, setdisplayActiveQuiz] = useState(false)\r\n    const [displayEvolution, setdisplayEvolution] = useState(false);\r\n    const [displayMain, setdisplayMain] = useState(true);\r\n    const [currentStudent, setcurrentStudent] = useState(null);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n    const [lineArray, setLineArray] = useState([]);\r\n    const [displayLineChart, setDisplayLineChart] = useState(false);\r\n    const [actualQuiz, setactualQuiz] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get( \"https://neuroeducation-feedback.herokuapp.com/api/findAllStudents\")\r\n        .then(res => {\r\n            // console.log(res.data);\r\n            setallStudents(res.data);\r\n            setShowSpinner(false);\r\n        })\r\n        .catch(error => {\r\n            const resMessage =\r\n            (error.response && error.response.data && error.response.data.message) \r\n            || error.message || error.toString();\r\n  \r\n            seterrorMessage(resMessage);\r\n        });\r\n\r\n    }, [])\r\n\r\n    const getAllQuizzes = (student_id, name) => {\r\n        setcurrentQuiz(null);\r\n        setallQuizzes([]);\r\n        setdisplayQuizzes(null) \r\n        axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\r\n            // console.log(response.data.quizzes);\r\n            if((response.data.quizzes).length ){\r\n                setallQuizzes(response.data.quizzes)\r\n                setdisplayQuizzes(true); \r\n            }\r\n            else{\r\n                setallQuizzes(null)\r\n                setdisplayQuizzes(false)  \r\n            }\r\n            setActiveStudent(name);\r\n          })\r\n          .catch(function (err) {\r\n              seterrorMessage(err.response.data.message|| err.response.data.message[0].error);\r\n          });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n      // SET SELECTED(CLICKED) QUIZ\r\n  const setActiveQuiz = (quiz, index) => {\r\n    // console.log(quiz);\r\n    setdisplayActiveQuiz(true);\r\n    setcurrentQuiz(quiz);\r\n    let tempLineArray = [];\r\n    quiz.quiz_answers.forEach((quiz, index) => {\r\n        tempLineArray.push(getAllAns(quiz))\r\n    })\r\n    setLineArray(tempLineArray)\r\n\r\n    \r\n    // setdisplayQuizzes(null);\r\n\r\n// GET ACTUAL QUESTIONS FROM DATABASE\r\nSearchService.searchQuiz(\r\n    quiz.quiz_id,\r\n  ).then(\r\n    response => {\r\n    //   console.log(response.data);\r\n    //   setsuccessful(true);\r\n      setactualQuiz(response.data);\r\n    })\r\n    .catch(\r\n    error => {\r\n    //   console.log(error.response);\r\n      const resMessage =\r\n        (error.response && error.response.data && error.response.data.message) \r\n        || error.message || error.toString();\r\n\r\n    //   setmessage(resMessage);\r\n    //   setsuccessful(false);\r\n    }\r\n  );\r\n  };\r\n\r\n  const setActiveStudent = (name) => {\r\n    // console.log(name)\r\n    setcurrentStudent(name);\r\n    // setcurrentQuiz(quiz);\r\n    // setcurrentIndex(index)\r\n  };\r\n\r\n  const backToAllQuizzes = () => {\r\n    setdisplayQuizzes(true);\r\n    setdisplayActiveQuiz(false);\r\n  }\r\n\r\n  const evolution = () => {\r\n    if(displayMain===true && displayEvolution===false){\r\n        setdisplayMain(false); \r\n        setdisplayEvolution(true);\r\n        setDisplayLineChart(true);\r\n    } \r\n    else if(displayMain===false && displayEvolution===true){\r\n        setdisplayMain(true); \r\n        setdisplayEvolution(false);\r\n        setDisplayLineChart(false);\r\n    } \r\n\r\n\r\n  }\r\n  // CREATE ARRAY CONTAINING ANSWERS OF EACH ATTEMPT\r\n  const getAllAns = quiz => {\r\n    let array = []\r\n    quiz.student_answers.forEach(answers=> {\r\n        switch(answers.answer){\r\n            case \"Non\":\r\n                array.push(1)\r\n                break\r\n            case \"Plutot Non\":\r\n                array.push(2)\r\n                break\r\n            case \"Plutot Oui\":\r\n                array.push(3)\r\n                break\r\n            default:\r\n                array.push(4)\r\n                break\r\n        }\r\n    })\r\n    return array\r\n  }\r\n\r\n//   import {useHistory} from 'react'\r\n//   const history = useHistory()\r\n\r\n//   const myClickFunction = () => {\r\n//       history.push('/go-to-somewhere')\r\n//   }\r\n\r\n  //GENERATE DATA VALUES FOR LINE CHART \r\n  const getLineData = (groupArray, index) => {\r\n    let dataArray = []\r\n    groupArray.forEach((item) => {\r\n        dataArray.push(item[index])\r\n    })\r\n    return dataArray\r\n  }\r\n\r\n \r\n \r\n\r\n    return (\r\n    \r\n        <div className=\"container-questions\">\r\n            {errorMessage ? (\r\n                <div className=\"form-group\">\r\n                    <div\r\n                    className={ \"alert alert-danger\"}\r\n                    role=\"alert\"\r\n                    >\r\n                    {errorMessage}\r\n                    </div>\r\n                </div>\r\n            ):(\r\n                <div>\r\n                    {displayMain  && <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                            <Typography\r\n                                style={{textAlign: \"center\", color:\"#4257b2\"}}\r\n                                variant=\"h5\"\r\n                            >\r\n                                {'Liste des étudiants '}\r\n                                <div className=\"underline\"></div>\r\n                            </Typography>\r\n                           \r\n                            {showSpinner && (<div class=\"spinner\">\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>)}\r\n                            {!showSpinner && (<div  class=\"quiz\" style={{borderRadius: \"10px\"}}>\r\n                                    {/* <List>\r\n                                        {allStudents && allStudents.map((student,index) =>(\r\n                                            <ListItem button onClick={()=> getAllQuizzes(student.email,student.firstname +' ' +student.lastname )}>\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar>\r\n                                                    {(student.firstname[0] +' ' +student.lastname[0]).toUpperCase()}\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText primary={<h4>{student.firstname +' ' +student.lastname}</h4>} />\r\n                                            </ListItem>\r\n                                        ))}\r\n                                    </List> */}\r\n                                    <Paginate \r\n                                        allStudents={allStudents}\r\n                                        getAllQuizzes={getAllQuizzes}\r\n                                        allQuizzes={allQuizzes}\r\n                                        displayQuizzes={displayQuizzes}\r\n                                        setActiveQuiz={setActiveQuiz}\r\n                                        evolution={evolution}\r\n                                    />\r\n                                </div>)}\r\n\r\n                        </div>\r\n                        {/* <div className=\"col-xs-12 col-sm-12 col-md-6\">   */}\r\n                            {/* {(allQuizzes && displayQuizzes) && (\r\n                                <div >\r\n                                    <h4>{'Questionnaires auxquels ont répondu : '}</h4>\r\n                                    <h4> {currentStudent}</h4>\r\n                                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                        <List>\r\n                                        {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                            <ListItem button onClick= {() => setActiveQuiz(quiz, index)}>\r\n                                                <ListItemIcon>\r\n                                                    <BookOutlined />\r\n                                                </ListItemIcon>\r\n                                                <ListItemText primary={\r\n                                                    <h4>\r\n                                                    {quiz.quiz_id} \r\n                                                    </h4>\r\n                                                }/>\r\n                                            </ListItem>\r\n                                        ))}\r\n                                        </List>\r\n                                    </div>\r\n                                </div>\r\n                            ) } */}\r\n                            {/* {(displayQuizzes===false) && (\r\n                                <div>\r\n                                    <h4>{'Questionnaires auxquels ont répondu : '}</h4>\r\n                                    <h4> {currentStudent}</h4>\r\n                                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                        <h4>Cet étudiant n'a répondu à aucun quiz</h4>\r\n                                    </div>\r\n                                </div>\r\n                            \r\n                            )} */}\r\n                            {/* <div > */}\r\n                            {/* {(currentQuiz && displayActiveQuiz) && \r\n                                <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                    <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <BookOutlined />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={\r\n                                            <h4>\r\n                                            {currentQuiz.quiz_id} \r\n                                            </h4>\r\n                                        }/>\r\n                                    </ListItem>\r\n                                    <h4>{currentStudent+' has taken this quiz '+ (currentQuiz.quiz_answers.length) +' times'}</h4>\r\n                                    <button className=\"btnn\" onClick={()=> backToAllQuizzes()}>Back</button>\r\n                                    <button className=\"btnn\" onClick={()=> evolution()}>{'View Answers & Evolution'}</button>\r\n                                </div>\r\n                            } */}\r\n                                \r\n\r\n                        {/* </div> \r\n                        </div> */}\r\n\r\n            \r\n                    </div>\r\n                    }\r\n                    <div>                        \r\n                        {/* <div className=\"row\">\r\n                            \r\n                            {(currentQuiz && displayEvolution) && currentQuiz.quiz_answers.map((quiz, index)=>(                            \r\n                                <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n                                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                        <h4>{'Attempt number ' + (index+1)}</h4>\r\n                                        {quiz.student_answers.map((answers, idx)=>(\r\n                                            <div>\r\n                                            <h4>{'Question '+answers.question_answer_id}</h4>\r\n                                            <h4>{'answer: ' +answers.answer +' explanation: ' +answers.explanation}</h4>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>    \r\n                                </div>  \r\n                            ))}\r\n                        </div> */}\r\n\r\n                        {displayLineChart && (\r\n                            <div>\r\n                             <IconButton  onClick={()=>evolution()} style={{float:\"left\", color:\"#4257b2\"}}>\r\n                                <ArrowBackIcon />\r\n                            </IconButton>\r\n                            <Grid container spacing={3}>\r\n                                {(lineArray.length && displayLineChart) && lineArray[0].map((attempt, index) => (\r\n                                    <Grid item md={6} sm={12} lg={4} >\r\n                                        <Card elevation={2}>\r\n                                            <CardHeader\r\n                                                action={\r\n                                                    <IconButton>\r\n                                                        <MoreVert />\r\n                                                    </IconButton>\r\n                                                }\r\n                                                title={<Typography style={{fontSize: \"1rem\"}} color=\"textSecondary\" variant=\"h6\" component=\"p\">{actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)}</Typography>}\r\n                                                subheader={<div style={{fontSize: \"0.8rem\"}}>Oui-4 Plutot Oui-3 Plutot Non-2 Non-1</div>}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <LineChart labels={LineLabels(lineArray.length)} data={getLineData(lineArray, index)} />\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                            </div>\r\n                           \r\n                        )}\r\n                    </div>    \r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllStudents\r\n","import {useState, useEffect} from 'react'\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\nconst VerifyAccount = ({match: { params }} ) => {\r\n    const [message, setmessage] = useState('');\r\n    const [successful, setsuccessful] = useState(false)\r\n\r\n    useEffect(() => {\r\n        AuthService.verifyAccount(params.token)\r\n        .then(response=>{\r\n            setmessage(response.data.message);\r\n            setsuccessful(true);\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n            setmessage(error.response.data.message|| error.response.data);\r\n            setsuccessful(false);\r\n        })\r\n    }, [params.token])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerifyAccount\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\r\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n\r\nconst AdminDashboard = () => {\r\n    let history = useHistory(); \r\n    const classes = useStyles();\r\n\r\n\r\n    const routeChange = (path, item) =>{\r\n    let newPath = path;\r\n    if(item===\"DATABASE\"){\r\n        return window.location.href = newPath;\r\n    }\r\n    history.push(newPath);\r\n  }\r\n\r\n  const childRoute = route =>{\r\n    if(route===\"USER\"){\r\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/User'\r\n    }\r\n    else if(route===\"QUIZZES\"){\r\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/Quizzes'\r\n    }\r\n    else if(route===\"HISTORY\"){\r\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/history'\r\n    }\r\n  }\r\n\r\n  const dashboardArray = [\r\n      {\r\n        title: \"ADD ACCOUNT\",\r\n        path: '/adminRegister',\r\n        children: [],\r\n        message: \"Add a new Admin or Teacher into the Database.\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <SupervisorAccountIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n    {\r\n        title: \"EVOLUTION \",\r\n        path: '/students',\r\n        children: [],\r\n        message: \"As an admin or teacher, view all students progress with a few clicks\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <TrackChangesIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n    {\r\n        title: \"ALL QUIZZES\",\r\n        path: '/questions',\r\n        children: [],\r\n        message: \"A list of all quizzes in the database. View all with a few clicks\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <AssignmentIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },    \r\n    {\r\n        title: \"ALL ANSWERS\",\r\n        path: '/answers',\r\n        children: [],\r\n        message: \"A history of all student answers in the database. View all with a few clicks\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <RecentActorsIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n    // {\r\n    //     title: \"DASHBOARD\",\r\n    //     path: '/dashboard',\r\n    //     children: [],\r\n    //     message: \"A link to the admin dashboard where you can see everything\",\r\n    //     actions : {\r\n    //         one: \"Share\",\r\n    //         two: \"Learn More\"\r\n    //     },\r\n    //     icon: <DashboardIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    // },\r\n    {\r\n        title: \"DATABASE\",\r\n        path: 'https://neuroeducation-feedback.herokuapp.com/admin/',\r\n        children: ['USER', 'QUIZZES', 'HISTORY'],\r\n        message: \"This is a special page for the Admin. For Managing Database.\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <StorageIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n        <div className=\"col-xs-12 col-sm-12 col-md-12\" style={{paddingTop: \"60px\"}}>\r\n            <div className=\"row\">\r\n                {dashboardArray && dashboardArray.map(item => (\r\n                    <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"> \r\n                        <Card className={classes.root} style={{height:200, padding: \"20px\", \"margin-bottom\": \"10px\"}}>\r\n                            <CardActionArea>\r\n                                {/* <CardMedia\r\n                                className={classes.media}\r\n                                image=\"/static/images/cards/contemplative-reptile.jpg\"\r\n                                title=\"Contemplative Reptile\"\r\n                                /> */}\r\n                                <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n                                    {/* <div className=\"row\" >\r\n                                        hii\r\n                                    {Parser(item.icon)}\r\n                                    </div> */}\r\n                                    <Typography variant=\"h6\" style={{color:\"#4257b2\"}}>{item.title} <div className=\"underlinee\"></div></Typography>\r\n                                    {item.icon}\r\n                                    {/* <StorageIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" /> */}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {item.message}\r\n                                </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                                {item.title=== \"DATABASE\" ? (\"\") : \r\n                                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\"}} onClick={()=>routeChange(item.path, item.title)}>\r\n                                GO TO\r\n                                </Button>\r\n                                }\r\n\r\n                                {item.children && item.children.map(child=> (\r\n                                    <Button \r\n                                    size=\"small\" \r\n                                    style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\", width: \"45%\"}} \r\n                                    onClick={()=>childRoute(child)}>\r\n                                        {child}\r\n                                    </Button>\r\n                                    // <button className=\"btnn\" onClick={()=>childRoute(child)} style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\", width: \"45%\"}}>{child}</button>\r\n\r\n                                 ))\r\n                                }\r\n                            </CardActions>\r\n                        </Card>\r\n                    </div>\r\n                ))\r\n   }\r\n            </div>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import React, {useEffect} from 'react';\r\nimport { Link} from \"react-router-dom\";\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n// import HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n      // console.log(props)\r\n  }, [props])\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n      // style={{background:\"#e6e6d5\"}}\r\n    >\r\n\r\n    <List style={{\"paddingTop\": \"30px\", background: \"#4257b2\"}}>\r\n        <ListItem button key={\"home\"} style={{color: 'white'}}>\r\n            <ListItemIcon> <MenuIcon style={{color: 'white'}}fontsize=\"large\"/></ListItemIcon>\r\n            <ListItemText primary={\"MENU\"} />   \r\n          </ListItem>\r\n \r\n      </List>\r\n      <List >\r\n        {props.lists && (props.lists).map((text, index) => (\r\n         <Link to={text.link} style={{color: '#4257b2', textDecoration: 'none'}}>   \r\n          <ListItem button key={text.title}>\r\n            <ListItemIcon>{text.icon}</ListItemIcon>\r\n            <ListItemText primary={text.title} />   \r\n          </ListItem>\r\n         </Link> \r\n        ))}\r\n      </List>\r\n      {/* <Divider /> */}\r\n      <List style={{position: \"absolute\",bottom: 0}}>\r\n        {props.actions.map((text, index) => (\r\n         <Link to={text.link} onClick={text.onclick} style={{color: '#4257b2', textDecoration: 'none'}}>   \r\n            <ListItem button key={text.title}>\r\n                <ListItemIcon>{text.icon}</ListItemIcon>\r\n                <ListItemText primary={text.title} />   \r\n            </ListItem>\r\n        </Link>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div >\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}><MenuIcon style={{color:\"white\",  float:\"left\"}} fontSize=\"large\"></MenuIcon></Button>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)} style={{background:\"#e6e6d5\"}}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n// import axios from 'axios';\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Home2 from \"./components/home2.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport PostSubmitForm from \"./components/postSubmitForm.component\";\r\nimport AllAnswers from \"./components/all-answers.component\";\r\nimport AllQuestions from './components/allquestions.component';\r\nimport AdminRegister from \"./components/admin-register.component\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport ProtectedRoute from \"./components/protected-routes.component\";\r\nimport AllStudents from \"./components/all-students.component\";\r\nimport VerifyAccount from \"./components/verify-account.component\";\r\nimport AdminDashboard from \"./components/Admin/admin-dashboard\";\r\nimport TemporaryDrawer from \"./components/navbar\";\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n\r\nconst theme = createMuiTheme({\r\n  palette:{\r\n    primary: {\r\n      main: \"#DCDCDC\"\r\n    }\r\n  }\r\n})\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showAdminBoard: false,\r\n      showTeacherBoard: false,\r\n      currentUser: undefined,\r\n      admin:[\"ROLE_ADMIN\"],\r\n      adminTeacher:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\"],\r\n      allUsers:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\" , \"ROLE_STUDENT\"],\r\n      studentAdmin: [\"ROLE_STUDENT\", \"ROLE_ADMIN\"]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    \r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showAdminBoard: user.message.roles.includes(\"ROLE_ADMIN\"),\r\n        showTeacherBoard: user.message.roles.includes(\"ROLE_TEACHER\"),\r\n        navList : [\r\n        // {\r\n        //   title : \"Accueil\",\r\n        //   link : '/home'\r\n        // },\r\n        (user && !user.message.roles.includes(\"ROLE_TEACHER\")) && {\r\n          title : \"Utilisateur\",\r\n          link : '/user',\r\n          icon: <FindInPageIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\") ) && {\r\n          title : \"Ajouter un Quiz\",\r\n          link : '/addQuiz',\r\n          icon: <AddBoxIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {\r\n          title : \"Page Questions\",\r\n          link : '/questions',\r\n          icon: <SupervisorAccountIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {            \r\n          title : \"Page Reponses\",\r\n          link : '/answers',\r\n          icon: <AssignmentIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {            \r\n          title : \"Page Etudiants\",\r\n          link : '/students',\r\n          icon: <RecentActorsIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        user.message.roles.includes(\"ROLE_ADMIN\")  && {\r\n          title : \"Admin Dashboard\",\r\n          link : '/dashboard',\r\n          icon: <DashboardIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        }\r\n\r\n        \r\n      ],\r\n      actions : [user &&  {\r\n          title : (user.message.firstname),\r\n          link : '/profile',\r\n          onclick : '',\r\n          icon: <AccountCircleIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        user &&  {\r\n          title : \"Deconnexion\",\r\n          link : '/home',\r\n          onclick : this.logOut,\r\n          icon: <ExitToAppIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        }\r\n      ]\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n    this.setState({\r\n      currentUser: undefined,\r\n      showAdminBoard: false,\r\n      showTeacherBoard: false\r\n    })\r\n    if (!this.state.currentUser) {  \r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //  const { currentUser, showAdminBoard, showTeacherBoard, admin, adminTeacher, allUsers, student, navList } = this.state;\r\n    const { currentUser, admin, adminTeacher, allUsers, studentAdmin, navList } = this.state;\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark \" style={{background:'#4257b2'}}>\r\n            \r\n            {currentUser && \r\n              <TemporaryDrawer lists = {navList} actions={this.state.actions}></TemporaryDrawer>\r\n              }\r\n\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n              Outsmarted\r\n            </Link>\r\n            \r\n            {/* <div className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/home\"} className=\"nav-link\">\r\n                  <Button color=\"primary\">Accueil</Button>\r\n                </Link>\r\n              </li>\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/admin\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Ajouter un quiz</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n              {showAdminBoard && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/adminRegister\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">Ajouter un compte</Button>\r\n                  </Link>\r\n                </li>\r\n              )}\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/questions\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Page Questions</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/answers\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Page Réponses</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/students\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Page Etudiants</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n                {(currentUser && !showTeacherBoard) && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/user\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">Répondre à un quiz</Button>\r\n                  </Link>\r\n                </li>\r\n                )}\r\n\r\n                {showAdminBoard  && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/dashboard\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">TEST</Button>\r\n                  </Link>\r\n                </li>\r\n                )}\r\n            </div> */}\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/profile\"} className=\"nav-link\">\r\n                    <Button color=\"primary\" style={{textTransform: \"none\"}}><AccountCircleIcon style={{color:\"white\",  float:\"right\"}} fontSize=\"large\" />{currentUser.message.firstname}</Button>\r\n                  </Link>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                  <Link to={\"/home\"} className=\"nav-link\" onClick={this.logOut}>\r\n                    <Button color=\"primary\">Déconnexion</Button>\r\n                  </Link>\r\n                </li> */}\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\">\r\n                    <Button color=\"primary\" style={{textTransform: \"none\"}}>Se Connecter</Button>\r\n                  </Link>\r\n                </li>\r\n                \r\n\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\">\r\n                    <Button color=\"primary\" style={{textTransform: \"none\", font:\"Robotto\"}}>Créer un Compte</Button>\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            )}\r\n\r\n            </nav>\r\n\r\n            <div className=\"container pt-3\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home2} />\r\n                <Route exact path=\"/home\" component={Home2} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                <Route exact path=\"/verifyAccount/:token\" component={VerifyAccount} />\r\n                <Route exact path=\"/postSubmitForm\" component={PostSubmitForm}/>\r\n                <ProtectedRoute exact path=\"/adminRegister\" component={AdminRegister} role={admin}/>\r\n                <ProtectedRoute exact path=\"/profile\" component={Profile} role={allUsers}/>\r\n                <ProtectedRoute exact path=\"/user\" component={BoardUser} role={studentAdmin}/>\r\n                <ProtectedRoute exact path=\"/questions\" component={AllQuestions} role={adminTeacher}/>\r\n                <ProtectedRoute exact path=\"/answers\" component={AllAnswers} role={adminTeacher}/>\r\n                <ProtectedRoute exact path=\"/students\" component={AllStudents} role={allUsers}/>\r\n                <ProtectedRoute exact path=\"/addQuiz\" component={BoardAdmin} role={adminTeacher}/>\r\n                <ProtectedRoute exact path=\"/dashboard\" component={AdminDashboard} role={admin}/>\r\n                <ProtectedRoute  component={Home} />\r\n              </Switch>\r\n            </div>\r\n          \r\n\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n\r\n  }\r\n    \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// serviceWorker.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}