{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","components/home.component.js","components/home2.component.js","components/modifyPassword.component.js","components/profile.component.js","services/search.service.js","components/board-user.component.js","services/admin-submit-form.js","components/confirm-dialogue.js","components/board-admin.component.js","components/postSubmitForm.component.js","components/BarChart.js","components/DoughnutChart.js","components/all-answers.component.js","components/allquestions.component.js","components/admin-register.component.js","components/protected-routes.component.js","components/all-students.component.js","components/verify-account.component.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","email","password","axios","post","then","response","console","log","data","token","localStorage","setItem","JSON","stringify","removeItem","firstname","lastname","password_confirmation","roles","old_password","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vlastname","vfirstname","vpassword","vpasswordConfirmation","Register","handleRegister","onChangeFirstname","onChangeLastname","onChangePasswordConfirmation","successful","register","Home","content","Home2","title","description","textAlign","marginTop","height","width","borderRadius","src","alt","ModifyPassword","useState","oldPw","setOldPw","newPw","setNewPw","confirmNewPw","setConfirmNewPw","setmessage","setsuccessful","userEmail","placeholder","onClick","oldPass","newPass","confirmPass","changePassword","res","catch","errMessage","Profile","currentUser","getCurrentUser","substring","substr","_id","map","index","id","get","answers","Alert","elevation","variant","vsearch","BoardUser","search","setsearch","seterrorMessage","currentQuiz","setcurrentQuiz","radioOptions","setradioOptions","checkedItems","setCheckedItems","allQuizzes","setallQuizzes","displayAllAnswered","setdisplayAllAnswered","validate","setvalidate","useEffect","student_id","quizzes","err","checkRadioButton","question_id","label","setradio","answer","checkedArray","x","find_question","find","a","question_answer_id","explanation","handleClose","SearchService","searchQuiz","quiz","setActiveQuiz","quiz_id","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","severity","questions","indexx","question_title","checked","question_options","options","options_id","option_text","setCheckbox","options_text","timestamp","Date","now","formatedTimestamp","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","quiz_answers","student_answers","time_submitted","created_by","ConfirmDialogue","confirmDialog","setconfirmDialog","Dialog","isOpen","DialogTitle","DialogContent","Typography","subTitle","DialogActions","onDiscard","onConfirm","StyledButtonAddExplanation","withStyles","root","background","border","color","padding","boxShadow","margin","textTransform","Button","StyledButtonAddQuestion","StyledButtonDelExplanation","StyledButtonDelQuestion","StyledButtonSubmit","MyForm","onChangeQuestion","onClickAddExplanation","explanations","onQuestionChange","indexExplanation","onExplanationChange","onRemoveExplanationClick","onAddExplanationClick","element","onChangeExplanation","autoComplete","onClickRemoveExplanation","question","createExplanationUI","BoardAdmin","createQuiz","laststate","displayQuizzes","displayCreate","displayQuiz","backToQuizzes","edit","getQuiz","quiz_idd","toggle","allow","setConfirmDialog","updateQuiz","discard","handleToggle","event","allowQuiz","success","updated_questions","i","document","getElementById","expArr","j","alphabet","String","fromCharCode","expId","exp","deleteQuiz","danger","editQuiz","onClickAddQuestion","onChangeTitle","handleSubmit","undefined","submitted","quizMdp","errorMessage","updateTitle","updateSubTitle","user","indexQuestion","prevState","splice","PostForm","submit","handleQuestionChange","onTitleChange","handleTitleChange","handleExplanationChange","handleAddExplanationClick","handleRemoveExplanationClick","onClickDelQuestion","to","pathname","List","ListItem","button","ListItemIcon","ListItemText","primary","Switch","inputProps","readOnly","createQuestionUI","PostSubmitForm","BarChart","names","explanationArray","explanationLabels","explanationValues","barData","labels","datasets","backgroundColor","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","legend","tooltips","callbacks","item","displayColors","DoughnutChart","answerValues","pieData","AllAnswers","allAnswers","setallAnswers","array","setarray","answersArray","setanswersArray","explanationsArray","setexplanationsArray","currentStudent","setcurrentStudent","explanationStats","setexplanationStats","showSpinner","setShowSpinner","allQuestions","setAllQuestions","allExplanations","setAllExplanations","setPieData","setBarData","pieTitle","setPieTitle","barTitle","setBarTitle","Axios","handlePieChartChange","handleBarChartChange","getStats","getExplanationValues","keys","values","forEach","key","getAnswerValues","getLabels","object","Object","class","quiz_title","students","student","marginBottom","arrayAns","mergeAllStudentsByIndex","arrayExp","mergeAllExplanation","countAnswers","all","filter","labelsArray","countExplanations","b","d","letter","Container","Grid","container","spacing","sm","md","lg","Card","CardHeader","action","IconButton","subheader","CardContent","AllQuestions","disableElevation","vusername","AdminRegister","onChangeCheckbox","admin","teacher","noRoleError","mdpTmp","adminRegister","ProtectedRoute","component","isAuthenticated","isAuthorized","includes","AllStudents","allStudents","setallStudents","setdisplayQuizzes","displayActiveQuiz","setdisplayActiveQuiz","displayEvolution","setdisplayEvolution","displayMain","setdisplayMain","setActiveStudent","evolution","ListItemAvatar","Avatar","toUpperCase","idx","VerifyAccount","params","match","verifyAccount","theme","createMuiTheme","palette","main","App","logOut","showAdminBoard","showTeacherBoard","adminTeacher","allUsers","logout","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.f46aae88.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n// const API_URL = \"http://localhost:5050/api/\";\r\n\r\nclass AuthService {\r\n  login(email, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        email,\r\n        password\r\n      })\r\n      .then(response => {\r\n        console.log(response.data);\r\n\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(firstname, lastname, email, password, password_confirmation) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      firstname, \r\n      lastname, \r\n      email, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  verifyAccount(token) {\r\n    return axios.post(API_URL + \"verifyAccount\", {\r\n      token\r\n    });\r\n  }\r\n\r\n  adminRegister(firstname, lastname, email, roles) {\r\n    return axios\r\n    .post(API_URL + \"signup\", {\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      roles\r\n    });\r\n  }\r\n\r\n  changePassword(email, old_password, password, password_confirmation) {\r\n    return axios\r\n    .post(API_URL + \"changePassword\", {\r\n      email, \r\n      old_password, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.email, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n            \r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email de l'utilisateur</label>\r\n              <Input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Mot de passe</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Se connecter</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vlastname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vfirstname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le mot de passe doit contenir entre 6 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst vpasswordConfirmation = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangePasswordConfirmation = this.onChangePasswordConfirmation.bind(this);\r\n\r\n    this.state = {\r\n      lastname: \"\",\r\n      firstname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  // onChangeUsername(e) {\r\n  //   this.setState({\r\n  //     username: e.target.value\r\n  //   });\r\n  // }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePasswordConfirmation(e) {\r\n    this.setState({\r\n      password_confirmation: e.target.value\r\n    });\r\n  }\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.password_confirmation,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n          console.log(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"firstname\">Prenom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"firstname\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangeFirstname}\r\n                    validations={[required, vfirstname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"lastname\">Nom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"lastname\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangeLastname}\r\n                    validations={[required, vlastname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password_confirmation\">Confirmer Mot de passe</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password_confirmation\"\r\n                    value={this.state.password_confirmation}\r\n                    onChange={this.onChangePasswordConfirmation}\r\n                    validations={[required, vpasswordConfirmation]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Créer le compte</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // UserService.getPublicContent().then(\r\n    //   response => {\r\n    //     this.setState({\r\n    //       content: response.data.body\r\n    //     });\r\n    //   },\r\n    //   error => {\r\n    //     this.setState({\r\n    //       content:\r\n    //         (error.response && error.response.data) ||\r\n    //         error.message ||\r\n    //         error.toString()\r\n    //     });\r\n    //   }\r\n    // );\r\n    this.setState({\r\n      content: \"Bienvenue dans votre application de Neuroéducation\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      title: \"Bienvenue dans votre application de Neuroéducation\",\r\n      description: \"Cette application permet aux élèves de prendre conscience de leurs stratégies de réussite et des potentielles origines de leurs erreurs\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <header className=\"jumbotron\">\r\n                    <h3>{this.state.title}</h3>\r\n                </header>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h5>{this.state.description}</h5>\r\n                <div style={{textAlign: \"center\", marginTop: \"20px\"}}>\r\n                  <img style={{height: \"500px\", width: \"500px\", borderRadius: \"10px\"}} src=\"/brain-storming.png\" alt=\"students brainstorming\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}","import {useState} from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\n// import CheckButton from \"react-validation/build/button\";\r\n// import React, { Component } from \"react\";\r\n\r\nimport AuthService from '../services/auth.service'\r\n\r\n\r\n\r\n// const currentPassword = \"\"\r\n\r\n\r\n// const required = (value) => {\r\n//     if (!value) {\r\n//         return (\r\n//             <div className=\"alert alert-danger\" role=\"alert\">\r\n//                 Ce champ est obligatoire !\r\n//             </div>\r\n//         );\r\n//     }\r\n// };\r\n\r\n// const vpassword = value => {\r\n//     if (value.length < 6 || value.length > 50) {\r\n//       return (\r\n//         <div className=\"alert alert-danger\" role=\"alert\">\r\n//           Le mot de passe doit contenir entre 6 et 50 charactères.\r\n//         </div>\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const vpasswordConfirmation = value => {\r\n//     if (value !== newPw) {\r\n//       return (\r\n//         <div className=\"alert alert-danger\" role=\"alert\">\r\n//           Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n//         </div>\r\n//       );\r\n//     }\r\n//   };\r\n\r\nconst ModifyPassword = (props) =>{\r\n    const [oldPw, setOldPw] = useState('')\r\n    const [newPw, setNewPw] = useState('')\r\n    const [confirmNewPw, setConfirmNewPw] = useState('')\r\n    const [message, setmessage] = useState('');\r\n    const [successful, setsuccessful] = useState(false);\r\n    const [userEmail] = useState(props.email)\r\n\r\n    const ApplyModifications =(email,oldPass, newPass, confirmPass) => {\r\n        console.log(email)\r\n        setmessage('');\r\n        setsuccessful(false);\r\n        AuthService.changePassword(email, oldPass, newPass, confirmPass)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            setmessage(\"Password Successfully Changed\");\r\n            setsuccessful(true);\r\n        })\r\n        .catch((error) =>{\r\n            const errMessage =\r\n              (error.response.data.message[0].password || (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message)) ||\r\n              error.message ||\r\n              error.toString();\r\n              console.log(errMessage);\r\n            setmessage(errMessage);\r\n            setsuccessful(false);\r\n        })\r\n    }\r\n\r\n\r\n\r\nreturn (\r\n    <div className=\"card card-container\">\r\n        \r\n        <strong>Changement de mot de passe</strong>\r\n        <Form>\r\n        <label name=\"oldPw\">Ancien mot de passe</label>\r\n        <Input name=\"oldPw\" value={oldPw} placeholder=\"******\" onChange={(e) => setOldPw(e.target.value)} />\r\n        <label name=\"newPw\">Nouveau mot de passe</label>\r\n        <Input name=\"newPw\" value={newPw} placeholder=\"******\" onChange={(e) => setNewPw(e.target.value)} />\r\n        <label name=\"confirmNewPw\">Confirmer le nouveau mot de passe</label>\r\n        <Input name=\"confirmNewPw\" value={confirmNewPw} placeholder=\"******\" onChange={(e) => setConfirmNewPw(e.target.value)} />\r\n        {/* <CheckButton\r\n            style={{ display: \"none\" }}\r\n            ref={c => {\r\n            Component.checkBtn = c;\r\n            }}\r\n        /> */}\r\n        </Form>\r\n        <button className=\"btnn\" onClick={() => ApplyModifications(userEmail,oldPw,newPw,confirmNewPw)}>Confirmer</button>\r\n\r\n        {message && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\r\n                successful\r\n                  ? \"alert alert-success\"\r\n                  : \"alert alert-danger\"\r\n              }\r\n              role=\"alert\"\r\n            >\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n    </div>\r\n);\r\n}\r\n\r\n\r\n\r\nexport default ModifyPassword;\r\n","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport ModifyPassword from \"./modifyPassword.component\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser()\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n          Profile : <strong>{currentUser.message.firstname}{' '}{currentUser.message.lastname}</strong> \r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.token.substring(0, 20)} ...{\" \"}\r\n          {currentUser.token.substr(currentUser.token.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.message._id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.message.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.message.roles &&\r\n            currentUser.message.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n        <ModifyPassword email={currentUser.message.email}/>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n// const API_URL = \"http://localhost:5050/api/${id}\";\r\n\r\n\r\nclass SearchService {\r\n\r\n  searchQuiz(id) {\r\n    return axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${id}`, {\r\n      \r\n    });\r\n  }\r\n\r\n  submitAnswers(answers){\r\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n        answers\r\n      })\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new SearchService();\r\n","import React from \"react\";\r\nimport SearchService from \"../services/search.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vsearch = value => {\r\n  if (value.length < 6) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 6 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst BoardUser = () => {\r\n  const [search, setsearch] = useState('');\r\n  const [successful, setsuccessful] = useState(false);\r\n  const [message, setmessage] = useState('');\r\n  const [errorMessage, seterrorMessage] = useState('');\r\n  const [errors, seterrors] = useState([])\r\n  const [currentQuiz, setcurrentQuiz] = useState(null);\r\n  const [radioOptions, setradioOptions] = useState({})\r\n  const [checkedItems, setCheckedItems] = useState([]); \r\n  const [currentUser] = useState(AuthService.getCurrentUser()) ;\r\n  const [allQuizzes, setallQuizzes] = useState([]);\r\n  const [displayAllAnswered, setdisplayAllAnswered] = useState(false);\r\n  const [validate, setvalidate] = useState(false)\r\n\r\n\r\n  // LOAD ALL QUIZZES ANSWERED BY CURRENT STUDENT FROM DATABASE \r\n  //ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n  useEffect(() => {\r\n    const student_id = currentUser.message.email;\r\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\r\n      console.log(response.data.quizzes);\r\n      setallQuizzes(response.data.quizzes) \r\n    })\r\n    .catch(function (err) {\r\n        seterrorMessage(err.response);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  // SET SELECTED(CLICKED) QUIZ\r\n  const setActiveQuiz = (quiz, index) => {\r\n    console.log(quiz)\r\n    // setcurrentQuiz(quiz);\r\n    // setcurrentIndex(index)\r\n  };\r\n\r\n  const onChangeSearch = (e) =>{\r\n    setsearch(e.target.value)\r\n  }\r\n\r\n  // RETURN CHECKED VALUE(true or false)\r\n  const checkRadioButton = (question_id, label) => {\r\n      if (!radioOptions[question_id]) {\r\n          return false;\r\n      }\r\n      return radioOptions[question_id] === label;\r\n  }\r\n\r\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n    const setradio = (id , answer) => {\r\n      let checkedArray = checkedItems.map(x => {return {...x}})\r\n      const find_question = checkedArray.find(a => a.question_answer_id === id);\r\n      console.log(find_question)\r\n      if(find_question) {\r\n          checkedArray.find(a => a.question_answer_id === id).answer = answer;\r\n          setradioOptions((state) => {\r\n              console.log(state);\r\n              return {\r\n                  ...state,\r\n                  [id] : answer\r\n              }\r\n          });\r\n          setCheckedItems(checkedArray);\r\n      }\r\n      else{\r\n      setradioOptions((state) => {\r\n          console.log(state);\r\n          return {\r\n              ...state,\r\n              [id] : answer\r\n          }\r\n      });\r\n\r\n      setCheckedItems([\r\n          ...checkedItems,\r\n           {\r\n              question_answer_id : id,\r\n              answer: answer,\r\n              explanation: 'no explanation'\r\n          }\r\n      ]);}\r\n  }\r\n\r\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n      let checkedArray = checkedItems.map(x => {return {...x}})\r\n      const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n      console.log(find_question)\r\n      if(find_question) {\r\n          checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n          setCheckedItems(checkedArray);\r\n      }\r\n      \r\n  }\r\n\r\n  // SUBMIT ANSWERS TO THE BACKEND\r\n  const submitAnswers = () =>{\r\n    // setmessage(\"\");\r\n    // setsuccessful(false);\r\n    // setdisplayAllAnswered(false);\r\n    const timestamp = Date.now(); // This would be the timestamp you want to format\r\n    const formatedTimestamp = new Intl.DateTimeFormat('en-US', {year: 'numeric',\r\n                              month: '2-digit',day: '2-digit', hour: '2-digit', \r\n                              minute: '2-digit', second: '2-digit'}).format(timestamp);\r\n    console.log(new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',\r\n                day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'})\r\n                .format(timestamp));\r\n    const answers = {\r\n        quiz_id : currentQuiz.quiz_id,\r\n        quiz_answers : {\r\n            student_id : currentUser.message.email,\r\n            student_answers : checkedItems,\r\n            time_submitted : formatedTimestamp,\r\n        }\r\n    }\r\n\r\n\r\n    if((currentQuiz.questions).length != (answers.quiz_answers.student_answers).length){\r\n      // setmessage(null);\r\n      // setsuccessful(null);\r\n      // setdisplayAllAnswered(false);\r\n      console.log((currentQuiz.questions).length);\r\n      console.log((answers.quiz_answers.student_answers).length);\r\n      setvalidate(true);\r\n      // setmessage('Please answer all quizzes');\r\n              // setsuccessful(false);\r\n              return setvalidate(true);\r\n    }\r\n\r\n    console.log(\"Radio Answer: \", radioOptions);\r\n    console.log(\"CheckedItems: \", checkedItems);\r\n    console.log(\"Final: \", answers);\r\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n        answers\r\n      }).then((res) => {\r\n          console.log(res);\r\n          if(res){\r\n              //   window.location.reload(false);\r\n              setcurrentQuiz(null);\r\n              setCheckedItems([]);\r\n              setradioOptions({});\r\n              setallQuizzes([...allQuizzes, answers])\r\n              setmessage('Answers Submitted');\r\n              setsuccessful(true);\r\n              setdisplayAllAnswered(true);\r\n              \r\n          }\r\n      }).catch(err => {\r\n          setcurrentQuiz(null)  \r\n          setsuccessful(false);\r\n          console.log(err.response.data.message|| err.response.data.message[0].error);   \r\n          setmessage(err.response.data.message|| err.response.data.message[0].error);\r\n                 \r\n      });\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setvalidate(false)\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    setmessage(\"\");\r\n    setsuccessful(false);\r\n    setdisplayAllAnswered(false);\r\n\r\n    // this.form.validateAll();\r\n\r\n    SearchService.searchQuiz(\r\n      search,\r\n    ).then(\r\n      response => {\r\n        console.log(response.data);\r\n        setsuccessful(true);\r\n        setcurrentQuiz(response.data);\r\n      })\r\n      .catch(\r\n      error => {\r\n        console.log(error.response);\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) \r\n          || error.message || error.toString();\r\n\r\n        setmessage(resMessage);\r\n        setsuccessful(false);\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\nreturn (\r\n<div>\r\n  <div className=\"row\">\r\n    <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n    <div className={!successful || message ? \"card card-container\" : \"\"}>\r\n        {(!successful || displayAllAnswered)  && (\r\n          <div >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"search\">Search for Quiz</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"search\"\r\n                value={search}\r\n                onChange={onChangeSearch}\r\n                validations={[required, vsearch]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button className=\"btn btn-primary btn-block\"  onClick={handleSearch}>Search Quiz</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {message && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\r\n                successful\r\n                  ? \"alert alert-success\"\r\n                  : \"alert alert-danger\"\r\n              }\r\n              role=\"alert\"\r\n            >\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      </div>\r\n\r\n      <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n    <div className={!successful || message ? \"card card-container\" : \"\"}>\r\n        {(displayAllAnswered || !successful )  && allQuizzes && (\r\n          <div >\r\n            <h4>Quizzes Already Answered</h4>\r\n            <div className={`quiz`} >\r\n                {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                    <h4 \r\n                    onClick= {() => setActiveQuiz(quiz, index)}\r\n                    > {quiz.quiz_id} \r\n                    </h4>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n      </div>\r\n      </div>\r\n      </div>\r\n\r\n\r\n      <div >\r\n      {currentQuiz && (\r\n        <div className=\"container-questions\"> \r\n          { validate &&\r\n              <Snackbar anchorOrigin={{ vertical :'top', horizontal: 'center' }}open={validate} autoHideDuration={6000} onClose={()=>handleClose()}>\r\n              <Alert onClose={()=>handleClose()} severity=\"error\">\r\n                {'Please answer all questions'}\r\n              </Alert>\r\n           </Snackbar>\r\n          }\r\n          <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n          {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n            <div key={questions.question_id}>\r\n              <h4>{questions.question_id}{'. '}{questions.question_title}</h4>    \r\n              <div>\r\n                  <input \r\n                      className=\"input\"\r\n                      type=\"radio\" \r\n                      value=\"Oui\" \r\n                      checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                      onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                  /> Oui\r\n                  <input \r\n                      className=\"input\"\r\n                      type=\"radio\" \r\n                      value=\"Plutot Oui\"  \r\n                      checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                      onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                  /> Plutot Oui\r\n                  <input\r\n                      className=\"input\" \r\n                      type=\"radio\" \r\n                      value=\"Plutot Non\"  \r\n                      checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                      onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                  /> Plutot Non\r\n                  <input\r\n                      className=\"input\" \r\n                      type=\"radio\" \r\n                      value=\"Non\" \r\n                      checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                      onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                  /> Non\r\n              </div>\r\n\r\n              {radioOptions[questions.question_id] === \"Plutot Non\"\r\n              || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n              || radioOptions[questions.question_id] === \"Non\" ? (\r\n                <div>\r\n                  {questions.question_options && questions.question_options.map((options, index) => ( \r\n                    <div>\r\n                      <label>\r\n                        <input type=\"checkbox\" value={options.options_id} \r\n                        checked={checkedItems[options.option_text]}  \r\n                        onChange={(e) => \r\n                            setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                        }\r\n                        />\r\n                        <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (<span>No Explanation Needed</span>)}\r\n            </div>\r\n          ))}\r\n          <div className=\"form-group\">\r\n            <button className=\"btnn\" onClick={submitAnswers}>Submit Answers</button>\r\n          </div>\r\n        </div>\r\n          )\r\n        }\r\n      </div>\r\n\r\n</div>\r\n    );\r\n  }\r\n\r\n  export default BoardUser","import axios from \"axios\";\r\n\r\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\r\n\r\nclass PostForm {\r\n    submit(title, created_by, questions) {\r\n        return axios\r\n            .post(API_URL + \"submit\", {\r\n                title,\r\n                created_by,\r\n                questions\r\n            })\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport default new PostForm();\r\n","import { Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@material-ui/core'\r\nimport {React, useState} from 'react'\r\n\r\nconst ConfirmDialogue = (props) => {\r\n    const {confirmDialog, setconfirmDialog} = props;\r\n    return (\r\n        <div>\r\n            <Dialog open={confirmDialog.isOpen}>\r\n                <DialogTitle >\r\n                    \r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Typography variant=\"h6\">\r\n                        {confirmDialog.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                        {confirmDialog.subTitle}\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <button className=\"btnn\" onClick={confirmDialog.onDiscard}>No</button>\r\n                    <button className=\"btnn\" onClick={confirmDialog.onConfirm}>Yes</button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmDialogue\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { Button, Snackbar, Switch } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PostForm from \"../services/admin-submit-form\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport SearchService from \"../services/search.service\";\r\nimport ConfirmDialogue from \"./confirm-dialogue\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n// Here is 5 constants related to the visual of our custom button\r\nconst StyledButtonAddExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonAddQuestion = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #00BCFF 30%, #5355FF 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF8700 30%, #FF1E1E 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelQuestion = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF1D1D 30%, #4C4C4C 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonSubmit = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #11FF00 30%, #00FF82 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass MyForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.onChangeQuestion = this.onChangeQuestion.bind(this);\r\n    this.onClickAddExplanation = this.onClickAddExplanation.bind(this);\r\n\r\n    this.state = {\r\n      explanations: false\r\n    };\r\n  }\r\n\r\n  onChangeQuestion(e){\r\n    this.props.onQuestionChange(e.target.value);\r\n  }\r\n\r\n  onChangeExplanation(indexExplanation, e){\r\n    this.props.onExplanationChange(indexExplanation, e.target.value)\r\n  }\r\n\r\n  onClickRemoveExplanation(indexExplanation){\r\n    this.props.onRemoveExplanationClick(indexExplanation);\r\n  }\r\n\r\n  onClickAddExplanation(){\r\n    this.props.onAddExplanationClick();\r\n    this.setState({\r\n      explanations: true\r\n    });\r\n  }\r\n  \r\n  createExplanationUI(){\r\n    return(\r\n      <div>\r\n          {this.props.explanations ?(this.props.explanations.map((element, indexExplanation) =>\r\n            <div>\r\n              <div key={indexExplanation} className=\"form-group\">\r\n                <label htmlFor=\"explanation\">Explication</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"explanation\"\r\n                    value = {element.options_text||''}\r\n                    onChange = {this.onChangeExplanation.bind(this, indexExplanation)}\r\n                    validations = {[required]}\r\n                    autoComplete = \"off\"\r\n                  />\r\n              </div>\r\n\r\n              <StyledButtonDelExplanation \r\n                variant = \"contained\" onClick = {this.onClickRemoveExplanation.bind(this, indexExplanation)}>Supprimer cette explication\r\n              </StyledButtonDelExplanation>\r\n\r\n\r\n            </div>\r\n            )) : (<h3>No Explanation props</h3>)\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const question = this.state.question;\r\n\r\n    return (\r\n      <div>\r\n        <Form>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"question\"><strong>Question</strong></label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"question\"\r\n              value = {question}\r\n              onChange = {this.onChangeQuestion}\r\n              validations = {[required]}\r\n              autoComplete = \"off\"\r\n            />\r\n          </div>\r\n\r\n          <StyledButtonAddExplanation\r\n            variant = \"contained\" onClick = {this.onClickAddExplanation}>Ajouter une explication\r\n          </StyledButtonAddExplanation>\r\n          \r\n          {\r\n            this.state.explanations &&\r\n              this.createExplanationUI()\r\n          }\r\n\r\n        </Form>\r\n\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClickAddQuestion = this.onClickAddQuestion.bind(this);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.allowQuiz = this.allowQuiz.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n\r\n    this.state = {\r\n      title: '',\r\n      created_by: '',\r\n      questions: [\r\n        {\r\n          question_id: '',\r\n          question_title: '',\r\n          question_options: []\r\n        }\r\n      ],\r\n      message: '',\r\n      currentUser: undefined,\r\n      submitted: false,\r\n      quizMdp:'',\r\n      allQuizzes: null,\r\n      displayQuizzes: null,\r\n      errorMessage: '',\r\n      laststate: null,\r\n      confirmDialog: {\r\n        isOpen:false,\r\n        title:'',\r\n        subTitle:''\r\n      },\r\n      updateTitle: \"Are you sure you want to update?\",\r\n      updateSubTitle : \"You will be able to edit again\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n      });\r\n    }\r\n\r\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${user.message.email}`).then((response) => {\r\n            console.log(response.data.quizzes);\r\n            if((response.data.quizzes).length ){\r\n                // setallQuizzes(response.data.quizzes)\r\n                // setdisplayQuizzes(true); \r\n                this.setState({\r\n                  allQuizzes: response.data.quizzes,\r\n                  displayQuizzes: true\r\n                });\r\n                // console.log(response.data.quizzes)\r\n            }\r\n            else{\r\n                // setallQuizzes(null)\r\n                // setdisplayQuizzes(false)  \r\n                this.setState({\r\n                  allQuizzes: null,\r\n                  displayQuizzes: false\r\n                });\r\n            }\r\n          })\r\n          .catch(function (err) {\r\n              // seterrorMessage(err.response.data.message|| err.response.data.message[0].error);\r\n              this.setState({\r\n                errorMessage: err.response.data.message|| err.response.data.message[0].error,\r\n              });\r\n          });\r\n  }\r\n\r\n  createQuiz = () => {\r\n    this.setState({\r\n      laststate: this.state.displayQuizzes,\r\n      displayQuizzes : null,\r\n      displayCreate : true,\r\n      displayQuiz: false,\r\n\r\n    })\r\n  }\r\n\r\n  backToQuizzes = () => {\r\n    this.setState({\r\n      displayQuizzes: this.state.laststate,\r\n      displayCreate: false,\r\n      displayQuiz: false,\r\n      edit: false\r\n\r\n    })\r\n  }\r\n\r\n  getQuiz = (quiz_idd) => {\r\n    SearchService.searchQuiz(\r\n      quiz_idd,\r\n    ).then(\r\n      response => {\r\n        console.log(response);\r\n        // setsuccessful(true);\r\n        // setcurrentQuiz(response.data);\r\n        this.setState({\r\n          displayQuiz: true,\r\n          laststate: this.state.displayQuizzes,\r\n          currentQuiz: response.data,\r\n          toggle: response.data.allow,\r\n          displayQuizzes : null,\r\n          displayCreate: false,\r\n        })\r\n      })\r\n      .catch(\r\n      error => {\r\n        console.log(error.response);\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) \r\n          || error.message || error.toString();\r\n\r\n        // setmessage(resMessage);\r\n        // setsuccessful(false);\r\n        this.setState({\r\n          message: resMessage,\r\n          successful: false\r\n        })\r\n      }\r\n    );\r\n  }\r\n\r\n  setConfirmDialog = () => {\r\n        this.setState({\r\n          confirmDialog: {\r\n            isOpen: true,\r\n            title: \"Do you want to Edit this Quiz?\",\r\n            subTitle: \"You can edit again\",\r\n            onConfirm: this.updateQuiz,\r\n            onDiscard: ()=>this.discard(\"update\")\r\n          }\r\n        })\r\n  }\r\n\r\n  discard = (type) => {\r\n    if(type===\"update\"){\r\n      this.setState({\r\n        confirmDialog: {\r\n          isOpen: false,\r\n          title: '',\r\n          subTitle: \"\",\r\n          onConfirm: null,\r\n          onDiscard: null\r\n        }\r\n      })\r\n    }\r\n    else if(type===\"toggle\"){\r\n      this.setState({\r\n        confirmDialog: {\r\n          isOpen: false,\r\n          title: '',\r\n          subTitle: \"\",\r\n          onConfirm: null,\r\n          onDiscard: null\r\n        },\r\n         toggle: !this.state.toggle\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleToggle = (event) =>{\r\n    this.setState({\r\n      toggle: event.target.checked\r\n    })\r\n    let title;\r\n    let message;\r\n    if(event.target.checked){\r\n      title = \"Allow Students to take Quiz?\";\r\n      message = \"Students Can Take Quiz now\"\r\n    }\r\n    else{\r\n      title = \"Do you want to Close Quiz?\"\r\n      message = \"Students Cannot Take Quiz now\"\r\n    }\r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: true,\r\n        title: title,\r\n        subTitle: this.state.subTitle,\r\n        onConfirm: () => this.allowQuiz(message),\r\n        onDiscard: ()=> this.discard(\"toggle\")\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  allowQuiz = (message) => {\r\n    let allow = this.state.toggle\r\n    console.log(allow)\r\n    const quiz_id = this.state.currentQuiz.quiz_id;\r\n    axios.post(`https://neuroeducation-feedback.herokuapp.com/api/allowQuiz/${quiz_id}` , {\r\n      allow\r\n    })\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      let success;\r\n      if(allow){\r\n        success = allow\r\n      }\r\n      else{\r\n        success=allow\r\n      }\r\n      this.setState({\r\n        message: message,\r\n        open:true,\r\n        successful:success,\r\n        toggle: allow\r\n      })\r\n    })\r\n    .catch(function (err) {\r\n        // this.setState({\r\n        //   toggle: !this.state.toggle\r\n        // });\r\n        console.log(err.response.data.message|| err.response);\r\n    });\r\n    \r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: false,\r\n        title: '',\r\n        subTitle: \"\",\r\n        onConfirm: null,\r\n        onDiscard: null\r\n      }\r\n    })\r\n  }\r\n\r\n  updateQuiz = (event) =>{\r\n    event.preventDefault();\r\n    let updated_questions = [];\r\n\r\n    for(let i=1;i<=5;i++){\r\n      var id = document.getElementById('Q'+i).value;\r\n      let expArr = [];\r\n      for(let j=1;j<=20;j++){\r\n        let alphabet = String.fromCharCode(96 + (j));\r\n        let expId = 'Q'+i+'E'+alphabet;\r\n\r\n        if(document.getElementById(expId) === null){\r\n          break\r\n        }\r\n        else{\r\n        var exp = document.getElementById(expId).value;\r\n        expArr.push({\r\n          options_id : alphabet,\r\n          options_text : exp\r\n        })}\r\n      }\r\n      updated_questions.push({question_id:i, question_title: id, question_options : expArr})\r\n    }\r\n\r\n    console.log(updated_questions)\r\n    const quiz_id = document.getElementById(\"quiz_id\").value;\r\n    console.log(quiz_id)\r\n    axios.post(`https://neuroeducation-feedback.herokuapp.com/api/updateQuiz/${quiz_id}` , {\r\n      updated_questions\r\n    })\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      this.setState({\r\n        message: \"Quiz Updated\",\r\n        open: true,\r\n        successful:true\r\n      })\r\n    })\r\n    .catch(function (err) {\r\n        console.log(err.response.data.message|| err.response);\r\n        this.setState({\r\n          message: \"Quiz Not Updated\",\r\n          open:true,\r\n          successful: false\r\n        })\r\n    });\r\n    \r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: false,\r\n        title: '',\r\n        subTitle: \"\",\r\n        onConfirm: null,\r\n        onDiscard: null\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  deleteQuiz=()=> {\r\n    this.setState({\r\n      open: true,\r\n      message: \"Not Functional Yet\",\r\n      danger: true,\r\n      successful:null\r\n    })\r\n  }\r\n\r\n  editQuiz=()=>{\r\n    this.setState({\r\n      edit: true,\r\n      displayQuiz: false\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n\r\n  handleQuestionChange(indexQuestion, question){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_title = question;\r\n    questions[indexQuestion].question_id = indexQuestion+1;\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleExplanationChange(indexQuestion, indexExplanation, explanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options[indexExplanation].options_text = explanation;\r\n    \r\n    let alphabet = String.fromCharCode(96 + (indexExplanation+1));\r\n    questions[indexQuestion].question_options[indexExplanation].options_id = alphabet;\r\n    \r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  onChangeTitle(e){\r\n    let title = e.target.value;\r\n    this.setState({\r\n      title\r\n    });\r\n  }\r\n\r\n  onClickAddQuestion(){\r\n    this.setState(\r\n      prevState => ({questions : [...prevState.questions,        \r\n        {\r\n        question_title: '',\r\n        question_options: []\r\n      }]})\r\n    );\r\n  }\r\n\r\n  handleAddExplanationClick(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.push({options_text : ''});\r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  handleRemoveExplanationClick(indexQuestion, indexExplanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.splice(indexExplanation, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  onClickDelQuestion(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions.splice(indexQuestion, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleSubmit(){\r\n\r\n    const { currentUser} = this.state;\r\n\r\n    PostForm.submit(this.state.title, currentUser.message.email, this.state.questions).then(\r\n      (response) => {\r\n        // this.props.history.push({\r\n        //   pathname: \"/postSubmitForm\",\r\n        //   state:{quizMdp: response.quizMdp}\r\n        // })\r\n        // window.location.reload();\r\n       console.log(response);\r\n        this.setState({\r\n          message: 'Quiz submitted',\r\n          submitted: true,\r\n          quizMdp:response.quizMdp\r\n        });\r\n      },\r\n      error => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        this.setState({\r\n          message: resMessage,\r\n          questions: [\r\n            {\r\n              question_title: '',\r\n              question_options: []\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  createQuestionUI(){\r\n\r\n    return(this.state.questions.map((element, indexQuestion) => \r\n      <div className=\"questionContainer\">\r\n        <div className=\"container\" key={indexQuestion}>\r\n          <MyForm \r\n            onQuestionChange = {this.handleQuestionChange.bind(this, indexQuestion)}\r\n            onTitleChange = {this.handleTitleChange}\r\n            onExplanationChange = {this.handleExplanationChange.bind(this, indexQuestion)}\r\n            onAddExplanationClick = {this.handleAddExplanationClick.bind(this, indexQuestion)}\r\n            onRemoveExplanationClick = {this.handleRemoveExplanationClick.bind(this, indexQuestion)}\r\n            explanations = {this.state.questions[indexQuestion].question_options}\r\n          />\r\n          <div className=\"delQuestion\">\r\n            <StyledButtonDelQuestion\r\n              variant = \"contained\" onClick = {this.onClickDelQuestion.bind(this, indexQuestion)}>Supprimer cette question\r\n            </StyledButtonDelQuestion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  // Pourrait être utile plus tard donc je met de coté (deprecated)\r\n  // componentDidMount() {\r\n  //   UserService.getAdminBoard().then(\r\n  //     response => {\r\n  //       this.setState({\r\n  //         content: response.data\r\n  //       });\r\n  //     },\r\n  //     error => {\r\n  //       this.setState({\r\n  //         content:\r\n  //           (error.response &&\r\n  //             error.response.data &&\r\n  //             error.response.data.message) ||\r\n  //           error.message ||\r\n  //           error.toString()\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n\r\n    const title = this.state.title;\r\n    const currentUser = this.state.currentUser;\r\n    const allQuizzes = this.state.allQuizzes;\r\n    const displayQuizzes = this.state.displayQuizzes;\r\n    const displayCreate = this.state.displayCreate;\r\n    const displayQuiz = this.state.displayQuiz;\r\n    const currentQuiz = this.state.currentQuiz\r\n\r\n\r\n\r\n\r\n    // redirect to post/SubmitForm\r\n    if(this.state.submitted===true){\r\n      return <Redirect to={{ pathname: \"/postSubmitForm\", state: { quizMdp: this.state.quizMdp } }} />\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n      <div className=\"mainTeacherForm\">\r\n\r\n        <Snackbar anchorOrigin={{ vertical :'top', horizontal: 'center' }}open={this.state.open} autoHideDuration={6000} onClose={()=>this.handleClose()}>\r\n          <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        {\r\n          this.state.confirmDialog.isOpen && \r\n          <ConfirmDialogue\r\n          confirmDialog={this.state.confirmDialog}\r\n          setConfirmDialog={this.state.confirmDialog}\r\n          />\r\n        }\r\n\r\n        {(displayQuizzes===false || displayQuizzes) && \r\n          <div className=\"container-questions\">\r\n            {(allQuizzes && displayQuizzes) && (\r\n                <div >\r\n                    <h4>{'Quizzes Created by : '}</h4>\r\n                    <h4> {currentUser.message.firstname+\" \"+currentUser.message.lastname}</h4>\r\n                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                        <List>\r\n                        {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                            <ListItem button  onClick= {()=>this.getQuiz(quiz.quiz_id)}>\r\n                                <ListItemIcon>\r\n                                    <BookOutlined />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\r\n                                    <h4>\r\n                                    {quiz.quiz_id} \r\n                                    </h4>\r\n                                }/>\r\n                            </ListItem>\r\n                        ))}\r\n                        </List>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {(displayQuizzes===false) && (\r\n              <div>\r\n                  <h4>{'Quizzes Created by : '}</h4>\r\n                  <h4> {currentUser.message.firstname+\" \"+currentUser.message.lastname}</h4>\r\n                  <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                      <h4>You have not created any quiz</h4>\r\n                  </div>\r\n              </div>\r\n            )}\r\n            <button className=\"btnn\" onClick={this.createQuiz}>Create new Quiz</button>\r\n          </div>}\r\n\r\n        {(displayQuiz || this.state.edit) && currentQuiz &&\r\n          <div className=\"container-questions\">\r\n            <button className=\"btnn\"  onClick={this.backToQuizzes}>Back to Quizzes</button> \r\n            <button className=\"btnn\" >\r\n              Allow Quiz              \r\n              <Switch\r\n              checked={this.state.toggle}\r\n              onChange={this.handleToggle}\r\n              name=\"switch\"\r\n              inputProps={{\"aria-label\":\"test switch\"}}\r\n              color=\"primary\"\r\n              />\r\n              {/* {String(this.state.toggle)} */}\r\n            </button>\r\n            <button className=\"btnn\"  onClick={this.deleteQuiz}>Delete Quiz</button> \r\n            <button className=\"btnn\"  onClick={this.editQuiz}>Edit Quiz</button>\r\n\r\n            {(currentQuiz && this.state.edit) && (\r\n              <div  > \r\n    \r\n                <Form id=\"myForm\">\r\n                  <div className=\"container\">\r\n                    <div className=\"form-group\">\r\n                      <center><h4 >{currentQuiz.quiz}</h4><br/></center>\r\n                      <Input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name=\"quiz_id\"\r\n                              id=\"quiz_id\"\r\n                              value = {currentQuiz.quiz_id}\r\n                              readOnly\r\n                          /> \r\n                      {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                        <div key={questions.question_id}>\r\n                          <label htmlFor={'Q'+questions.question_id}><strong>{'Question : '+questions.question_id}</strong></label>\r\n                          <Input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name={'Q'+questions.question_id}\r\n                              id={'Q'+questions.question_id}\r\n                              value = {questions.question_title}\r\n                              // onChange = {this.onChangeTitle}\r\n                              validations = {[required]}\r\n                              autoComplete = \"off\"\r\n                          /> \r\n\r\n                          {questions.question_options && questions.question_options.map((options, index) => ( \r\n                            <div>\r\n                            <label htmlFor={'Q'+questions.question_id+'E'+options.options_id}><strong>{'Explanation : '+options.options_id}</strong></label>\r\n                            <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name={'Q'+questions.question_id+'E'+options.options_id}\r\n                            id={'Q'+questions.question_id+'E'+options.options_id}\r\n                            value = {options.options_text}\r\n                            // onChange = {this.onChangeTitle}\r\n                            validations = {[required]}\r\n                            autoComplete = \"off\"\r\n                            />\r\n                            </div>\r\n                          ))}                  \r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>   \r\n                </Form> \r\n                <button className=\"btnn\" onClick={()=>this.setConfirmDialog(\"update\",this.state.updateTitle,this.state.updateSubTitle)}>Update</button>   \r\n              </div>\r\n              \r\n              )}\r\n\r\n              <div >\r\n                {(currentQuiz && displayQuiz) && (\r\n                  <div  > \r\n                    <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n                    {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                      <div key={questions.question_id}>\r\n                        <h4>{questions.question_id}{'. '}{questions.question_title}</h4>    \r\n                      \r\n                          <div>\r\n                            {questions.question_options && questions.question_options.map((options, index) => ( \r\n                              <div>\r\n                                <label>\r\n                                  <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                                </label>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        \r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n          </div>\r\n        }\r\n\r\n\r\n        <div>\r\n          {displayCreate && <div> \r\n            <button className=\"btnn\" onClick={this.backToQuizzes}>Back to Quizzes</button> \r\n            <div className=\"container\">\r\n              <header className=\"jumbotron\">\r\n                <h3>Création de nouvelles questions</h3>\r\n              </header>\r\n            </div>\r\n\r\n            <Form>\r\n              <div className=\"container\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"form-title\"><strong>Titre du formulaire</strong></label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"form-title\"\r\n                      value = {title}\r\n                      onChange = {this.onChangeTitle}\r\n                      validations = {[required]}\r\n                      autoComplete = \"off\"\r\n                    />\r\n                </div>\r\n              </div>\r\n\r\n\r\n              {this.createQuestionUI()}\r\n\r\n\r\n              <div className=\"container\">\r\n                <br></br>\r\n                <StyledButtonAddQuestion\r\n                    variant = \"contained\" onClick = {this.onClickAddQuestion}>Ajouter une question\r\n                </StyledButtonAddQuestion>\r\n                <br></br><br></br>\r\n                <StyledButtonSubmit\r\n                  variant = \"contained\" onClick = {this.handleSubmit}>Valider\r\n                </StyledButtonSubmit>\r\n              </div>\r\n            </Form>\r\n\r\n            { this.state.message && \r\n              <div className=\"container\">\r\n                <div className=\"itsanerror\"><h3>Une erreur est survenu lors de l'envoi du formulaire</h3></div>\r\n              </div>\r\n            }\r\n          </div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class PostSubmitForm extends Component {\r\n    render(){\r\n        if(this.props.location.state === undefined){\r\n            // console.log(this.props.location); \r\n            return <Redirect to={{pathname:'/home'}}/>\r\n        }\r\n        return(\r\n            <div>\r\n                <div className=\"container\">\r\n                    <header className=\"jumbotron\">\r\n                        <div className=\"success\">\r\n                            <h3>Formulaire envoyé avec succès !</h3>\r\n                            <br></br>\r\n                            <h5>Voici le code du quizz à partager aux élèves :</h5>\r\n                            <p className=\"quizMdp\">{\" \" + this.props.location.state.quizMdp}</p>\r\n                        </div>\r\n                    </header>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Bar, HorizontalBar } from 'react-chartjs-2';\r\n\r\n\r\nconst BarChart = ( props ) => {\r\n\r\n    const names = props.explanationArray;\r\n    const explanationLabels = props.explanationLabels;\r\n    const explanationValues = props.explanationValues;\r\n    const barData = props.barData;\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {(barData === \"Bar\") ? (\r\n                        <Bar\r\n                        data={{\r\n                            labels: explanationLabels,\r\n                            datasets: [{\r\n                                data: explanationValues,\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ]\r\n                            }]\r\n                        }}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                            scales: {\r\n                                yAxes: [{\r\n                                    ticks: {\r\n                                        beginAtZero: true\r\n                                    }\r\n                                }]\r\n                            },\r\n                            legend: {\r\n                                display: false\r\n                            },\r\n                            tooltips: {\r\n                                callbacks: {\r\n                                    label: function(item, data){\r\n                                        return names[item.index];\r\n                                    },\r\n                                    title: function(item, data){\r\n                                        return;\r\n                                    }\r\n                                },\r\n                                displayColors: false\r\n                            }\r\n                        }}\r\n                    />\r\n            ): (\r\n                <HorizontalBar\r\n                data={{\r\n                    labels: explanationLabels,\r\n                    datasets: [{\r\n                        data: explanationValues,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            label: function(item, data){\r\n                                return names[item.index];\r\n                            },\r\n                            title: function(item, data){\r\n                                return;\r\n                            }\r\n                        },\r\n                        displayColors: false\r\n                    }\r\n                }}\r\n            />\r\n            )}\r\n    \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BarChart;","import { Doughnut, Pie } from 'react-chartjs-2';\r\n\r\n\r\nconst DoughnutChart = ({ labels, answerValues, pieData }) => {\r\n    return ( \r\n        <div>\r\n            {(pieData === \"Doughnut\") ? (\r\n                <Doughnut\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: [{\r\n                            data: answerValues,\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                            ]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            ):(\r\n                <Pie\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: [{\r\n                            data: answerValues,\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                            ]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            )}\r\n            \r\n        </div>\r\n     );\r\n}\r\n\r\nexport default DoughnutChart;","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n// import {FaTimes} from 'react-icons/fa'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SwapHorizRounded from '@material-ui/icons/SwapHorizRounded';import BarChart from './BarChart';\r\nimport { Container, List, ListItem, ListItemText, makeStyles } from '@material-ui/core';\r\nimport DoughnutChart from './DoughnutChart';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nconst AllAnswers = () => {\r\n    const [allAnswers, setallAnswers] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [array, setarray] = useState(null);\r\n    const [answersArray, setanswersArray] = useState();\r\n    const [explanationsArray, setexplanationsArray] = useState()\r\n    const [currentStudent, setcurrentStudent] = useState(null)\r\n    const [explanationStats, setexplanationStats] = useState(null)\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n    const [allQuestions, setAllQuestions] = useState([]);\r\n    const [allExplanations, setAllExplanations] = useState([]);\r\n    const [pieData, setPieData] = useState(\"Doughnut\");\r\n    const [barData, setBarData] = useState(\"Bar\");\r\n    const [pieTitle, setPieTitle] = useState(\"Graphique en anneau\");\r\n    const [barTitle, setBarTitle] = useState(\"Diagramme à bandes\");\r\n\r\n\r\n    // FIND ALL ANSWERED QUESTIONS ON PAGE LOAD\r\n    useEffect(() => {\r\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllAnswered').then((response) => {\r\n          console.log(response.data);\r\n          setallAnswers(response.data);\r\n          setShowSpinner(false);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }, []);\r\n\r\n    //ALTERNATE BETWEEN PIE AND DOUGHNUT CHART\r\n\r\n    const handlePieChartChange = () => {\r\n        if(pieData === \"Doughnut\"){\r\n            setPieData(\"Pie\")\r\n            setPieTitle(\"Diagramme circulaire\")\r\n        }\r\n        if(pieData === \"Pie\"){\r\n            setPieData(\"Doughnut\")\r\n            setPieTitle(\"Graphique en anneau\")\r\n        }\r\n    }\r\n    const handleBarChartChange = () => {\r\n        if(barData === \"Bar\"){\r\n            setBarData(\"Horizontal Bar\")\r\n            setBarTitle(\"Graphique à barres horizontales\")\r\n        }\r\n        if(barData === \"Horizontal Bar\"){\r\n            setBarData(\"Bar\")\r\n            setBarTitle(\"Diagramme à bandes\")\r\n        }\r\n    }\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index, quiz_id) => {\r\n        console.log(quiz)\r\n        setcurrentQuiz(quiz);\r\n        getStats(quiz_id);\r\n        setcurrentStudent(null);\r\n        setexplanationStats(null);\r\n        setarray(null);\r\n\r\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${quiz_id}`)\r\n        .then(response => {\r\n            setAllQuestions(response.data.questions);\r\n            console.log(response.data.questions);\r\n        })\r\n        .catch(err => {\r\n            console.log(\"An error occurred\", err.response);\r\n        })\r\n    }; \r\n\r\n    // RETRIEVE GROUPPED DATA FROM THE DATABASE BY SELECTED QUIZ ID \r\n    const getStats = (quiz_id) => {\r\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/groupStats/${quiz_id}`)\r\n        .then(response => {\r\n            if(response){\r\n            // SET GROUPPED ANSWERS \"FOR EACH STUDENT\" ARRAY\r\n            setanswersArray(response.data[0]._id.answer);\r\n            console.log(response.data[0]._id.answer)\r\n\r\n            // SET GROUPPED EXPLANATIONS \"FOR EACH STUDENT\" ARRAY\r\n            setexplanationsArray(response.data[0]._id.explanation);\r\n            console.log(response.data[0]._id.explanation)\r\n            }\r\n        })\r\n        .catch()\r\n    }\r\n\r\n    // SET SELECTED(CLICKED) STUDENT ARRAY\r\n    const setActiveStudent = (student) => {\r\n        console.log(student)\r\n        setcurrentStudent(student);\r\n    }\r\n\r\n    // MERGE ALL ANSWERS BY QUESTION NUMBER AND SET COUNT AND STATS\r\n    const stats = () => {\r\n        // MERGE ALL ANSWERS INTO AN ARRAY (arrAns)\r\n        const arrayAns = answersArray[0].map(function(value, index) {\r\n            const mergeAllStudentsByIndex = [value];\r\n            if(value){\r\n                for(let i=1; i<answersArray.length; i++){\r\n                    mergeAllStudentsByIndex.push(answersArray[i][index])\r\n                }\r\n            }\r\n            console.log(mergeAllStudentsByIndex);\r\n            return mergeAllStudentsByIndex;\r\n        });\r\n        console.log(arrayAns);\r\n\r\n         // MERGE ALL EXPLANATIONS INTO AN ARRAY (arrExp)\r\n        const arrayExp = explanationsArray[0].map(function(explanation, index) {\r\n            const mergeAllExplanation = [explanation];\r\n            if(explanation){\r\n                for(let i =1; i< explanationsArray.length; i++){\r\n                    mergeAllExplanation.push(explanationsArray[i][index])\r\n                }\r\n            }\r\n\r\n            return mergeAllExplanation;\r\n        });\r\n        console.log(arrayExp)\r\n        \r\n        // COUNT NUMBER OF OCCURRENCE OF AN ANSWER(\"Plutot Oui\", \"Non\"... etc) FOR EACH QUESTION\r\n        const countAnswers = arrayAns.map((answers, index) => {\r\n            console.log(array)\r\n            let all = {\r\n                \"Oui\" : 0,\r\n                \"Plutot Oui\" : 0,\r\n                \"Plutot Non\" : 0,\r\n                \"Non\": 0,\r\n            };\r\n            for(const answer of answers){\r\n                all = {...all,  [answer] : answers.filter((a) => {return a === answer}).length}\r\n            }\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setarray(countAnswers)\r\n\r\n        // GET EXPLANATIONS OF ALL QUESTIONS FOR THE CHART DISPLAY \r\n        const labelsArray = allQuestions.map((value, index) => {\r\n            const myArray = value.question_options.map((value, index) => {\r\n                return value.options_text;\r\n            })\r\n            return myArray\r\n        })\r\n\r\n        setAllExplanations(labelsArray);\r\n        console.log(labelsArray);\r\n\r\n        // COUNT NUMBER OF OCCURRENCE OF AN EXPLANATION(\"a\", \"b\", \"c\"... etc) FOR EACH QUESTION\r\n        const countExplanations = arrayExp.map((array,index) => {\r\n            //return arr.filter((a) => {return a === \"a\"}).length\r\n            console.log(array)\r\n            let all = {\r\n                a : 0,\r\n                b : 0,\r\n                c : 0,\r\n                d : 0,\r\n                e : 0\r\n            }\r\n            for(const letter of array){\r\n                all = {...all,  [letter] : array.filter((a) => {return a === letter}).length}\r\n            }\r\n\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setexplanationStats(countExplanations);\r\n        \r\n    }\r\n\r\n    // RETRIEVE INTEGERS(VALUES) FOR EXPLANATIONS\r\n    const getExplanationValues = (explanation, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(explanation[key])\r\n        })\r\n        return values;\r\n    }\r\n    // RETRIEVE INTEGERS(VALUES) FOR Y, MY, MN, N QUESTIONS\r\n    const getAnswerValues = (answer, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(answer[key])\r\n        })\r\n        return values;\r\n    }\r\n\r\n    //RETRIEVE KEYS(LABELS) FOR CHART DATA\r\n    const getLabels = object => {\r\n        return Object.keys(object);\r\n    }\r\n\r\n    // const disp = () => {\r\n    //     console.log(array);\r\n    //     console.log(explanationStats)\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-questions\">\r\n            <h4>Liste de toutes les réponses</h4>\r\n            {showSpinner && <div class=\"spinner\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            }\r\n            {!showSpinner && (<div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                <List>\r\n                    {allAnswers && allAnswers.map((quiz, index) => (\r\n                        <ListItem button onClick= {() => setActiveQuiz(quiz, index, quiz.quiz_id)} >\r\n                            <ListItemIcon>\r\n                                <BookOutlined />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\r\n                                 <h4> \r\n                                     {quiz.quiz_title} {''} \r\n                                     {/* <FaTimes \r\n                                         style={{color: 'red', cursor: 'pointer'}}\r\n                                         //  onClick={() => onDelete(quiz._id)}\r\n                                     /> */}\r\n                                 </h4>\r\n                            } />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </div>)}\r\n\r\n            <div>\r\n                {currentQuiz ? (\r\n                    <div>\r\n                        <center><h4>{'Vous avez sélectionné le quiz : '}{currentQuiz.quiz_id}</h4></center>\r\n                        \r\n                        <div >\r\n                            <h4>{'Liste des étudiants : '}</h4>\r\n                            {currentQuiz.quiz_answers && currentQuiz.quiz_answers.map((students, index) => (\r\n                                <div>\r\n                                    <h4 onClick={() => setActiveStudent(students)}>{students.student_id}</h4>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <div>\r\n                            {currentStudent && (\r\n                                <div>\r\n                                    <h4>{'Affichage des réponses sur  : '}{currentStudent.student_id}</h4>\r\n                                    {currentStudent && currentStudent.student_answers.map((answers, index) => (\r\n                                        <div> \r\n                                            <h4>{answers.question_answer_id}{' .'}{answers.answer}</h4>\r\n                                            <h4>{'Explication : '}{answers.explanation}</h4>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div style={{marginBottom: \"20px\"}}>\r\n                            <button className=\"btnn\" onClick={stats}>Cliquez pour les statistiques</button>\r\n                        </div>\r\n                        <Container>\r\n                            {array && (\r\n                                <div>\r\n                                    <Grid container spacing={3}>\r\n                                        {array && array.map((answer, index) => (\r\n                                            <Grid item sm={12} md={6} lg={4} >\r\n                                                <Card elevation={2}>\r\n                                                    <CardHeader\r\n                                                        action={\r\n                                                            <IconButton onClick={handlePieChartChange}>\r\n                                                                <SwapHorizRounded/>\r\n                                                            </IconButton>\r\n                                                        }\r\n                                                        title={pieTitle}\r\n                                                        subheader={\"Question. \" + (index + 1)} \r\n                                                    />\r\n                                                    <CardContent>\r\n                                                        <DoughnutChart pieData={pieData} labels={getLabels(answer)} answerValues={getAnswerValues(answer, getLabels(answer))} />\r\n                                                    </CardContent>\r\n                                                </Card>\r\n                                            </Grid>\r\n\r\n                                        ))}\r\n                                    </Grid>\r\n                                </div>\r\n                                                        \r\n                                ) }\r\n\r\n                            {explanationStats && (\r\n                                <div>\r\n                                        <Grid container spacing={3} >\r\n                                            {explanationStats && explanationStats.map((explanation, index) => (\r\n                                                <Grid item sm={12} md={6} lg={6}>\r\n                                                    <Card elevation={2}>\r\n                                                        <CardHeader\r\n                                                        action={\r\n                                                            <IconButton onClick={handleBarChartChange}>\r\n                                                                <SwapHorizRounded/>\r\n                                                            </IconButton>\r\n                                                        } \r\n                                                        title={barTitle}\r\n                                                        subheader={`Question. ${index + 1}`}\r\n                                                        />\r\n                                                        <CardContent>\r\n                                                            <BarChart\r\n                                                                barData={barData} \r\n                                                                explanationArray={allExplanations[index]}\r\n                                                                explanationLabels={getLabels(explanation)}\r\n                                                                explanationValues={getExplanationValues(explanation, getLabels(explanation))} \r\n                                                            />\r\n                                                        </CardContent>\r\n                                                    </Card>\r\n                                                </Grid>\r\n                                            ))}\r\n                                        </Grid>\r\n                                </div>         \r\n                                )}\r\n                        </Container>    \r\n                    </div>\r\n                ) : (<h4>Veuillez sélectionner un quiz pour afficher les réponses</h4>)}\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllAnswers;","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n// import {FaTimes} from 'react-icons/fa'\r\nimport AuthService from \"../services/auth.service\";\r\nimport { List, ListItem, ListItemText, Button, ListItemIcon } from '@material-ui/core';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\n\r\nconst AllQuestions = () => {\r\n    const [allQuizzes, setallQuizzes] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [radioOptions, setradioOptions] = useState({});\r\n    const [checkedItems, setCheckedItems] = useState([]); \r\n    const [currentUser] = useState(AuthService.getCurrentUser()) ;\r\n    const [message, setmessage] = useState('') ;\r\n    const [successful, setsuccessful] = useState(false)  \r\n\r\n    // const [currentUser] = useState(AuthService.getCurrentUser());\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n\r\n    // LOAD ALL QUIZZES FROM DATABASE ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n    useEffect(() => {\r\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllQ').then((response) => {\r\n          console.log(response.data);\r\n          setallQuizzes(response.data) \r\n          setShowSpinner(false);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    }, []);\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index) => {\r\n        console.log(quiz)\r\n        setcurrentQuiz(quiz);\r\n        \r\n    };\r\n\r\n    // RETURN CHECKED VALUE(true or false)\r\n    const checkRadioButton = (question_id, label) => {\r\n        if (!radioOptions[question_id]) {\r\n            return false;\r\n        }\r\n        return radioOptions[question_id] === label;\r\n    }\r\n\r\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n    const setradio = (id , answer) => {\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === id);\r\n        console.log(find_question)\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === id).answer = answer;\r\n            setradioOptions((state) => {\r\n                console.log(state);\r\n                return {\r\n                    ...state,\r\n                    [id] : answer\r\n                }\r\n            });\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        else{\r\n        setradioOptions((state) => {\r\n            console.log(state);\r\n            return {\r\n                ...state,\r\n                [id] : answer\r\n            }\r\n        });\r\n\r\n        setCheckedItems([\r\n            ...checkedItems,\r\n             {\r\n                question_answer_id : id,\r\n                answer: answer,\r\n                explanation: 'no explanation'\r\n            }\r\n        ]);}\r\n    }\r\n\r\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n        console.log(find_question)\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        \r\n    }\r\n\r\n    // SUBMIT ANSWERS TO THE BACKEND\r\n    const submitAnswers = () =>{\r\n        setmessage('');\r\n        setsuccessful(false);\r\n        const answers = {\r\n            quiz_id : currentQuiz.quiz_id,\r\n            quiz_title : currentQuiz.quiz,\r\n            quiz_answers : {\r\n                student_id : currentUser.message.email,\r\n                student_answers : checkedItems\r\n            }\r\n        }\r\n        console.log(\"current: \", currentQuiz);\r\n\r\n        console.log(\"Radio Answer: \", radioOptions);\r\n        console.log(\"CheckedItems: \", checkedItems);\r\n        console.log(\"Final: \", answers);\r\n        Axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n            answers\r\n          }).then((res) => {\r\n                console.log(res);\r\n                if(res){\r\n                    //   window.location.reload(false);\r\n                    setmessage('You submitted Quiz as Admin or Teacher... Please Delete from the answers page else Stats will be affected');\r\n                    setsuccessful(true);\r\n                    setCheckedItems([]);\r\n                    setradioOptions({});\r\n\r\n                }\r\n          }).catch(error => {\r\n                console.log(error);\r\n                const errMessage =\r\n                (error.response.data.message[0].password || (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message)) ||\r\n                error.message ||\r\n                error.toString();\r\n                console.log(errMessage);\r\n              setmessage(errMessage);\r\n                setsuccessful(false);            \r\n          });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    //DELETE SLECTED QUIZ WITH THE QUIZ ID FROM DAATABASE\r\n    // const onDelete = (id) => {\r\n    //     Axios.delete(`https://neuroeducation-feedback.herokuapp.com/api/delete/${id}`)\r\n    //     .then((res) => {\r\n    //         console.log(res)\r\n    //         setallQuizzes(allQuizzes.filter((question) => question._id !== id))\r\n    //     })\r\n    //     .catch(err => {\r\n    //         console.log(err); \r\n    //     });\r\n    // }; \r\n\r\n\r\n    return (\r\n        <div className=\"container-questions\">\r\n            <h4>Liste de quiz</h4>\r\n            {/* html for spinner */}\r\n            {showSpinner && <div class=\"spinner\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            }\r\n            {!showSpinner && (<div className={`quiz`} style={{borderRadius: \"10px\", marginTop: \"10px\"}}>\r\n                <List>\r\n                    {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                        <ListItem button onClick= {() => setActiveQuiz(quiz, index)} >\r\n                            <ListItemIcon>\r\n                                <BookOutlined />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\r\n                                <h4> \r\n                                    {quiz.quiz} {''} \r\n                                    {/* <FaTimes \r\n                                        style={{color: 'red', cursor: 'pointer'}}\r\n                                    /> */}\r\n                                </h4>\r\n                            } />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </div>)}\r\n\r\n            <div>\r\n                {message && (\r\n                    <div className=\"form-group\">\r\n                        <div\r\n                        className={\r\n                            successful\r\n                            ? \"alert alert-success\"\r\n                            : \"alert alert-danger\"\r\n                        }\r\n                        role=\"alert\"\r\n                        >\r\n                        {message}\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n                {currentQuiz ? (\r\n                    <div> \r\n                        <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n                        {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                            <div key={questions.question_id}>\r\n                                <h4>{questions.question_id}{'. '}{questions.question_title}</h4>    \r\n                                <div>\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Oui\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Oui\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Plutot Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Non\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Plutot Non\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Non\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Non\r\n                                </div>\r\n                                {radioOptions[questions.question_id] === \"Plutot Non\"\r\n                                || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n                                || radioOptions[questions.question_id] === \"Non\" ? (\r\n                                    <div>\r\n                                        {questions.question_options && questions.question_options.map((options, index) => ( \r\n                                            <div>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" value={options.options_id} \r\n                                                    checked={checkedItems[options.option_text]}  \r\n                                                    onChange={(e) => \r\n                                                        setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                                                    }\r\n                                                    />\r\n                                                    <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                                                </label>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ) : (<span>Aucune explication requise</span>)}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (<h4>Veuillez cliquer sur un quiz</h4>)}\r\n            </div>\r\n            <Button disableElevation variant=\"contained\" onClick={submitAnswers}>Soumettre les réponses</Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllQuestions\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default class AdminRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\r\n\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      admin: false,\r\n      teacher: false,\r\n      roles : [],\r\n      successful: false,\r\n      message: \"\",\r\n      noRoleError: false,\r\n      mdpTmp: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCheckbox(e) {\r\n    let target = e.target;\r\n    let value = target.checked;\r\n    let name = target.name;\r\n    this.setState({\r\n        [name]: value,\r\n        noRoleError: false\r\n    })\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (!this.state.admin && !this.state.teacher) {\r\n      return (this.setState({\r\n        noRoleError: true\r\n      }))\r\n    }\r\n    else {\r\n      let roles = this.state.roles;\r\n      if (this.state.admin) {\r\n        roles.push(\"ROLE_ADMIN\");\r\n      }\r\n      if (this.state.teacher) {\r\n        roles.push(\"ROLE_TEACHER\")\r\n      }\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.adminRegister(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.roles,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: \"Compte créé avec succès\",\r\n            successful: true,\r\n            mdpTmp: response.data.mdpTmp\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Prenom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangeFirstname}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Nom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangeLastname}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"teacher\"\r\n                      checked={this.state.teacher}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Professeur\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"admin\"\r\n                      checked={this.state.admin}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Administrateur\r\n                    </label>\r\n                  </div>\r\n\r\n                  {this.state.noRoleError && \r\n                    <div className=\"container\">\r\n                      <div className=\"itsanerror\">Vous devez sélectionner au moins un rôle</div>\r\n                    </div>\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button style={{backgroundColor: 'steelblue'}} className=\"btn btn-primary btn-block\">Créer le compte</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n\r\n                  {this.state.mdpTmp && (\r\n                    <div>\r\n                      <br></br><br></br>\r\n                      Votre mot de passe temporaire est :\r\n                      {\" \" + this.state.mdpTmp}\r\n                      <br></br><br></br>\r\n                      Vous pourrez le modifier en vous connectant à votre profil\r\n                    </div>\r\n                  )}\r\n                  \r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst ProtectedRoute =({ component: Component, role, ...rest })=> {\r\n        const currentUser = AuthService.getCurrentUser()\r\n        let isAuthenticated = '';\r\n        let isAuthorized = false;\r\n\r\n        if(currentUser){\r\n            isAuthenticated = currentUser.token;\r\n\r\n            role.map(roles => {\r\n                if(currentUser.message.roles.includes(roles)){\r\n                    isAuthorized = true;\r\n                } \r\n                return isAuthorized\r\n            });\r\n        }\r\n\r\n        return (isAuthenticated && (isAuthorized))? (\r\n            <Component />\r\n        ) : (\r\n            <div>\r\n            <Redirect to={{ pathname: '/home' }} />\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default ProtectedRoute;","import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\n\r\n\r\nconst AllStudents = () => {\r\n    const [allStudents, setallStudents] = useState([]);\r\n    const [allQuizzes, setallQuizzes] = useState(null)\r\n    const [message, setmessage] = useState('');\r\n    const [errorMessage, seterrorMessage] = useState('')\r\n    const [successful, setsuccessful] = useState(false);\r\n    const [displayQuizzes, setdisplayQuizzes] = useState(null);\r\n    const [displayActiveQuiz, setdisplayActiveQuiz] = useState(false)\r\n    const [displayEvolution, setdisplayEvolution] = useState(false);\r\n    const [displayMain, setdisplayMain] = useState(true);\r\n    const [currentStudent, setcurrentStudent] = useState(null);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get( \"https://neuroeducation-feedback.herokuapp.com/api/findAllStudents\")\r\n        .then(res => {\r\n            console.log(res.data);\r\n            setallStudents(res.data);\r\n            setShowSpinner(false);\r\n        })\r\n        .catch(error => {\r\n            const resMessage =\r\n            (error.response && error.response.data && error.response.data.message) \r\n            || error.message || error.toString();\r\n  \r\n            seterrorMessage(resMessage);\r\n        });\r\n\r\n    }, [])\r\n\r\n    const getAllQuizzes = (student_id, name) => {\r\n        setcurrentQuiz(null);\r\n        setallQuizzes([]);\r\n        setdisplayQuizzes(null) \r\n        axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\r\n            console.log(response.data.quizzes);\r\n            if((response.data.quizzes).length ){\r\n                setallQuizzes(response.data.quizzes)\r\n                setdisplayQuizzes(true); \r\n            }\r\n            else{\r\n                setallQuizzes(null)\r\n                setdisplayQuizzes(false)  \r\n            }\r\n            setActiveStudent(name);\r\n          })\r\n          .catch(function (err) {\r\n              seterrorMessage(err.response.data.message|| err.response.data.message[0].error);\r\n          });\r\n    }\r\n\r\n      // SET SELECTED(CLICKED) QUIZ\r\n  const setActiveQuiz = (quiz, index) => {\r\n    console.log(quiz);\r\n    setdisplayActiveQuiz(true);\r\n    setcurrentQuiz(quiz);\r\n    setdisplayQuizzes(null);\r\n    // setcurrentIndex(index)\r\n  };\r\n\r\n  const setActiveStudent = (name) => {\r\n    console.log(name)\r\n    setcurrentStudent(name);\r\n    // setcurrentQuiz(quiz);\r\n    // setcurrentIndex(index)\r\n  };\r\n\r\n  const backToAllQuizzes = () => {\r\n    setdisplayQuizzes(true);\r\n    setdisplayActiveQuiz(false);\r\n  }\r\n\r\n  const evolution = () => {\r\n    if(displayMain===true && displayEvolution===false){\r\n        setdisplayMain(false); \r\n        setdisplayEvolution(true);\r\n    } \r\n    else if(displayMain===false && displayEvolution===true){\r\n        setdisplayMain(true); \r\n        setdisplayEvolution(false);\r\n    } \r\n\r\n\r\n  }\r\n\r\n    return (\r\n        <div className=\"container-questions\">\r\n            {displayMain  && <div className=\"row\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n                    <h3>{'Liste des étudiants : '}</h3>\r\n                    {showSpinner && (<div class=\"spinner\">\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>)}\r\n                    {!showSpinner && (<div  class=\"quiz\" style={{borderRadius: \"10px\"}}>\r\n                            <List>\r\n                                {allStudents && allStudents.map((student,index) =>(\r\n                                    <ListItem button onClick={()=> getAllQuizzes(student.email,student.firstname +' ' +student.lastname )}>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                            {(student.firstname[0] +' ' +student.lastname[0]).toUpperCase()}\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={<h4>{student.firstname +' ' +student.lastname}</h4>} />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </div>)}\r\n                </div>\r\n                <div className=\"col-xs-12 col-sm-12 col-md-6\">  \r\n                    {(allQuizzes && displayQuizzes) && (\r\n                        <div >\r\n                            <h4>{'Questionnaires auxquels ont répondu : '}</h4>\r\n                            <h4> {currentStudent}</h4>\r\n                            <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                <List>\r\n                                {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                    <ListItem button onClick= {() => setActiveQuiz(quiz, index)}>\r\n                                        <ListItemIcon>\r\n                                            <BookOutlined />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={\r\n                                            <h4>\r\n                                            {quiz.quiz_id} \r\n                                            </h4>\r\n                                        }/>\r\n                                    </ListItem>\r\n                                ))}\r\n                                </List>\r\n                            </div>\r\n                        </div>\r\n                    ) }\r\n                    {(displayQuizzes===false) && (\r\n                        <div>\r\n                            <h4>{'Questionnaires auxquels ont répondu : '}</h4>\r\n                            <h4> {currentStudent}</h4>\r\n                            <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                <h4>Cet étudiant n'a répondu à aucun quiz</h4>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                    )}\r\n                    <div >\r\n                    {(currentQuiz && displayActiveQuiz) && \r\n                        <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <BookOutlined />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\r\n                                    <h4>\r\n                                    {currentQuiz.quiz_id} \r\n                                    </h4>\r\n                                }/>\r\n                            </ListItem>\r\n                            <h4>{currentStudent+' has taken this quiz '+ (currentQuiz.quiz_answers.length) +' times'}</h4>\r\n                            <button className=\"btnn\" onClick={()=> backToAllQuizzes()}>Back</button>\r\n                            <button className=\"btnn\" onClick={()=> evolution()}>{'View Answers & Evolution'}</button>\r\n                        </div>\r\n                    }\r\n                        \r\n\r\n                </div> \r\n                </div>\r\n\r\n     \r\n            </div>\r\n            }\r\n            <div>\r\n                { (currentQuiz && displayEvolution) && <button className=\"btnn\" onClick={()=> evolution()}>Back</button>}\r\n                <div className=\"row\">\r\n                    \r\n                    {(currentQuiz && displayEvolution) && currentQuiz.quiz_answers.map((quiz, index)=>(                            \r\n                        <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n                            <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                <h4>{'Attempt number ' + (index+1)}</h4>\r\n                                {/* <h4>{quiz.qu}</h4> */}\r\n                                {quiz.student_answers.map((answers, idx)=>(\r\n                                    <div>\r\n                                    <h4>{'Question '+answers.question_answer_id}</h4>\r\n                                    <h4>{'answer: ' +answers.answer +' explanation: ' +answers.explanation}</h4>\r\n                                    </div>\r\n                                ))}\r\n                            </div>    \r\n                        </div> \r\n                                \r\n                    ))}\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllStudents\r\n","import {useState, useEffect} from 'react'\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\nconst VerifyAccount = ({match: { params }} ) => {\r\n    const [message, setmessage] = useState('');\r\n    const [successful, setsuccessful] = useState(false)\r\n\r\n    useEffect(() => {\r\n        AuthService.verifyAccount(params.token)\r\n        .then(response=>{\r\n            setmessage(response.data.message);\r\n            setsuccessful(true);\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n            setmessage(error.response.data.message|| error.response.data);\r\n            setsuccessful(false);\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerifyAccount\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n// import axios from 'axios';\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Home2 from \"./components/home2.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport PostSubmitForm from \"./components/postSubmitForm.component\";\r\nimport AllAnswers from \"./components/all-answers.component\";\r\nimport AllQuestions from './components/allquestions.component';\r\nimport AdminRegister from \"./components/admin-register.component\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport ProtectedRoute from \"./components/protected-routes.component\";\r\nimport AllStudents from \"./components/all-students.component\";\r\nimport VerifyAccount from \"./components/verify-account.component\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette:{\r\n    primary: {\r\n      main: \"#DCDCDC\"\r\n    }\r\n  }\r\n})\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showAdminBoard: false,\r\n      showTeacherBoard: false,\r\n      currentUser: undefined,\r\n      admin:[\"ROLE_ADMIN\"],\r\n      adminTeacher:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\"],\r\n      allUsers:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\" , \"ROLE_STUDENT\"],\r\n      student:[\"ROLE_STUDENT\"]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    \r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showAdminBoard: user.message.roles.includes(\"ROLE_ADMIN\"),\r\n        showTeacherBoard: user.message.roles.includes(\"ROLE_TEACHER\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n    this.setState({\r\n            currentUser: null \r\n        })\r\n    if (!this.state.currentUser) {  \r\n      return <Redirect to=\"/home\" />;\r\n  }\r\n  }\r\n\r\n  render() {\r\n     const { currentUser, showAdminBoard, showTeacherBoard, admin, adminTeacher, allUsers, student } = this.state;\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n              Outsmarted\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/home\"} className=\"nav-link\">\r\n                  <Button color=\"primary\">Accueil</Button>\r\n                </Link>\r\n              </li>\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/admin\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Ajouter un quiz</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n              {showAdminBoard && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/adminRegister\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">Ajouter un compte</Button>\r\n                  </Link>\r\n                </li>\r\n              )}\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/questions\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Page Questions</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/answers\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Page Réponses</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/students\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Page Etudiants</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n                {(currentUser && !showTeacherBoard) && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/user\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">Utilisateur</Button>\r\n                  </Link>\r\n                </li>\r\n                )}\r\n            </div>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/profile\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">{currentUser.message.firstname}</Button>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/home\"} className=\"nav-link\" onClick={this.logOut}>\r\n                    <Button color=\"primary\">Déconnexion</Button>\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">Se connecter</Button>\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">Créer un compte</Button>\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            )}\r\n\r\n            </nav>\r\n\r\n            <div className=\"container pt-3\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/home\" component={Home2} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                <Route exact path=\"/verifyAccount/:token\" component={VerifyAccount} />\r\n                <Route exact path=\"/postSubmitForm\" component={PostSubmitForm}/>\r\n                <ProtectedRoute exact path=\"/adminRegister\" component={AdminRegister} role={admin}/>\r\n                <ProtectedRoute exact path=\"/profile\" component={Profile} role={allUsers}/>\r\n                <ProtectedRoute exact path=\"/user\" component={BoardUser} role={student}/>\r\n                <ProtectedRoute exact path=\"/questions\" component={AllQuestions} role={adminTeacher}/>\r\n                <ProtectedRoute exact path=\"/answers\" component={AllAnswers} role={adminTeacher}/>\r\n                <ProtectedRoute exact path=\"/students\" component={AllStudents} role={allUsers}/>\r\n                <ProtectedRoute exact path=\"/admin\" component={BoardAdmin} role={adminTeacher}/>\r\n                <ProtectedRoute  component={Home} />\r\n              </Switch>\r\n            </div>\r\n          \r\n\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n\r\n  }\r\n    \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// serviceWorker.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}