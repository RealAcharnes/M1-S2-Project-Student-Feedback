{"version":3,"sources":["services/auth.service.js","components/formCard.js","components/login.component.js","components/register.component.js","components/home.component.js","components/home2.component.js","components/formCard2.js","components/modifyPassword.component.js","components/profile.component.js","services/search.service.js","components/Title.js","components/LineLabels.js","components/LineChart.js","components/Flippy.js","components/board-user.component.js","services/admin-submit-form.js","components/confirm-dialogue.js","components/menu.js","components/board-admin.component.js","components/postSubmitForm.component.js","components/BarChart.js","components/DoughnutChart.js","components/all-answers.component.js","components/allquestions.component.js","components/admin-register.component.js","components/protected-routes.component.js","components/Paginate.js","components/all-students.component.js","components/verify-account.component.js","components/Admin/admin-dashboard.jsx","components/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","email","password","axios","post","then","response","data","token","localStorage","setItem","JSON","stringify","removeItem","firstname","lastname","password_confirmation","roles","old_password","parse","getItem","useStyles","makeStyles","theme","root","display","details","flexDirection","content","flex","cover","width","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","FormCard","float","useTheme","Card","style","backgroundImage","maxWidth","margin","marginTop","backgroundColor","minWidth","Alert","props","elevation","variant","Login","handleClose","setState","open","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","e","this","target","value","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","className","onSubmit","ref","c","padding","paddingTop","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","successful","htmlFor","color","type","size","onChange","required","fullWidth","marginBottom","disabled","onClick","pathname","border","Component","isEmail","vlastname","vfirstname","vpassword","vpasswordConfirmation","Register","handleRegister","onChangeFirstname","onChangeLastname","onChangePasswordConfirmation","register","clear","name","validations","Home","Home2","title","description","textAlign","borderRadius","src","alt","FormCard2","maxHeight","ModifyPassword","useState","oldPw","setOldPw","newPw","setNewPw","confirmNewPw","setConfirmNewPw","setmessage","setsuccessful","currentUser","currentuser","errors","seterrors","setopen","ApplyModifications","validate","changePassword","res","catch","errMessage","console","log","id","class","placeholder","marginRight","Profile","getCurrentUser","get","answers","Title","noUnderline","subHeader","Typography","LineLabels","integer","array","LineChart","labels","datasets","borderColor","options","maintainAspectRatio","legend","scales","yAxes","ticks","beginAtZero","tooltips","callbacks","label","item","datax","string","index","FlippyItems","frontSide","backSide","flipOnHover","flipOnClick","flipDirection","field","BoardUser","search","setsearch","errorMessage","seterrorMessage","currentQuiz","setcurrentQuiz","radioOptions","setradioOptions","checkedItems","setCheckedItems","allQuizzes","setallQuizzes","displayAllAnswered","setdisplayAllAnswered","setvalidate","lineArray","setLineArray","actualQuiz","setactualQuiz","displayMain","setdisplayMain","displayLineChart","setDisplayLineChart","displayCurrentQuiz","setdisplayCurrentQuiz","setValue","evolution","goBack","getLineData","groupArray","dataArray","forEach","setActiveQuiz","quiz","tempLineArray","quiz_answers","student_answers","answer","getAllAns","SearchService","searchQuiz","quiz_id","useEffect","student_id","quizzes","err","checkRadioButton","question_id","setradio","checkedArray","map","x","find","a","question_answer_id","explanation","role","Flippy","onMouseOver","setActiveQuizRefreshComponentToEffectChanges","CardHeader","avatar","Avatar","toUpperCase","CardContent","Tooltip","IconButton","questions","indexx","fontSize","question_title","checked","question_options","options_id","option_text","setCheckbox","options_text","timestamp","Date","now","formatedTimestamp","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","quiz_title","time_submitted","Grid","container","attempt","md","sm","lg","component","subheader","created_by","ConfirmDialogue","confirmDialog","Dialog","isOpen","DialogTitle","DialogContent","subTitle","DialogActions","onDiscard","onConfirm","MenuOption","React","anchorEl","setAnchorEl","Boolean","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","PaperProps","ITEM_HEIGHT","option","MenuItem","selected","onclick","icon","withStyles","background","boxShadow","textTransform","Button","MyForm","onChangeQuestion","onClickAddExplanation","explanations","delete","onQuestionChange","indexExplanation","onExplanationChange","onRemoveExplanationClick","onAddExplanationClick","element","onChangeExplanation","onClickRemoveExplanation","question","deleteQuiz","autoComplete","createExplanationUI","BoardAdmin","createQuiz","laststate","displayQuizzes","displayCreate","displayQuiz","backToQuizzes","edit","getQuiz","quiz_idd","toggle","allow","setConfirmDialog","subtitle","onconfirm","discard","handleToggle","allowQuiz","success","updateQuiz","updated_questions","i","document","getElementById","expArr","j","alphabet","String","fromCharCode","expId","exp","danger","filter","editQuiz","onClickAddQuestion","onChangeTitle","handleSubmit","test","undefined","submitted","quizMdp","updateTitle","updateSubTitle","user","menuOptions","fontsize","alert","indexQuestion","prevState","splice","PostForm","submit","handleQuestionChange","onTitleChange","handleTitleChange","handleExplanationChange","handleAddExplanationClick","handleRemoveExplanationClick","onClickDelQuestion","to","SnackbarContent","position","top","action","Switch","inputProps","readOnly","fontWeight","createQuestionUI","PostSubmitForm","BarChart","names","explanationArray","explanationLabels","explanationValues","barData","displayColors","DoughnutChart","answerValues","pieData","AllAnswers","allAnswers","setallAnswers","setarray","answersArray","setanswersArray","explanationsArray","setexplanationsArray","currentStudent","setcurrentStudent","explanationStats","setexplanationStats","showSpinner","setShowSpinner","allQuestions","setAllQuestions","allExplanations","setAllExplanations","setPieData","setBarData","setPieTitle","setBarTitle","displayAllQuizzes","setdisplayAllQuizzes","displayStudentList","setdisplayStudentList","displayStats","setdisplayStats","Axios","handlePieChartChange","handleBarChartChange","getStats","_id","handleStudentList","stats","arrayAns","mergeAllStudentsByIndex","arrayExp","mergeAllExplanation","countAnswers","all","labelsArray","countExplanations","b","d","letter","getExplanationValues","keys","values","key","getAnswerValues","getLabels","object","Object","substr","students","Container","AllQuestions","setdisplayQuiz","setdisplayQuizzes","vusername","AdminRegister","onChangeCheckbox","admin","teacher","noRoleError","mdpTmp","adminRegister","ProtectedRoute","isAuthenticated","isAuthorized","includes","Paginate","allStudents","getAllQuizzes","start","setStart","end","setEnd","expanded","setExpanded","slice","student","Accordion","panel","isExpanded","AccordionSummary","expandIcon","marginLeft","AccordionDetails","Chip","startIcon","old","newStart","newEnd","endIcon","AllStudents","setallStudents","setdisplayActiveQuiz","displayEvolution","setdisplayEvolution","setActiveStudent","VerifyAccount","params","match","useHistory","verifyAccount","media","AdminDashboard","classes","dashboardArray","path","children","actions","one","two","CardActionArea","gutterBottom","CardActions","newPath","href","routeChange","child","route","list","fullList","TemporaryDrawer","left","bottom","right","toggleDrawer","anchor","clsx","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","lists","text","link","textDecoration","Fragment","Drawer","createMuiTheme","palette","main","App","logOut","showAdminBoard","showTeacherBoard","adminTeacher","allUsers","studentAdmin","navList","logout","ThemeProvider","font","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.c4922f73.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\n// const API_URL = \"http://localhost:5050/api/\";\n\nclass AuthService {\n  login(email, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        email,\n        password\n      })\n      .then(response => {\n        if (response.data.token) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(firstname, lastname, email, password, password_confirmation) {\n    return axios.post(API_URL + \"signup\", {\n      firstname, \n      lastname, \n      email, \n      password, \n      password_confirmation\n    });\n  }\n\n  verifyAccount(token) {\n    return axios.post(API_URL + \"verifyAccount\", {\n      token\n    });\n  }\n\n  adminRegister(firstname, lastname, email, roles) {\n    return axios\n    .post(API_URL + \"signup\", {\n      firstname,\n      lastname,\n      email,\n      roles\n    });\n  }\n\n  changePassword(email, old_password, password, password_confirmation) {\n    return axios\n    .post(API_URL + \"changePassword\", {\n      email, \n      old_password, \n      password, \n      password_confirmation\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nexport default function FormCard({content, float}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card style={{  width: \"100%\", backgroundImage: `url(${\"/blueBG.png\"})`, maxWidth:\"890px\",  margin: \"auto\", marginTop:\"70px\"}}\n    >\n      <div style={{backgroundColor: \"white\", height: \"100%\",  maxWidth:\"480px\", minWidth:\"300px\", float: float}}>\n            {content}\n      </div>\n    </Card>\n  );\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\nimport FormCard from './formCard'\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { useHistory } from \"react-router-dom\"\n\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Ce champ est obligatoire !\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.email, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage,\n            open: true\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        \n\n\n        <div >\n            \n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n\n            <FormCard\n              content={\n            <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"70px\", paddingBottom:\"60px\"}}>\n              {this.state.message && (\n                // <div className=\"form-group\">\n                //   <div className=\"alert alert-danger\" role=\"alert\">\n                //     {this.state.message}\n                //   </div>\n                // </div>\n                <Snackbar anchorOrigin={{ vertical :'center', horizontal: 'center' }}open={this.state.open} autoHideDuration={6000} onClose={()=>this.handleClose()}>\n                  <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\n                    {this.state.message}\n                  </Alert>\n                </Snackbar>\n              )}\n              <h2 style={{marginTop: \"30px\"}}>Bienvenue sur la page de connexion</h2>\n              <p>C'est génial que tu sois de retour</p>\n\n              <div style={{marginTop: \"50px\"}}>\n                <label htmlFor=\"email\" style={{marginTop: \"30px\", color:\"black\"}}><strong>Email de l'utilisateur</strong></label>\n                <input\n                      type=\"email\"\n                      size=\"small\"\n                      onChange={this.onChangeEmail}\n                      value={this.state.email}\n                      variant=\"outlined\"\n                      className=\"form-control\"\n                      required \n                  />\n                <label htmlFor=\"password\" style={{marginTop: \"30px\", color:\"black\"}}><strong>Mot de passe</strong></label>\n                <input\n                      type=\"password\"\n                      size=\"small\"\n                      value={this.state.password}\n                      onChange={this.onChangePassword}\n                      variant=\"outlined\"\n                      fullWidth\n                      required \n                      className=\"form-control\" \n                  />\n                </div>  \n                <div>\n                <span style={{width: \"100%\", float:\"right\", marginTop: \"30px\", marginBottom: \"30px\"}}>Mot de passe oublié ?</span>\n                </div>\n                <div style={{marginTop: \"15px\", width: \"100%\"}}>\n                  <button \n                  className=\"btnn\" style={{\"font-size\" : \"12px\", width: \"45%\"}}\n                  disabled={this.state.loading}\n                  >\n                    {this.state.loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                    )}\n                    SE CONNECTER\n                    </button>\n                  <button\n                  onClick={() =>  this.props.history.push({\n                       pathname: \"/register\",\n                     })}\n                  className=\"btnn\" \n                  style={{\"font-size\" : \"12px\", backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\", width: \"45%\"}}>CREER EN COMPTE</button>\n                </div>\n            </div>\n              }\n              float=\"left\"\n            />\n\n            </div>\n\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport FormCard from './formCard'\nimport AuthService from \"../services/auth.service\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst required = (value) => {\n  if (!value) {\n      return (\n        <Alert  severity={\"warning\"}>\n        Ce champ est obligatoire !\n        </Alert>\n      );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <Alert  severity={\"warning\"}>\n      Adresse email non valide.\n      </Alert>\n    );\n  }\n};\n\nconst vlastname = value => {\n  if (value.length < 3 || value.length > 50) {\n    return (\n      <Alert  severity={\"warning\"}>\n      Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\n      </Alert>\n    );\n  }\n};\n\nconst vfirstname = value => {\n  if (value.length < 3 || value.length > 50) {\n    return (\n      <Alert  severity={\"warning\"}>\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.    \n      </Alert>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 50) {\n    return (\n      <Alert  severity={\"warning\"}>\n      Le mot de passe doit contenir entre 6 et 50 charactères.\n      </Alert>\n    );\n  }\n};\nconst vpasswordConfirmation = value => {\n  if (value.length < 6 || value.length > 50) {\n    return (\n      <Alert  severity={\"warning\"}>\n      Le mot de passe doit contenir entre 6 et 50 charactères.\n      </Alert>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\n    this.onChangeLastname = this.onChangeLastname.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangePasswordConfirmation = this.onChangePasswordConfirmation.bind(this);\n\n    this.state = {\n      lastname: \"\",\n      firstname: \"\",\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      successful: false,\n      message: \"\",\n      open: false\n    };\n  }\n\n  onChangeFirstname(e) {\n    this.setState({\n      firstname: e.target.value\n    });\n  }\n\n  onChangeLastname(e) {\n    this.setState({\n      lastname: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangePasswordConfirmation(e) {\n    this.setState({\n      password_confirmation: e.target.value\n    });\n  }\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.firstname,\n        this.state.lastname,\n        this.state.email,\n        this.state.password,\n        this.state.password_confirmation,\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true,\n            open: true\n          });\n\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage,\n            open : true\n          });\n        }\n      );\n    }\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div >\n        {(this.state.message && this.state.successful) && (\n          <div>\n            <Snackbar anchorOrigin={{ vertical :'center', horizontal: 'center' }}open={this.state.open} autoHideDuration={600000} onClose={()=>this.handleClose()}>\n            <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\n              {this.state.message }{this.state.successful}\n            </Alert>\n          </Snackbar>\n\n          <FormCard\n          content={\n            <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"50px\", paddingBottom:\"60px\", clear: \"both\" }}>\n                <p>{this.state.message}</p>\n            </div>\n          }\n          />\n          </div>\n        )}\n\n          <Form\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n\n              <FormCard\n                  content={\n                <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"50px\", paddingBottom:\"60px\", clear: \"both\" }}>\n                  {this.state.message && (\n                      <Snackbar anchorOrigin={{ vertical :'center', horizontal: 'center' }}open={this.state.open} autoHideDuration={600000} onClose={()=>this.handleClose()}>\n                      <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\n                        {this.state.message}\n                      </Alert>\n                    </Snackbar>\n                  )}\n                  <h2>Bienvenue sur la page d'inscription</h2>\n\n                  <div style={{marginTop: \"20px\"}}>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"firstname\" style={{marginTop: \"20px\", color:\"black\"}}><strong>Prenom</strong></label>\n                      <Input\n                          type=\"text\"\n                          size=\"small\"\n                          name=\"firstname\"\n                          value={this.state.firstname}\n                          onChange={this.onChangeFirstname}\n                          validations={[required, vfirstname]}\n                          className=\"form-control\"\n                          required \n                      />\n                    </div>\n\n                    <div className=\"form-group\">  \n                      <label htmlFor=\"lastname\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Nom</strong></label>\n                      <Input\n                            type=\"text\"\n                            size=\"small\"\n                            name=\"lastname\"\n                            value={this.state.lastname}\n                            onChange={this.onChangeLastname}\n                            validations={[required, vlastname]}\n                            className=\"form-control\"\n                            required \n                      />\n                    </div>\n\n                    <div className=\"form-group\">    \n                      <label htmlFor=\"email\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Email</strong></label>\n                      <Input\n                            type=\"email\"\n                            size=\"small\"\n                            name=\"email\"\n                            onChange={this.onChangeEmail}\n                            value={this.state.email}\n                            className=\"form-control\"\n                            required \n                            validations={[required, email]}\n                      />\n                    </div> \n\n                    <div className=\"form-group\">    \n                      <label htmlFor=\"password\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Mot de passe</strong></label>\n                      <Input\n                            type=\"password\"\n                            size=\"small\"\n                            name=\"password\"\n                            value={this.state.password}\n                            onChange={this.onChangePassword}\n                            validations={[required, vpassword]}\n                            className=\"form-control\"\n                            required  \n                      />\n                    </div>\n\n                    <div className=\"form-group\">    \n                      <label htmlFor=\"password_confirmation\" style={{marginTop: \"10px\", color:\"black\"}}><strong> Confirmer Mot de passe</strong></label>\n                      <Input\n                            type=\"password\"\n                            size=\"small\"\n                            name=\"password_confirmation\"\n                            value={this.state.password_confirmation}\n                            onChange={this.onChangePasswordConfirmation}\n                            validations={[required, vpasswordConfirmation]}\n                            className=\"form-control\"\n                            required  \n                      />\n                    </div>\n\n                  </div>  \n\n                  <div style={{marginTop: \"15px\", width: \"100%\"}} className=\"form-group\">\n                    <button\n                    onClick={() =>  this.props.history.push({\n                      pathname: \"/login\",\n                    })} \n                    className=\"btnn\" style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\",\"font-size\" : \"12px\", width: \"44%\"}}\n                    disabled={this.state.loading}\n                    >\n                      {this.state.loading && (\n                      <span className=\"spinner-border spinner-border-sm\"></span>\n                      )}\n                      SE CONNECTER\n                      </button> \n                    <button \n                    className=\"btnn\" \n                    style={{\"font-size\" : \"12px\", width: \"45%\"}} \n                    onClick={this.handleRegister}\n                    >\n                      CREER EN COMPTE\n                      </button>\n                  </div>\n                </div>\n                  }\n                  float=\"right\"\n                />\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // UserService.getPublicContent().then(\n    //   response => {\n    //     this.setState({\n    //       content: response.data.body\n    //     });\n    //   },\n    //   error => {\n    //     this.setState({\n    //       content:\n    //         (error.response && error.response.data) ||\n    //         error.message ||\n    //         error.toString()\n    //     });\n    //   }\n    // );\n    this.setState({\n      content: \"Bienvenue dans votre application de Neuroéducation\"\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Home2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      description: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      title: \"Bienvenue dans votre application de Neuroéducation\",\n      description: \"Cette application permet aux élèves de prendre conscience de leurs stratégies de réussite et des potentielles origines de leurs erreurs\"\n    })\n  }\n\n  render() {\n    return (\n        <div>\n            <div className=\"container\">\n                <header className=\"jumbotron\">\n                    <h3>{this.state.title}</h3>\n                </header>\n            </div>\n            <div className=\"container\">\n                <h5>{this.state.description}</h5>\n                <div style={{textAlign: \"center\", marginTop: \"20px\"}}>\n                  <img style={{height: \"500px\", width: \"500px\", borderRadius: \"10px\"}} src=\"/brain-storming.png\" alt=\"students brainstorming\"/>\n                </div>\n            </div>\n        </div>\n      \n    );\n  }\n}","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nexport default function FormCard2({content, float}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card style={{ height: \"850px\", maxHeight:\"900\", width: \"100%\", backgroundImage: `url(${\"/blueBG.png\"})`, maxWidth:\"890px\",  margin: \"auto\", marginTop:\"70px\"}}\n    >\n      <div style={{backgroundColor: \"white\",height: \"100%\",  minWidth:\"300px\", maxWidth:\"600px\", maxHeight:\"770px\" , width: \"100%\",  margin:\"auto\", marginTop: \"40px\",}}>\n            {content}\n      </div>\n    </Card>\n  );\n}","import {useState} from \"react\";\n// import CheckButton from \"react-validation/build/button\";\nimport FormCard2 from './formCard2'\nimport AuthService from '../services/auth.service'\n\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\nconst ModifyPassword = (props) =>{\n    const [oldPw, setOldPw] = useState('')\n    const [newPw, setNewPw] = useState('')\n    const [confirmNewPw, setConfirmNewPw] = useState('')\n    const [message, setmessage] = useState('');\n    const [successful, setsuccessful] = useState(false);\n    const [email] = useState(props.email)\n    const currentUser = props.currentuser;\n    const [errors, seterrors] = useState(null);\n    const [open, setopen] = useState(false)\n\n\n    const validate = (email, newPw, confirmNewPw) => {\n        if(newPw !== confirmNewPw){\n            seterrors(['Nouveau mot de passe non conforme' ])\n        }\n        if(email===\"\" || email=== null){\n          seterrors([...errors, 'Veuillez vous reconnecter' ])\n        }\n        else{\n          seterrors(null)  \n        }\n    }\n\n    const ApplyModifications = (e) => {\n      e.preventDefault();\n      seterrors(null)  \n      setmessage('');\n      setsuccessful(false);\n\n      validate(newPw, confirmNewPw);\n\n      if(errors){\n        setmessage(errors.toString())\n        setopen(true)\n      }\n      else{\n        AuthService.changePassword(email, oldPw, newPw, confirmNewPw)\n        .then((res) => {\n          setmessage(\"Mot de passe modifié avec succès\");\n          setsuccessful(true);\n          setopen(true)\n        })\n        .catch((error) =>{\n          const errMessage =\n            (error.response.data.message[0].password || (error.response &&\n            error.response.data &&\n            error.response.data.message)) ||\n            error.message ||\n            error.toString();\n            console.log(errMessage);\n          setmessage(errMessage);\n          setsuccessful(false);\n          setopen(true)\n        })\n      }\n    }\n\n    const handleClose = () => {\n      setopen(false)\n    }\n    \n\n\n\nreturn (\n    <div >\n        <form\n          onSubmit={(e) => ApplyModifications(e)}\n        >\n          <FormCard2\n          content={\n            <div  className=\"formCardContent\">\n              <Snackbar anchorOrigin={{ vertical :'center', horizontal: 'center' }}open={open} autoHideDuration={6000} onClose={()=>handleClose()}>\n                <Alert onClose={()=>handleClose()} severity={successful ? \"success\" : \"warning\" }>\n                  {message}\n                </Alert>\n              </Snackbar>\n              <header className=\"jumbotron\">\n                <h3>\n                    Profile : <strong>{currentUser.message.firstname}{' '}{currentUser.message.lastname}</strong> \n                </h3>\n              </header>\n\n              <div \n              className=\"row2\" \n              style={{margin: \"20px\", marginTop: \"20px\", width : \"80%\",marginBottom:\"10px\"}}\n              >\n                <h5>Informations sur le compte</h5>\n                </div>  \n                <div \n                className=\"row1\" \n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\n                >\n                  <label style={{width: \"40%\"}}>Prenom</label>\n                  <input \n                  type=\"text\" \n                  id=\"firstname\" \n                  class=\"input-field\" \n                  disabled \n                  style={{width: \"60%\"}}\n                  value={currentUser.message.firstname}\n                  />    \n                </div>\n\n                <div \n                className=\"row1\" \n                style={{margin: \"20px\", marginTop: \"10px\", width : \"90%\",marginBottom:\"10px\"}}\n                >\n                  <label style={{width: \"40%\"}}>Nom</label>\n                  <input \n                  type=\"text\" \n                  id=\"lastname\" \n                  class=\"input-field\" \n                  disabled \n                  style={{width: \"60%\"}}\n                  value={currentUser.message.lastname}\n                  />    \n                </div>\n                <div \n                className=\"row1\" \n                style={{margin: \"20px\", marginTop: \"10px\", width : \"90%\",marginBottom:\"10px\"}}\n                >\n                  <label style={{width: \"40%\"}}>Email</label>\n                  <input \n                  type=\"email\" \n                  id=\"email\" \n                  class=\"input-field\" \n                  disabled \n                  style={{width: \"60%\"}}\n                  value={currentUser.message.email}\n                  />    \n                </div>\n\n                <div \n                className=\"row2\" \n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\n                >\n                <h5>Changement de mot de passe</h5>\n                </div> \n\n                <div \n                className=\"row1\" \n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\n                >\n                  <label style={{width: \"40%\"}}>Ancien mot de passe</label>\n                  <input \n                  type=\"password\" \n                  name=\"oldPw\" \n                  value={oldPw} \n                  placeholder=\"******\" \n                  onChange={(e) => setOldPw(e.target.value)} \n                  class=\"input-field\" \n                  style={{width: \"60%\"}}\n                  required\n                  />    \n                </div>\n\n                <div \n                className=\"row1\" \n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\n                >\n                  <label style={{width: \"40%\"}}> Nouveau mot de passe </label>\n                  <input \n                  type=\"password\" \n                  name=\"newPw\" \n                  value={newPw} \n                  placeholder=\"******\" \n                  onChange={(e) => setNewPw(e.target.value)} \n                  class=\"input-field\" \n                  style={{width: \"60%\"}}\n                  required\n                  />    \n                </div>\n\n                <div \n                className=\"row1\" \n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\n                >\n                  <label style={{width: \"40%\"}}>Confirmer mot de passe</label>\n                  <input \n                  type=\"password\" \n                  name=\"confirmNewPw\" \n                  value={confirmNewPw} \n                  placeholder=\"******\" \n                  onChange={(e) => setConfirmNewPw(e.target.value)} \n                  class=\"input-field\" \n                  style={{width: \"60%\"}}\n                  required\n                  />    \n                </div>\n\n                <center>\n                <button\n                className=\"btnn\" \n                style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\",\"font-size\" : \"12px\", float:\"right\", marginRight: \"40px\"}}\n                >\n                Confirmer\n                </button>  \n                </center>      \n\n\n            </div>\n          }\n          />\n        </form>  \n    </div>\n);\n}\n\n\n\nexport default ModifyPassword;\n","import React, { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport ModifyPassword from \"./modifyPassword.component\";\nimport FormCard2 from './formCard2'\nimport TextField from '@material-ui/core/TextField';\n\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser()\n    };\n  }\n\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        <ModifyPassword currentuser={currentUser} email={currentUser.message.email}/>        \n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\n\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\n// const API_URL = \"http://localhost:5050/api/${id}\";\n\n\nclass SearchService {\n\n  searchQuiz(id) {\n    return axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${id}`, {\n      \n    });\n  }\n\n  submitAnswers(answers){\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\n        answers\n      })\n  }\n\n\n}\n\nexport default new SearchService();\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\n\nexport const Title = ({data, noUnderline, subHeader}) => {\n\n    return (\n        <div>\n            <Typography\n                style={{textAlign: \"center\", color:\"#4257b2\", marginTop: \"20px\", marginBottom: \"20px\"}}\n                variant={subHeader ? \"h6\": \"h5\"}\n            >\n                {data}\n                <div className={noUnderline ? \"\": \"underline\"}></div>\n            </Typography>\n        </div>\n    )\n}\n","//CREATE LABELS FOR LINE CHART \nconst LineLabels = (integer) => { //integer is == groupArray.length\n    let array = []\n    switch(integer){\n        case 1:\n            array = [\"1er quiz\"];\n            break;\n        case 2:\n            array = [\"1er quiz\", \"2e quiz\"];\n            break;\n        case 3:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\"];\n            break;\n        case 4:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\"];\n            break;\n        case 5:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\"];\n            break;\n        case 6:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\"];\n            break;\n        case 7:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\"];\n            break;\n        case 8:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\"];\n            break;\n        case 9:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\"];\n            break;\n        case 10:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\"];\n            break;\n        case 11:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\"];\n            break;\n        case 12:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\"];\n            break;\n        case 13:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\"];\n            break;\n        case 14:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\"];\n            break;\n        default:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\", \"15e quiz\"];\n            break;\n    }\n    return array;\n  }\n\n  export default LineLabels;\n\n","\nimport { Line } from 'react-chartjs-2';\n\n\nconst LineChart = ({ labels, data }) => {\n    return ( \n        <div>\n            <Line\n                data={{\n                    labels: labels,\n                    datasets: [{\n                        data: data,\n                        borderColor: 'hsl(205, 78%, 60%)'\n                    }]\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    legend: {\n                        display: false\n                    },\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }]\n                    },\n                    tooltips: {\n                        callbacks: {\n                            label: (item, datax) => {\n                                let string = \"\"\n                                switch(data[item.index]){\n                                    case 4:\n                                        string = \"Oui\"\n                                        break\n                                    case 3:\n                                        string = \"Plutot Oui\"\n                                        break\n                                    case 2: \n                                        string = \"Plutot Non\"\n                                        break\n                                    default:\n                                        string = \"Non\"\n                                        break\n                                }\n                                return string\n                            }\n                        }\n                    }\n                }}\n            />\n        </div>\n     );\n}\n \nexport default LineChart;\n","import React, {useState} from 'react'\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport IconButton from '@material-ui/core/IconButton';\nimport NoteCard from \"./NoteCard\";\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport Tooltip from '@material-ui/core/Tooltip'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\n\n\n\n\nconst FlippyItems = ({frontSide, backSide}) => {\n    return (\n        <Flippy\n        // onmouseover={onMouseOver}\n        className=\"col-xs-12 col-sm-12 col-md-4 col-lg-3\"\n        flipOnHover={true} // default false\n        flipOnClick={false} // default false\n        flipDirection=\"horizontal\" // horizontal or vertical\n        // ref={(r) => this.flippy = r} // to use toggle method like this.flippy.toggle()\n        // if you pass isFlipped prop component will be controlled component.\n        // and other props, which will go to div\n        style={{ minWidth: '260px', height: '150px', marginBottom : \"25px\", marginRight : \"25px\"}} /// these are optional style, it is not necessary\n      >\n        <FrontSide\n          style={{\n            // backgroundColor: '#41669d',\n            padding: 0,\n            margin:0\n          }}\n        >\n          {frontSide}\n        </FrontSide>\n        <BackSide\n          style={{ \n            backgroundColor: '#4257b2',\n            padding: 2,\n            margin:0}}\n        >\n        <div> \n          {backSide}  \n        </div> \n        </BackSide>\n      </Flippy>\n    )\n}\n\nexport default FlippyItems\n","import React from 'react';\nimport SearchService from '../services/search.service';\nimport AuthService from '../services/auth.service';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Avatar, Typography } from '@material-ui/core';\nimport { Title } from './Title';\nimport LineLabels from './LineLabels';\nimport LineChart from './LineChart';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport FlippyItems from './Flippy';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  //makeStyles returns to us a hook, the hook subsequently gives us the object. NB: react hooks must begin with the word 'use'\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block',\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst BoardUser = () => {\n  const [search, setsearch] = useState('');\n  const [successful, setsuccessful] = useState(false);\n  const [message, setmessage] = useState('');\n  const [errorMessage, seterrorMessage] = useState('');\n  // const [errors, seterrors] = useState([])\n  const [currentQuiz, setcurrentQuiz] = useState(null);\n  const [radioOptions, setradioOptions] = useState({});\n  const [checkedItems, setCheckedItems] = useState([]);\n  const [currentUser] = useState(AuthService.getCurrentUser());\n  const [allQuizzes, setallQuizzes] = useState([]);\n  const [displayAllAnswered, setdisplayAllAnswered] = useState(false);\n  const [validate, setvalidate] = useState(false);\n  const [lineArray, setLineArray] = useState([]);\n  const [actualQuiz, setactualQuiz] = useState([]);\n  const [displayMain, setdisplayMain] = useState(true);\n  const [displayLineChart, setDisplayLineChart] = useState(false);\n  const [displayCurrentQuiz, setdisplayCurrentQuiz] = useState(false);\n  const [value, setValue] = useState(); //just for refreshing the component for changes to take effect\n\n  const evolution = () => {\n    setdisplayMain(false);\n    setDisplayLineChart(true);\n    setdisplayCurrentQuiz(false);\n  };\n  const goBack = () => {\n    setdisplayMain(true);\n    setdisplayAllAnswered(true);\n    setDisplayLineChart(false);\n    setdisplayCurrentQuiz(false);\n  };\n\n  const classes = useStyles();\n\n  // CREATE ARRAY CONTAINING ANSWERS OF EACH ATTEMPT\n  const getAllAns = (quiz) => {\n    let array = [];\n    quiz.student_answers.forEach((answers) => {\n      switch (answers.answer) {\n        case 'Non':\n          array.push(1);\n          break;\n        case 'Plutot Non':\n          array.push(2);\n          break;\n        case 'Plutot Oui':\n          array.push(3);\n          break;\n        default:\n          array.push(4);\n          break;\n      }\n    });\n    return array;\n  };\n\n  //GENERATE DATA VALUES FOR LINE CHART\n  const getLineData = (groupArray, index) => {\n    let dataArray = [];\n    groupArray.forEach((item) => {\n      dataArray.push(item[index]);\n    });\n    return dataArray;\n  };\n  //\n  const setActiveQuizRefreshComponentToEffectChanges = (quiz, index) => {\n    setActiveQuiz(quiz, index);\n    // by calling this method react re-renders the component\n    setValue({});\n  };\n\n  //SET ACTIVE QUIZ\n  const setActiveQuiz = (quiz, index) => {\n    let tempLineArray = [];\n    quiz.quiz_answers.forEach((quiz, index) => {\n      tempLineArray.push(getAllAns(quiz));\n    });\n    setLineArray(tempLineArray);\n\n    // setdisplayQuizzes(null);\n\n    // GET ACTUAL QUESTIONS FROM DATABASE\n    SearchService.searchQuiz(quiz.quiz_id)\n      .then((response) => {\n        setactualQuiz(response.data);\n      })\n      .catch((error) => {\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n      });\n  };\n\n  // LOAD ALL QUIZZES ANSWERED BY CURRENT STUDENT FROM DATABASE\n  //ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\n  useEffect(() => {\n    const student_id = currentUser.message.email;\n    axios\n      .get(\n        `https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`\n      )\n      .then((response) => {\n        setallQuizzes(response.data.quizzes);\n      })\n      .catch(function (err) {\n        seterrorMessage(err.response);\n      });\n  }, [currentUser]);\n\n  const onChangeSearch = (e) => {\n    setsearch(e.target.value);\n  };\n\n  // RETURN CHECKED VALUE(true or false)\n  const checkRadioButton = (question_id, label) => {\n    if (!radioOptions[question_id]) {\n      return false;\n    }\n    return radioOptions[question_id] === label;\n  };\n\n  // SET RADIO BUTTON SELECTION FRO EACH QUESTION\n  const setradio = (id, answer) => {\n    let checkedArray = checkedItems.map((x) => {\n      return { ...x };\n    });\n    const find_question = checkedArray.find((a) => a.question_answer_id === id);\n    if (find_question) {\n      checkedArray.find((a) => a.question_answer_id === id).answer = answer;\n      setradioOptions((state) => {\n        return {\n          ...state,\n          [id]: answer,\n        };\n      });\n      setCheckedItems(checkedArray);\n    } else {\n      setradioOptions((state) => {\n        return {\n          ...state,\n          [id]: answer,\n        };\n      });\n\n      setCheckedItems([\n        ...checkedItems,\n        {\n          question_answer_id: id,\n          answer: answer,\n          explanation: 'no explanation',\n        },\n      ]);\n    }\n  };\n\n  // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\n  const setCheckbox = (\n    value,\n    checked,\n    question_id,\n    question_title,\n    quiz_id\n  ) => {\n    let checkedArray = checkedItems.map((x) => {\n      return { ...x };\n    });\n    const find_question = checkedArray.find(\n      (a) => a.question_answer_id === question_id\n    );\n    if (find_question) {\n      checkedArray.find(\n        (a) => a.question_answer_id === question_id\n      ).explanation = value;\n      setCheckedItems(checkedArray);\n    }\n  };\n\n  // SUBMIT ANSWERS TO THE BACKEND\n  const submitAnswers = () => {\n    const timestamp = Date.now();\n    const formatedTimestamp = new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    }).format(timestamp);\n    const answers = {\n      quiz_id: currentQuiz.quiz_id,\n      quiz_title: currentQuiz.quiz,\n      quiz_answers: {\n        student_id: currentUser.message.email,\n        student_answers: checkedItems,\n        time_submitted: formatedTimestamp,\n      },\n    };\n\n    if (\n      currentQuiz.questions.length !==\n      answers.quiz_answers.student_answers.length\n    ) {\n      setvalidate(true);\n      return setvalidate(true);\n    }\n\n    axios\n      .post('https://neuroeducation-feedback.herokuapp.com/api//history', {\n        answers,\n      })\n      .then((res) => {\n        if (res) {\n          //   window.location.reload(false);\n          setcurrentQuiz(null);\n          setCheckedItems([]);\n          setradioOptions({});\n          setallQuizzes([...allQuizzes, answers]);\n          setmessage('Réponses soumises');\n          setsuccessful(true);\n          setdisplayAllAnswered(true);\n        }\n      })\n      .catch((err) => {\n        setcurrentQuiz(null);\n        setsuccessful(false);\n        setmessage(\n          err.response.data.message || err.response.data.message[0].error\n        );\n      });\n  };\n\n  const handleClose = () => {\n    setvalidate(false);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setmessage('');\n    setsuccessful(false);\n\n    // this.form.validateAll();\n\n    {\n      SearchService.searchQuiz(search)\n        .then((response) => {\n          setdisplayAllAnswered(false);\n          setsuccessful(true);\n          setcurrentQuiz(response.data);\n          setdisplayCurrentQuiz(true);\n        })\n        .catch((error) => {\n          console.log(error.response);\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setmessage(resMessage);\n          setsuccessful(false);\n        });\n    }\n  };\n\n  return (\n    <div>\n      {displayMain && (\n        <div>\n          <div>\n            {errorMessage && (\n              <div className=\"form-group\">\n                <div className={'alert alert-danger'} role=\"alert\">\n                  {errorMessage}\n                </div>\n              </div>\n            )}\n\n            {(!successful || displayAllAnswered) && (\n              <div>\n                <div style={{ marginTop: '50px' }}>\n                  {message && (\n                    <div className=\"form-group\">\n                      <div\n                        className={\n                          successful\n                            ? 'alert alert-success'\n                            : 'alert alert-danger'\n                        }\n                        role=\"alert\"\n                      >\n                        {message}\n                      </div>\n                    </div>\n                  )}\n                  <form id=\"form\">\n                    <input\n                      onChange={onChangeSearch}\n                      id=\"commonSearchTerm\"\n                      className=\"input-field\"\n                      placeholder=\"Entrez un code de quiz valide...\"\n                      required\n                    />\n                    <button\n                      id=\"searchButton\"\n                      className=\"input-field\"\n                      onClick={handleSearch}\n                    >\n                      Rechercher\n                    </button>\n                  </form>\n                </div>\n\n                {(displayAllAnswered || !successful) && allQuizzes && (\n                  <div>\n                    <div className=\"col-xs-12 col-sm-12 col-md-12\">\n                      <center>\n                        <Title data={'Quiz déjà répondus'} />\n                      </center>\n                      <div className=\"row\">\n                        {allQuizzes &&\n                          allQuizzes.map((quiz, index) => (\n                            <div\n                              key={index}\n                              className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"\n                            >\n                              {/* <Card className=\"card\" elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}} onMouseOver={() => setActiveQuiz(quiz, index)} onClick={evolution} >\n                                      <CardHeader\n                                            avatar={\n                                                (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\n                                                    {quiz.quiz_id[0].toUpperCase()}\n                                                </Avatar>)\n                                        }\n                                            title={quiz.quiz_id}\n                                      />\n                                      <CardContent>\n                                          <Typography variant=\"body2\" color=\"textSecondary\">\n                                              {quiz.quiz_id}\n                                          </Typography>\n                                      </CardContent>\n                                    </Card> */}\n\n                              <FlippyItems\n                                frontSide={\n                                  <div key={index}>\n                                    <Card\n                                      elevation={1}\n                                      style={{\n                                        padding: '20px',\n                                        marginBottom: '10px',\n                                      }}\n                                      onMouseOver={() =>\n                                        setActiveQuizRefreshComponentToEffectChanges(\n                                          quiz,\n                                          index\n                                        )\n                                      }\n                                    >\n                                      <CardHeader\n                                        avatar={\n                                          <Avatar\n                                            style={{\n                                              backgroundColor: '#4257b2',\n                                            }}\n                                          >\n                                            {quiz.quiz_id[0].toUpperCase()}\n                                          </Avatar>\n                                        }\n                                        title={quiz.quiz_id}\n                                        // subheader={note}\n                                      />\n                                      <CardContent>\n                                        <Typography\n                                          variant=\"body2\"\n                                          color=\"textSecondary\"\n                                        >\n                                          {quiz.quiz_id}\n                                        </Typography>\n                                      </CardContent>\n                                    </Card>\n                                  </div>\n                                }\n                                backSide={\n                                  <div key={index}>\n                                    <Card\n                                      elevation={1}\n                                      style={{\n                                        padding: '20px',\n                                        marginBottom: '10px',\n                                      }}\n                                    >\n                                      <CardHeader\n                                        avatar={\n                                          <Avatar\n                                            style={{\n                                              backgroundColor: '#4257b2',\n                                            }}\n                                          >\n                                            {quiz.quiz_id[0].toUpperCase()}\n                                          </Avatar>\n                                        }\n                                        title={quiz.quiz_id}\n                                      />\n                                      <CardContent>\n                                        <div\n                                          style={{\n                                            float: 'right',\n                                            color: '#4257b2',\n                                          }}\n                                        >\n                                          <Tooltip title=\"Cliquez pour les statistiques\">\n                                            <IconButton\n                                              onClick={evolution}\n                                              style={{\n                                                float: 'right',\n                                                color: '#4257b2',\n                                              }}\n                                            >\n                                              <EqualizerIcon />\n                                            </IconButton>\n                                          </Tooltip>\n                                        </div>\n                                      </CardContent>\n                                    </Card>\n                                  </div>\n                                }\n                              />\n                            </div>\n                          ))}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      <div>\n        {displayCurrentQuiz && currentQuiz && (\n          <div className=\"container-questions\">\n            <IconButton\n              onClick={() => goBack()}\n              style={{ float: 'left', color: '#4257b2' }}\n            >\n              <ArrowBackIcon />\n            </IconButton>\n            {validate && (\n              <Snackbar\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                open={validate}\n                autoHideDuration={6000}\n                onClose={() => handleClose()}\n              >\n                <Alert onClose={() => handleClose()} severity=\"error\">\n                  {'Please answer all questions'}\n                </Alert>\n              </Snackbar>\n            )}\n            <center>\n              <h4>{currentQuiz.quiz}</h4>\n              <br />\n            </center>\n            {currentQuiz.questions &&\n              currentQuiz.questions.map((questions, indexx) => (\n                <div key={questions.question_id}>\n                  <span style={{ fontSize: '20px' }}>\n                    {questions.question_id}\n                    {'. '}\n                    {questions.question_title}\n                  </span>\n                  <div>\n                    <input\n                      className=\"input\"\n                      type=\"radio\"\n                      value=\"Oui\"\n                      checked={checkRadioButton(questions.question_id, 'Oui')}\n                      onChange={(e) =>\n                        setradio(questions.question_id, e.target.value)\n                      }\n                    />{' '}\n                    Oui\n                    <input\n                      className=\"input\"\n                      type=\"radio\"\n                      value=\"Plutot Oui\"\n                      checked={checkRadioButton(\n                        questions.question_id,\n                        'Plutot Oui'\n                      )}\n                      onChange={(e) =>\n                        setradio(questions.question_id, e.target.value)\n                      }\n                    />{' '}\n                    Plutot Oui\n                    <input\n                      className=\"input\"\n                      type=\"radio\"\n                      value=\"Plutot Non\"\n                      checked={checkRadioButton(\n                        questions.question_id,\n                        'Plutot Non'\n                      )}\n                      onChange={(e) =>\n                        setradio(questions.question_id, e.target.value)\n                      }\n                    />{' '}\n                    Plutot Non\n                    <input\n                      className=\"input\"\n                      type=\"radio\"\n                      value=\"Non\"\n                      checked={checkRadioButton(questions.question_id, 'Non')}\n                      onChange={(e) =>\n                        setradio(questions.question_id, e.target.value)\n                      }\n                    />{' '}\n                    Non\n                  </div>\n\n                  {radioOptions[questions.question_id] === 'Plutot Non' ||\n                  radioOptions[questions.question_id] === 'Plutot Oui' ||\n                  radioOptions[questions.question_id] === 'Non' ? (\n                    <div>\n                      {questions.question_options &&\n                        questions.question_options.map((options, index) => (\n                          <div>\n                            <label>\n                              <input\n                                type=\"checkbox\"\n                                value={options.options_id}\n                                checked={checkedItems[options.option_text]}\n                                onChange={(e) =>\n                                  setCheckbox(\n                                    e.target.value,\n                                    e.target.checked,\n                                    questions.question_id,\n                                    questions.question_id,\n                                    currentQuiz.quiz_id\n                                  )\n                                }\n                              />\n                              <span>\n                                {'  '}\n                                {options.options_id}\n                                {'. '}\n                                {options.options_text}\n                              </span>\n                            </label>\n                          </div>\n                        ))}\n                    </div>\n                  ) : (\n                    <span>No Explanation Needed</span>\n                  )}\n                </div>\n              ))}\n            <div className=\"form-group\">\n              <button className=\"btnn\" onClick={submitAnswers}>\n                Submit Answers\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n      {displayLineChart && (\n        <div>\n          <IconButton\n            onClick={() => goBack()}\n            style={{ float: 'left', color: '#4257b2' }}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          {lineArray.length ? (\n            <Grid container spacing={3}>\n              {lineArray.length &&\n                displayLineChart &&\n                lineArray[0].map((attempt, index) => (\n                  <Grid item md={6} sm={12} lg={4}>\n                    <Card elevation={2}>\n                      <CardHeader\n                        title={\n                          <Typography\n                            style={{ fontSize: '1rem' }}\n                            color=\"textSecondary\"\n                            variant=\"h6\"\n                            component=\"p\"\n                          >\n                            {actualQuiz\n                              ? `Q${index + 1}. ` +\n                                actualQuiz.questions[index].question_title\n                              : `Question ${index + 1}`}\n                          </Typography>\n                        }\n                        subheader={\n                          <div style={{ fontSize: '0.8rem' }}>\n                            Oui-4 Plutot Oui-3 Plutot Non-2 Non-1\n                          </div>\n                        }\n                      />\n                      <CardContent>\n                        <LineChart\n                          labels={LineLabels(lineArray.length)}\n                          data={getLineData(lineArray, index)}\n                        />\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                ))}\n            </Grid>\n          ) : (\n            <Title\n              data=\"Aucune donnée pour le graphique, veuillez d'abord répondre au quiz.\"\n              noUnderline={true}\n              subHeader={true}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BoardUser;\n","import axios from \"axios\";\n\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\n\nclass PostForm {\n    submit(title, created_by, questions) {\n        return axios\n            .post(API_URL + \"submit\", {\n                title,\n                created_by,\n                questions\n            })\n            .then(response => {\n                return response.data;\n            });\n    }\n}\n\nexport default new PostForm();\n","import {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Typography,\n} from '@material-ui/core';\nimport { React } from 'react';\n\nconst ConfirmDialogue = (props) => {\n  const { confirmDialog } = props;\n  return (\n    <div>\n      <Dialog open={confirmDialog.isOpen}>\n        <DialogTitle></DialogTitle>\n        <DialogContent>\n          <Typography variant=\"h6\">{confirmDialog.title}</Typography>\n          <Typography variant=\"subtitle2\">{confirmDialog.subTitle}</Typography>\n        </DialogContent>\n        <DialogActions>\n          <button className=\"btnn\" onClick={confirmDialog.onDiscard}>\n            Non\n          </button>\n          <button className=\"btnn\" onClick={confirmDialog.onConfirm}>\n            Oui\n          </button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ConfirmDialogue;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\nconst ITEM_HEIGHT = 48; \n\nexport default function MenuOption(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        style={{float:\"right\",color: '#4257b2'}}\n      >\n        <MoreVertIcon />\n        <span>Options</span>\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5,\n            width: '20ch',\n            color: '#4257b2'\n          },\n        }}\n      >\n        {props.options && props.options.map((option) => (\n          <MenuItem key={option.title} selected={option === 'Pyxis'} onClick={option.onclick} >\n            {option.icon}{option.title}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport { Button, Snackbar, Switch } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport PostForm from '../services/admin-submit-form';\nimport AuthService from '../services/auth.service';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport SearchService from '../services/search.service';\nimport ConfirmDialogue from './confirm-dialogue';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport MenuOption from './menu';\nimport EditIcon from '@material-ui/icons/Edit';\nimport NoteCard from './NoteCard';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport QueueIcon from '@material-ui/icons/Queue';\nimport { TextField } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Avatar, Typography } from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { Title } from './Title';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n// Here is 5 constants related to the visual of our custom button\nconst StyledButtonAddExplanation = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst StyledButtonAddQuestion = withStyles({\n  root: {\n    background: '#4257b2',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst StyledButtonDelExplanation = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FF8700 30%, #FF1E1E 90%)',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst StyledButtonDelQuestion = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FF1D1D 30%, #4C4C4C 90%)',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst StyledButtonSubmit = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #11FF00 30%, #00FF82 90%)',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Ce champ est obligatoire !\n      </div>\n    );\n  }\n};\n\nclass MyForm extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeQuestion = this.onChangeQuestion.bind(this);\n    this.onClickAddExplanation = this.onClickAddExplanation.bind(this);\n    this.state = {\n      explanations: false,\n      delete: this.props.delete,\n    };\n  }\n\n  onChangeQuestion(e) {\n    this.props.onQuestionChange(e.target.value);\n  }\n\n  onChangeExplanation(indexExplanation, e) {\n    this.props.onExplanationChange(indexExplanation, e.target.value);\n  }\n\n  onClickRemoveExplanation(indexExplanation) {\n    this.props.onRemoveExplanationClick(indexExplanation);\n  }\n\n  onClickAddExplanation() {\n    this.props.onAddExplanationClick();\n    this.setState({\n      explanations: true,\n    });\n  }\n\n  createExplanationUI() {\n    return (\n      <div>\n        {this.props.explanations ? (\n          this.props.explanations.map((element, indexExplanation) => (\n            <div>\n              <div key={indexExplanation} className=\"form-group\">\n                <label htmlFor=\"explanation\">Explication</label>\n                <form id=\"formExp\">\n                  <input\n                    onChange={this.onChangeExplanation.bind(\n                      this,\n                      indexExplanation\n                    )}\n                    id=\"inputExp\"\n                    variant=\"outlined\"\n                    fullWidth\n                    required\n                    size=\"small\"\n                    style={{ height: '50' }}\n                  />\n                  <Tooltip title=\"Supprimer cette explication\">\n                    <button\n                      type=\"button\"\n                      id=\"buttonExp\"\n                      onClick={this.onClickRemoveExplanation.bind(\n                        this,\n                        indexExplanation\n                      )}\n                    >\n                      {' '}\n                      <DeleteForeverIcon style={{ color: 'red' }} />{' '}\n                    </button>\n                  </Tooltip>\n                </form>\n              </div>\n            </div>\n          ))\n        ) : (\n          <h3>No Explanation props</h3>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const question = this.state.question;\n    const deleteQuiz = this.state.delete;\n\n    return (\n      <div>\n        <Form>\n          <div className=\"form-group\">\n            <label htmlFor=\"question\" style={{ paddingTop: '10px' }}>\n              <span>\n                <strong>Question</strong>\n                <Tooltip title=\"Supprimer cette question\">\n                  <IconButton\n                    className=\"deleteQuestion\"\n                    onClick={deleteQuiz}\n                    style={{ float: 'right' }}\n                  >\n                    <DeleteForeverIcon />\n                  </IconButton>\n                </Tooltip>\n              </span>\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"question\"\n              value={question}\n              onChange={this.onChangeQuestion}\n              validations={[required]}\n              autoComplete=\"off\"\n            />\n          </div>\n          {this.state.explanations && this.createExplanationUI()}\n\n          <Tooltip title=\"Adjouter une explication\">\n            <IconButton\n              onClick={this.onClickAddExplanation}\n              style={{ color: '#4257b2', float: 'left', marginBottom: '15px' }}\n            >\n              <QueueIcon />\n            </IconButton>\n          </Tooltip>\n          <br />\n          <br />\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.onClickAddQuestion = this.onClickAddQuestion.bind(this);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.allowQuiz = this.allowQuiz.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.getQuiz = this.getQuiz.bind(this);\n    this.test = this.test.bind(this);\n\n    this.state = {\n      title: '',\n      created_by: '',\n      questions: [\n        {\n          question_id: '',\n          question_title: '',\n          question_options: [],\n        },\n      ],\n      message: '',\n      currentUser: undefined,\n      submitted: false,\n      quizMdp: '',\n      allQuizzes: null,\n      displayQuizzes: null,\n      errorMessage: '',\n      laststate: null,\n      confirmDialog: {\n        isOpen: false,\n        title: '',\n        subTitle: '',\n      },\n      updateTitle: 'Are you sure you want to update?',\n      updateSubTitle: 'You will be able to edit again',\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n      });\n    }\n\n    axios\n      .get(\n        `https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${user.message.email}`\n      )\n      .then((response) => {\n        if (response.data.quizzes.length) {\n          this.setState({\n            allQuizzes: response.data.quizzes,\n            displayQuizzes: true,\n          });\n        } else {\n          this.setState({\n            allQuizzes: null,\n            displayQuizzes: false,\n          });\n        }\n      })\n      .catch(function (err) {\n        this.setState({\n          errorMessage:\n            err.response.data.message || err.response.data.message[0].error,\n        });\n      });\n\n    this.setState({\n      menuOptions: [\n        {\n          title: 'Retourner',\n          icon: <ArrowBackIcon fontsize=\"large\" />,\n          onclick: this.backToQuizzes,\n        },\n        {\n          title: 'Éditer',\n          icon: <EditIcon fontsize=\"large\" />,\n          onclick: this.editQuiz,\n        },\n        {\n          title: 'Effacer',\n          icon: <DeleteForeverIcon fontsize=\"large\" />,\n          onclick: () =>\n            this.setConfirmDialog(\n              'delete',\n              'Are you sure you want to Delete this Quiz?',\n              'Question will be deleted permanently but no with Students Records',\n              this.deleteQuiz\n            ),\n        },\n      ],\n    });\n  }\n\n  createQuiz = () => {\n    this.setState({\n      laststate: this.state.displayQuizzes,\n      displayQuizzes: null,\n      displayCreate: true,\n      displayQuiz: false,\n    });\n  };\n\n  backToQuizzes = () => {\n    this.setState({\n      displayQuizzes: this.state.laststate,\n      displayCreate: false,\n      displayQuiz: false,\n      edit: false,\n    });\n  };\n\n  test(e) {\n    alert('test');\n  }\n\n  getQuiz = (quiz_idd) => {\n    SearchService.searchQuiz(quiz_idd)\n      .then((response) => {\n        this.setState({\n          displayQuiz: true,\n          laststate: this.state.displayQuizzes,\n          currentQuiz: response.data,\n          toggle: response.data.allow,\n          displayQuizzes: null,\n          displayCreate: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error.response);\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n        this.setState({\n          message: resMessage,\n          successful: false,\n        });\n      });\n  };\n\n  setConfirmDialog = (type, title, subtitle, onconfirm) => {\n    this.setState({\n      confirmDialog: {\n        isOpen: true,\n        title: title,\n        subTitle: subtitle,\n        onConfirm: onconfirm,\n        onDiscard: () => this.discard(type),\n      },\n    });\n  };\n\n  discard = (type) => {\n    if (type === 'update' || type === 'delete') {\n      this.setState({\n        confirmDialog: {\n          isOpen: false,\n          title: '',\n          subTitle: '',\n          onConfirm: null,\n          onDiscard: null,\n        },\n      });\n    } else if (type === 'toggle') {\n      this.setState({\n        confirmDialog: {\n          isOpen: false,\n          title: '',\n          subTitle: '',\n          onConfirm: null,\n          onDiscard: null,\n        },\n        toggle: !this.state.toggle,\n      });\n    }\n  };\n\n  handleToggle = (event) => {\n    this.setState({\n      toggle: event.target.checked,\n    });\n    let title;\n    let message;\n    if (event.target.checked) {\n      title = 'Autoriser les étudiants à répondre au quiz ?';\n      message = 'Les étudiants peuvent répondre au quiz maintenant';\n    } else {\n      title = 'Voulez-vous fermer le quiz ?';\n      message = 'Les étudiants ne peuvent pas répondre au quiz maintenant';\n    }\n    this.setState({\n      confirmDialog: {\n        isOpen: true,\n        title: title,\n        subTitle: this.state.subTitle,\n        onConfirm: () => this.allowQuiz(message),\n        onDiscard: () => this.discard('toggle'),\n      },\n    });\n  };\n\n  allowQuiz = (message) => {\n    let allow = this.state.toggle;\n    const quiz_id = this.state.currentQuiz.quiz_id;\n    axios\n      .post(\n        `https://neuroeducation-feedback.herokuapp.com/api/allowQuiz/${quiz_id}`,\n        {\n          allow,\n        }\n      )\n      .then((response) => {\n        let success;\n        if (allow) {\n          success = allow;\n        } else {\n          success = false;\n        }\n        this.setState({\n          message: message,\n          open: true,\n          successful: success,\n          toggle: allow,\n        });\n      })\n      .catch(function (err) {\n        console.log(err.response.data.message || err.response);\n      });\n\n    this.setState({\n      confirmDialog: {\n        isOpen: false,\n        title: '',\n        subTitle: '',\n        onConfirm: null,\n        onDiscard: null,\n      },\n    });\n  };\n\n  updateQuiz = (event) => {\n    event.preventDefault();\n    let updated_questions = [];\n\n    for (let i = 1; i <= 5; i++) {\n      if (document.getElementById('Q' + i) === null) {\n        break;\n      }\n      var id = document.getElementById('Q' + i).value;\n\n      let expArr = [];\n      for (let j = 1; j <= 20; j++) {\n        let alphabet = String.fromCharCode(96 + j);\n        let expId = 'Q' + i + 'E' + alphabet;\n\n        if (document.getElementById(expId) === null) {\n          break;\n        } else {\n          var exp = document.getElementById(expId).value;\n          expArr.push({\n            options_id: alphabet,\n            options_text: exp,\n          });\n        }\n      }\n      updated_questions.push({\n        question_id: i,\n        question_title: id,\n        question_options: expArr,\n      });\n    }\n\n    const quiz_id = document.getElementById('quiz_id').value;\n    axios\n      .post(\n        `https://neuroeducation-feedback.herokuapp.com/api/updateQuiz/${quiz_id}`,\n        {\n          updated_questions,\n        }\n      )\n      .then((response) => {\n        this.setState({\n          message: 'Quiz mis à jour.',\n          open: true,\n          successful: true,\n        });\n      })\n      .catch(function (err) {\n        console.log(err.response.data.message || err.response);\n        this.setState({\n          message: 'Quiz non mis à jour.',\n          open: true,\n          successful: false,\n        });\n      });\n\n    this.setState({\n      confirmDialog: {\n        isOpen: false,\n        title: '',\n        subTitle: '',\n        onConfirm: null,\n        onDiscard: null,\n      },\n    });\n  };\n\n  deleteQuiz = () => {\n    const id = this.state.currentQuiz.quiz_id;\n    const email = this.state.currentQuiz.created_by;\n    axios\n      .delete(\n        `https://neuroeducation-feedback.herokuapp.com/api/delete/${id}/${email}`\n      )\n      .then((res) => {\n        this.setState({\n          open: true,\n          message: 'Quiz supprimé',\n          danger: true,\n          successful: null,\n          allQuizzes: this.state.allQuizzes.filter(\n            (question) => question.quiz_id !== id\n          ),\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          message: 'Quiz non supprimé... veuillez réessayer',\n          open: true,\n          successful: false,\n        });\n      });\n    this.setState({\n      confirmDialog: {\n        isOpen: false,\n        title: '',\n        subTitle: '',\n        onConfirm: null,\n        onDiscard: null,\n      },\n    });\n\n    this.backToQuizzes();\n  };\n\n  editQuiz = () => {\n    this.setState({\n      edit: true,\n      displayQuiz: false,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  handleQuestionChange(indexQuestion, question) {\n    let questions = [...this.state.questions];\n    questions[indexQuestion].question_title = question;\n    questions[indexQuestion].question_id = indexQuestion + 1;\n    this.setState({\n      questions,\n    });\n  }\n\n  handleExplanationChange(indexQuestion, indexExplanation, explanation) {\n    let questions = [...this.state.questions];\n    questions[indexQuestion].question_options[indexExplanation].options_text =\n      explanation;\n\n    let alphabet = String.fromCharCode(96 + (indexExplanation + 1));\n    questions[indexQuestion].question_options[indexExplanation].options_id =\n      alphabet;\n\n    this.setState({\n      questions,\n    });\n  }\n\n  onChangeTitle(e) {\n    let title = e.target.value;\n    this.setState({\n      title,\n    });\n  }\n\n  onClickAddQuestion() {\n    this.setState((prevState) => ({\n      questions: [\n        ...prevState.questions,\n        {\n          question_title: '',\n          question_options: [],\n        },\n      ],\n    }));\n  }\n\n  handleAddExplanationClick(indexQuestion) {\n    let questions = [...this.state.questions];\n    questions[indexQuestion].question_options.push({ options_text: '' });\n    this.setState({\n      questions,\n    });\n  }\n\n  handleRemoveExplanationClick(indexQuestion, indexExplanation) {\n    let questions = [...this.state.questions];\n    questions[indexQuestion].question_options.splice(indexExplanation, 1);\n    this.setState({\n      questions,\n    });\n  }\n\n  onClickDelQuestion(indexQuestion) {\n    let questions = [...this.state.questions];\n    questions.splice(indexQuestion, 1);\n    this.setState({\n      questions,\n    });\n  }\n\n  handleSubmit() {\n    const { currentUser } = this.state;\n\n    PostForm.submit(\n      this.state.title,\n      currentUser.message.email,\n      this.state.questions\n    ).then(\n      (response) => {\n        this.setState({\n          message: 'Quiz submitted',\n          submitted: true,\n          quizMdp: response.quizMdp,\n        });\n      },\n      (error) => {\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        this.setState({\n          message: resMessage,\n          questions: [\n            {\n              question_title: '',\n              question_options: [],\n            },\n          ],\n        });\n      }\n    );\n  }\n\n  createQuestionUI() {\n    return this.state.questions.map((element, indexQuestion) => (\n      <div className=\"questionContainer\">\n        <div className=\"container\" key={indexQuestion}>\n          <MyForm\n            onQuestionChange={this.handleQuestionChange.bind(\n              this,\n              indexQuestion\n            )}\n            onTitleChange={this.handleTitleChange}\n            onExplanationChange={this.handleExplanationChange.bind(\n              this,\n              indexQuestion\n            )}\n            onAddExplanationClick={this.handleAddExplanationClick.bind(\n              this,\n              indexQuestion\n            )}\n            onRemoveExplanationClick={this.handleRemoveExplanationClick.bind(\n              this,\n              indexQuestion\n            )}\n            explanations={this.state.questions[indexQuestion].question_options}\n            delete={this.onClickDelQuestion.bind(this, indexQuestion)}\n          />\n          {/* <div className=\"delQuestion\">\n            <StyledButtonDelQuestion\n              variant = \"contained\" onClick = {this.onClickDelQuestion.bind(this, indexQuestion)}>Supprimer cette question\n            </StyledButtonDelQuestion>\n          </div> */}\n        </div>\n      </div>\n    ));\n  }\n\n  // Pourrait être utile plus tard donc je met de coté (deprecated)\n  // componentDidMount() {\n  //   UserService.getAdminBoard().then(\n  //     response => {\n  //       this.setState({\n  //         content: response.data\n  //       });\n  //     },\n  //     error => {\n  //       this.setState({\n  //         content:\n  //           (error.response &&\n  //             error.response.data &&\n  //             error.response.data.message) ||\n  //           error.message ||\n  //           error.toString()\n  //       });\n  //     }\n  //   );\n  // }\n\n  render() {\n    const title = this.state.title;\n    const currentUser = this.state.currentUser;\n    const allQuizzes = this.state.allQuizzes;\n    const displayQuizzes = this.state.displayQuizzes;\n    const displayCreate = this.state.displayCreate;\n    const displayQuiz = this.state.displayQuiz;\n    const currentQuiz = this.state.currentQuiz;\n\n    // redirect to post/SubmitForm\n    if (this.state.submitted === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: '/postSubmitForm',\n            state: { quizMdp: this.state.quizMdp },\n          }}\n        />\n      );\n    }\n\n    return (\n      <div className=\"mainTeacherForm\">\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={this.state.open}\n          autoHideDuration={6000}\n          onClose={() => this.handleClose()}\n        >\n          <Alert\n            onClose={() => this.handleClose()}\n            severity={this.state.successful ? 'success' : 'warning'}\n          >\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n\n        {this.state.confirmDialog.isOpen && (\n          <ConfirmDialogue\n            confirmDialog={this.state.confirmDialog}\n            setConfirmDialog={this.state.confirmDialog}\n          />\n        )}\n\n        {(displayQuizzes === false || displayQuizzes) && (\n          <div className=\"\">\n            {allQuizzes && displayQuizzes && (\n              <div>\n                <SnackbarContent\n                  style={{\n                    backgroundColor: 'white',\n                    position: 'sticky',\n                    top: '0',\n                    'z-index': '999',\n                  }}\n                  message=\"\"\n                  action={\n                    <button className=\"btnn\" onClick={this.createQuiz}>\n                      Créer un nouveau Quiz\n                    </button>\n                  }\n                />\n                <div>\n                  <div className=\"col-xs-12 col-sm-12 col-md-12\">\n                    <Title\n                      data={\n                        'Quizs Créé par : ' +\n                        currentUser.message.firstname +\n                        ' ' +\n                        currentUser.message.lastname\n                      }\n                    />\n                    <div className=\"row\">\n                      {allQuizzes &&\n                        allQuizzes.map((quiz, index) => (\n                          <div\n                            key={index}\n                            className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"\n                            onClick={() => this.getQuiz(quiz.quiz_id)}\n                          >\n                            <Card\n                              className=\"card\"\n                              elevation={1}\n                              style={{\n                                padding: '20px',\n                                'margin-bottom': '10px',\n                              }}\n                            >\n                              <CardHeader\n                                avatar={\n                                  <Avatar\n                                    style={{ backgroundColor: '#4257b2' }}\n                                  >\n                                    {quiz.quiz_id[0].toUpperCase()}\n                                  </Avatar>\n                                }\n                                title={quiz.quiz_id}\n                              />\n                              <CardContent>\n                                <Typography\n                                  variant=\"body2\"\n                                  color=\"textSecondary\"\n                                >\n                                  {quiz.quiz_id}\n                                </Typography>\n                              </CardContent>\n                            </Card>\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            {displayQuizzes === false && (\n              <div>\n                <h4>{'Quizs Créé par : '}</h4>\n                <h4>\n                  {' '}\n                  {currentUser.message.firstname +\n                    ' ' +\n                    currentUser.message.lastname}\n                </h4>\n                <div className={`quiz`} style={{ borderRadius: '10px' }}>\n                  <h4>Vous n'avez pas créé de quiz</h4>\n                </div>\n              </div>\n            )}\n            {/* <button className=\"btnn\" onClick={this.createQuiz}>Créer un nouveau Quiz</button> */}\n          </div>\n        )}\n\n        {(displayQuiz || this.state.edit) && currentQuiz && (\n          <div className=\"container-questions\">\n            <MenuOption options={this.state.menuOptions}></MenuOption>\n            <Tooltip title=\"Back to list\">\n              <IconButton\n                aria-label=\"back\"\n                style={{ color: '#4257b2' }}\n                onClick={this.backToQuizzes}\n              >\n                <ArrowBackIcon fontsize=\"large\" />\n              </IconButton>\n            </Tooltip>\n            {/* <button className=\"btnn\"  onClick={this.backToQuizzes}><ArrowBackIcon fontsize=\"large\"/></button>  */}\n\n            {/* <button className=\"btnn\"  onClick={this.deleteQuiz}><DeleteForeverIcon fontsize=\"large\"/></button>  */}\n            {/* <button className=\"btnn\"  onClick={this.editQuiz}>Edit Quiz</button> */}\n            <p>\n              {currentQuiz.quiz +\n                (this.state.toggle ? ' est ouvert' : ' est fermé')}\n              <Switch\n                checked={this.state.toggle}\n                onChange={this.handleToggle}\n                name=\"switch\"\n                inputProps={{ 'aria-label': 'test switch' }}\n                style={{ color: '#4257b2' }}\n                color=\"primary\"\n              />\n            </p>\n\n            {currentQuiz && this.state.edit && (\n              <div>\n                <Form id=\"myForm\">\n                  <div className=\"container\">\n                    <div className=\"form-group\">\n                      <center>\n                        <h5>{currentQuiz.quiz}</h5>\n                        <br />\n                      </center>\n\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"quiz_id\"\n                        id=\"quiz_id\"\n                        value={currentQuiz.quiz_id}\n                        readOnly\n                      />\n                      {currentQuiz.questions &&\n                        currentQuiz.questions.map((questions, indexx) => (\n                          <div key={questions.question_id}>\n                            <label htmlFor={'Q' + questions.question_id}>\n                              <strong>\n                                {'Question : ' + questions.question_id}\n                              </strong>\n                            </label>\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              name={'Q' + questions.question_id}\n                              id={'Q' + questions.question_id}\n                              value={questions.question_title}\n                              // onChange = {this.onChangeTitle}\n                              validations={[required]}\n                              autoComplete=\"off\"\n                            />\n\n                            {questions.question_options &&\n                              questions.question_options.map(\n                                (options, index) => (\n                                  <div>\n                                    <label\n                                      htmlFor={\n                                        'Q' +\n                                        questions.question_id +\n                                        'E' +\n                                        options.options_id\n                                      }\n                                    >\n                                      <strong>\n                                        {'Explanation : ' + options.options_id}\n                                      </strong>\n                                    </label>\n                                    <input\n                                      type=\"text\"\n                                      className=\"form-control\"\n                                      name={\n                                        'Q' +\n                                        questions.question_id +\n                                        'E' +\n                                        options.options_id\n                                      }\n                                      id={\n                                        'Q' +\n                                        questions.question_id +\n                                        'E' +\n                                        options.options_id\n                                      }\n                                      value={options.options_text}\n                                      // onChange = {this.onChangeTitle}\n                                      validations={[required]}\n                                      autoComplete=\"off\"\n                                    />\n                                  </div>\n                                )\n                              )}\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n                </Form>\n                <button\n                  className=\"btnn\"\n                  onClick={() =>\n                    this.setConfirmDialog(\n                      'update',\n                      'Do you want to Edit this Quiz?',\n                      'You can edit again',\n                      this.updateQuiz\n                    )\n                  }\n                >\n                  Update\n                </button>\n              </div>\n            )}\n\n            <div>\n              {currentQuiz && displayQuiz && (\n                <div>\n                  <center>\n                    <h4>{currentQuiz.quiz}</h4>\n                    <br />\n                  </center>\n                  {currentQuiz.questions &&\n                    currentQuiz.questions.map((questions, indexx) => (\n                      <div key={questions.question_id}>\n                        <p>\n                          <strong>\n                            {questions.question_id}\n                            {'. '}\n                            {questions.question_title}\n                          </strong>\n                        </p>\n\n                        <div>\n                          {questions.question_options &&\n                            questions.question_options.map((options, index) => (\n                              <div>\n                                <label>\n                                  <span>\n                                    {'  '}\n                                    {options.options_id}\n                                    {'. '}\n                                    {options.options_text}\n                                  </span>\n                                </label>\n                              </div>\n                            ))}\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        <div>\n          {displayCreate && (\n            <div>\n              <div\n                style={{\n                  width: '100%',\n                  display: 'inline-flex',\n                  'justify-content': 'center',\n                }}\n              >\n                <button id=\"backButton\" onClick={this.backToQuizzes}>\n                  <ArrowBackIcon fontsize=\"large\" />\n                </button>\n\n                <SnackbarContent\n                  style={{\n                    width: '100%',\n                    fontWeight: 'bold',\n                    fontSize: '1.2rem',\n                    color: '#4257b2',\n                    backgroundColor: 'white',\n                    position: 'sticky',\n                    top: '0',\n                    'z-index': '999',\n                  }}\n                  message=\"Création de nouvelles questions\"\n                  action={\n                    <button\n                      className=\"btnn\"\n                      variant=\"contained\"\n                      onClick={this.handleSubmit}\n                    >\n                      Valider\n                    </button>\n                  }\n                />\n              </div>\n              {/* <div className=\"container\">\n              <header className=\"jumbotron\">\n                <h3>Création de nouvelles questions</h3>\n              </header>\n            </div> */}\n\n              <Form>\n                <div className=\"container\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"form-title\">\n                      <strong>Titre du formulaire</strong>\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"form-title\"\n                      value={title}\n                      onChange={this.onChangeTitle}\n                      validations={[required]}\n                      autoComplete=\"off\"\n                    />\n                  </div>\n                </div>\n\n                {this.createQuestionUI()}\n\n                <div className=\"container\">\n                  <br></br>\n                  <SnackbarContent\n                    style={{ backgroundColor: 'white' }}\n                    message=\"\"\n                    action={\n                      <button\n                        className=\"btnn\"\n                        type=\"button\"\n                        onClick={this.onClickAddQuestion}\n                      >\n                        Ajouter une question\n                      </button>\n                    }\n                  />\n                  {/* <StyledButtonAddQuestion\n                    variant = \"contained\" onClick = {this.onClickAddQuestion}>Ajouter une question\n                </StyledButtonAddQuestion>\n                <br></br><br></br>\n                <StyledButtonSubmit\n                  variant = \"contained\" onClick = {this.handleSubmit}>Valider\n                </StyledButtonSubmit> */}\n                </div>\n              </Form>\n\n              {this.state.message && (\n                <div className=\"container\">\n                  <div className=\"itsanerror\">\n                    <h3>\n                      Une erreur est survenu lors de l'envoi du formulaire\n                    </h3>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nexport default class PostSubmitForm extends Component {\n    render(){\n        if(this.props.location.state === undefined){\n            return <Redirect to={{pathname:'/home'}}/>\n        }\n        return(\n            <div>\n                <div className=\"container\">\n                    <header className=\"jumbotron\">\n                        <div className=\"success\">\n                            <h3>Formulaire envoyé avec succès !</h3>\n                            <br></br>\n                            <h5>Voici le code du quizz à partager aux élèves :</h5>\n                            <p className=\"quizMdp\">{\" \" + this.props.location.state.quizMdp}</p>\n                        </div>\n                    </header>\n                </div>\n            </div>\n        );\n    }\n}","import { Bar, HorizontalBar } from 'react-chartjs-2';\n\n\nconst BarChart = ( props ) => {\n\n    const names = props.explanationArray;\n    const explanationLabels = props.explanationLabels;\n    const explanationValues = props.explanationValues;\n    const barData = props.barData;\n    \n\n    return (\n        <div>\n            {(barData === \"Bar\") ? (\n                        <Bar\n                        data={{\n                            labels: explanationLabels,\n                            datasets: [{\n                                data: explanationValues,\n                                backgroundColor: [\n                                    'rgba(255, 99, 132, 1)',\n                                    'rgba(54, 162, 235, 1)',\n                                    'rgba(255, 206, 86, 1)',\n                                    'rgba(75, 192, 192, 1)',\n                                    'rgba(153, 102, 255, 1)',\n                                    'rgba(255, 159, 64, 1)'\n                                ]\n                            }]\n                        }}\n                        options={{\n                            maintainAspectRatio: false,\n                            scales: {\n                                yAxes: [{\n                                    ticks: {\n                                        beginAtZero: true\n                                    }\n                                }]\n                            },\n                            legend: {\n                                display: false\n                            },\n                            tooltips: {\n                                callbacks: {\n                                    label: function(item, data){\n                                        return names[item.index];\n                                    },\n                                    title: function(item, data){\n                                        return;\n                                    }\n                                },\n                                displayColors: false\n                            }\n                        }}\n                    />\n            ): (\n                <HorizontalBar\n                data={{\n                    labels: explanationLabels,\n                    datasets: [{\n                        data: explanationValues,\n                        backgroundColor: [\n                            'rgba(255, 99, 132, 1)',\n                            'rgba(54, 162, 235, 1)',\n                            'rgba(255, 206, 86, 1)',\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(153, 102, 255, 1)',\n                            'rgba(255, 159, 64, 1)'\n                        ]\n                    }]\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }]\n                    },\n                    legend: {\n                        display: false\n                    },\n                    tooltips: {\n                        callbacks: {\n                            label: function(item, data){\n                                return names[item.index];\n                            },\n                            title: function(item, data){\n                                return;\n                            }\n                        },\n                        displayColors: false\n                    }\n                }}\n            />\n            )}\n    \n        </div>\n    );\n}\n \nexport default BarChart;","import { Doughnut, Pie } from 'react-chartjs-2';\n\n\nconst DoughnutChart = ({ labels, answerValues, pieData }) => {\n    return ( \n        <div>\n            {(pieData === \"Doughnut\") ? (\n                <Doughnut\n                    data={{\n                        labels: labels,\n                        datasets: [{\n                            data: answerValues,\n                            backgroundColor: [\n                                'rgba(255, 99, 132, 1)',\n                                'rgba(54, 162, 235, 1)',\n                                'rgba(255, 206, 86, 1)',\n                                'rgba(75, 192, 192, 1)',\n                            ]\n                        }]\n                    }}\n                    options={{\n                        maintainAspectRatio: false\n                    }}\n                />\n            ):(\n                <Pie\n                    data={{\n                        labels: labels,\n                        datasets: [{\n                            data: answerValues,\n                            backgroundColor: [\n                                'rgba(255, 99, 132, 1)',\n                                'rgba(54, 162, 235, 1)',\n                                'rgba(255, 206, 86, 1)',\n                                'rgba(75, 192, 192, 1)',\n                            ]\n                        }]\n                    }}\n                    options={{\n                        maintainAspectRatio: false\n                    }}\n                />\n            )}\n            \n        </div>\n     );\n}\n\nexport default DoughnutChart;","import {useState, useEffect} from 'react';\nimport Axios from 'axios';\n// import {FaTimes} from 'react-icons/fa'\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport SwapHorizRounded from '@material-ui/icons/SwapHorizRounded';import BarChart from './BarChart';\nimport { Container, List, ListItem, ListItemText} from '@material-ui/core';\nimport DoughnutChart from './DoughnutChart';\nimport BookOutlined from '@material-ui/icons/BookOutlined';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport NoteCard from \"./NoteCard\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport SearchService from \"../services/search.service\";\nimport { Avatar, Typography } from '@material-ui/core';\nimport {Title} from './Title';\n\n\n\nimport FlippyItems from './Flippy';\n\n\n\nconst AllAnswers = () => {\n    const [allAnswers, setallAnswers] = useState([]);\n    const [currentQuiz, setcurrentQuiz] = useState(null);\n    const [array, setarray] = useState(null);\n    const [answersArray, setanswersArray] = useState();\n    const [explanationsArray, setexplanationsArray] = useState()\n    const [currentStudent, setcurrentStudent] = useState(null)\n    const [explanationStats, setexplanationStats] = useState(null)\n    const [showSpinner, setShowSpinner] = useState(true);\n    const [allQuestions, setAllQuestions] = useState([]);\n    const [allExplanations, setAllExplanations] = useState([]);\n    const [pieData, setPieData] = useState(\"Doughnut\");\n    const [barData, setBarData] = useState(\"Bar\");\n    const [pieTitle, setPieTitle] = useState(\"Graphique en anneau\");\n    const [barTitle, setBarTitle] = useState(\"Diagramme à bandes\");\n    const [displayAllQuizzes, setdisplayAllQuizzes] = useState(true);\n    const [displayStudentList, setdisplayStudentList] = useState(false);\n    const [displayStats, setdisplayStats] = useState(false)\n    const [actualQuiz, setactualQuiz] = useState(null)\n\n\n    // FIND ALL ANSWERED QUESTIONS ON PAGE LOAD\n    useEffect(() => {\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllAnswered').then((response) => {\n          setallAnswers(response.data);\n          setShowSpinner(false);\n        })\n        .catch(function (error) {\n        });\n    }, []);\n\n    //ALTERNATE BETWEEN PIE AND DOUGHNUT CHART\n    const handlePieChartChange = () => {\n        if(pieData === \"Doughnut\"){\n            setPieData(\"Pie\")\n            setPieTitle(\"Diagramme circulaire\")\n        }\n        if(pieData === \"Pie\"){\n            setPieData(\"Doughnut\")\n            setPieTitle(\"Graphique en anneau\")\n        }\n    }\n    const handleBarChartChange = () => {\n        if(barData === \"Bar\"){\n            setBarData(\"Horizontal Bar\")\n            setBarTitle(\"Graphique à barres horizontales\")\n        }\n        if(barData === \"Horizontal Bar\"){\n            setBarData(\"Bar\")\n            setBarTitle(\"Diagramme à bandes\")\n        }\n    }\n\n    // SET SELECTED(CLICKED) QUIZ\n    const setActiveQuiz = (quiz, index, quiz_id) => {\n        setcurrentQuiz(quiz);\n        getStats(quiz_id);\n        setcurrentStudent(null);\n        setexplanationStats(null);\n        setarray(null);\n\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${quiz_id}`)\n        .then(response => {\n            setAllQuestions(response.data.questions);\n        })\n        .catch(err => {\n            // console.log(\"An error occurred\", err.response);\n        })\n\n\n        // GET ACTUAL QUESTIONS FROM DATABASE\n        SearchService.searchQuiz(\n            quiz.quiz_id,\n        ).then(\n            response => {\n            setactualQuiz(response.data);\n            })\n            .catch(\n            error => {\n            console.log(error.response);\n            const resMessage =\n                (error.response && error.response.data && error.response.data.message) \n                || error.message || error.toString();\n            }\n        );\n    }; \n\n    // RETRIEVE GROUPPED DATA FROM THE DATABASE BY SELECTED QUIZ ID \n    const getStats = (quiz_id) => {\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/groupStats/${quiz_id}`)\n        .then(response => {\n            if(response){\n            // SET GROUPPED ANSWERS \"FOR EACH STUDENT\" ARRAY\n            setanswersArray(response.data[0]._id.answer);\n            // SET GROUPPED EXPLANATIONS \"FOR EACH STUDENT\" ARRAY\n            setexplanationsArray(response.data[0]._id.explanation);\n            }\n        })\n        .catch()\n    }\n\n    // SET SELECTED(CLICKED) STUDENT ARRAY\n    const setActiveStudent = (student) => {\n        setcurrentStudent(student);\n    }\n\n    // HANDLE STUDENT LIST\n    const handleStudentList = () => {\n        setdisplayAllQuizzes(false)\n        setdisplayStudentList(true)\n        setdisplayStats(false)\n    }\n\n    // HANDLE BACK TO QUIZ LIST\n    const backToQuizzes = () => {\n        setdisplayAllQuizzes(true)\n        setdisplayStudentList(false)\n        setdisplayStats(false)\n        setcurrentQuiz(null)\n        setcurrentStudent(null);\n        setexplanationStats(null);\n        setarray(null);\n    }\n\n    // MERGE ALL ANSWERS BY QUESTION NUMBER AND SET COUNT AND STATS\n    const stats = () => {\n        // MERGE ALL ANSWERS INTO AN ARRAY (arrAns)\n        const arrayAns = answersArray[0].map(function(value, index) {\n            const mergeAllStudentsByIndex = [value];\n            if(value){\n                for(let i=1; i<answersArray.length; i++){\n                    mergeAllStudentsByIndex.push(answersArray[i][index])\n                }\n            }\n            return mergeAllStudentsByIndex;\n        });\n\n         // MERGE ALL EXPLANATIONS INTO AN ARRAY (arrExp)\n        const arrayExp = explanationsArray[0].map(function(explanation, index) {\n            const mergeAllExplanation = [explanation];\n            if(explanation){\n                for(let i =1; i< explanationsArray.length; i++){\n                    mergeAllExplanation.push(explanationsArray[i][index])\n                }\n            }\n\n            return mergeAllExplanation;\n        });\n        \n        // COUNT NUMBER OF OCCURRENCE OF AN ANSWER(\"Plutot Oui\", \"Non\"... etc) FOR EACH QUESTION\n        const countAnswers = arrayAns.map((answers, index) => {\n            let all = {\n                \"Oui\" : 0,\n                \"Plutot Oui\" : 0,\n                \"Plutot Non\" : 0,\n                \"Non\": 0,\n            };\n            for(const answer of answers){\n                all = {...all,  [answer] : answers.filter((a) => {return a === answer}).length}\n            }\n            return all;\n        })\n        // SET COUNT AS A STATE\n        setarray(countAnswers)\n\n        // GET EXPLANATIONS OF ALL QUESTIONS FOR THE CHART DISPLAY \n        const labelsArray = allQuestions.map((value, index) => {\n            const myArray = value.question_options.map((value, index) => {\n                return value.options_text;\n            })\n            return myArray\n        })\n\n        setAllExplanations(labelsArray);\n\n        // COUNT NUMBER OF OCCURRENCE OF AN EXPLANATION(\"a\", \"b\", \"c\"... etc) FOR EACH QUESTION\n        const countExplanations = arrayExp.map((array,index) => {\n            let all = {\n                a : 0,\n                b : 0,\n                c : 0,\n                d : 0,\n                e : 0\n            }\n            for(const letter of array){\n                all = {...all,  [letter] : array.filter((a) => {return a === letter}).length}\n            }\n\n            return all;\n        })\n        // SET COUNT AS A STATE\n        setexplanationStats(countExplanations);\n        setdisplayStats(true)\n        setdisplayStudentList(false)\n        setdisplayAllQuizzes(false)    \n    }\n\n    // RETRIEVE INTEGERS(VALUES) FOR EXPLANATIONS\n    const getExplanationValues = (explanation, keys) => {\n        let values = [];\n        keys.forEach(key => {\n            values.push(explanation[key])\n        })\n        return values;\n    }\n    // RETRIEVE INTEGERS(VALUES) FOR Y, MY, MN, N QUESTIONS\n    const getAnswerValues = (answer, keys) => {\n        let values = [];\n        keys.forEach(key => {\n            values.push(answer[key])\n        })\n        return values;\n    }\n\n    //RETRIEVE KEYS(LABELS) FOR CHART DATA\n    const getLabels = object => {\n        return Object.keys(object);\n    }\n\n    return (\n        <div className=\"container-questions\">\n            {showSpinner && <div class=\"spinner\">\n                <div></div>\n                <div></div>\n            </div>\n            }\n            {!showSpinner &&  displayAllQuizzes && (<div  style={{borderRadius: \"10px\"}}>\n                <div >      \n                    <div className=\"col-xs-12 col-sm-12 col-md-12\">\n                        <Title data=\"Liste de toutes les réponses\" />\n                    <div className=\"row\" >\n                        {allAnswers && allAnswers.map((quiz, index) => (\n                            <FlippyItems     \n                                frontSide={\n                                    <div key={index}  > \n                                        <Card \n                                        elevation={1} \n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}\n                                        onMouseOver={() => setActiveQuiz(quiz, index, quiz.quiz_id)}\n                                        >\n                                            <CardHeader\n                                                avatar={\n                                                    (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\n                                                        {quiz.quiz_id[0].toUpperCase()}\n                                                    </Avatar>)\n                                                }\n                                                title={quiz.quiz_id}\n                                                // subheader={note}\n                                            />\n                                            <CardContent>\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                                    {(quiz.quiz_title).substr(0,27) + \"...\"}\n                                                </Typography>\n                                            </CardContent>\n                                        </Card>\n\n                                </div> \n                                }\n                                backSide={\n                                    <div key={index}  > \n                                        <Card elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\n                                            <CardHeader\n                                                avatar={\n                                                    (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\n                                                        {quiz.quiz_id[0].toUpperCase()}\n                                                    </Avatar>)\n                                                }\n                                                title={(quiz.quiz_title)}\n                                            />\n                                            <CardContent>\n                                                <div style={{float:\"right\", color:\"#4257b2\"}}> \n                                                    <Tooltip title=\"Cliquez pour les statistiques\">\n                                                        <IconButton  onClick={stats} style={{float:\"right\", color:\"#4257b2\"}}>\n                                                            <EqualizerIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                    <Tooltip title=\"Liste des étudiants\">\n                                                        <IconButton  onClick={handleStudentList} style={{float:\"right\", color:\"#4257b2\"}}>\n                                                            <FormatListNumberedIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n\n                                                </div>\n                                            </CardContent>\n                                        </Card>\n                                </div> \n                                }\n                            />\n                        ))}\n                    </div>\n                    </div>\n                </div>\n            </div>)}\n\n            <div>\n                {currentQuiz && (displayStudentList || displayStats) ? (\n                    <div>\n                        <IconButton  onClick={()=>backToQuizzes()} style={{float:\"left\", color:\"#4257b2\"}}>\n                        <ArrowBackIcon />\n                        </IconButton>\n                        <center><Title data={'Vous avez sélectionné le quiz : '+ currentQuiz.quiz_id} /></center>\n                        \n                        { displayStudentList && <div >\n                            <h4>{'Liste des étudiants : '}</h4>\n                            {currentQuiz.quiz_answers && currentQuiz.quiz_answers.map((students, index) => (\n                                <div>\n                                    <h4 onClick={() => setActiveStudent(students)}>{students.student_id}</h4>\n                                </div>\n                            ))}\n                        </div>}\n\n                        <div>\n                            {currentStudent && (\n                                <div>\n                                    <h4>{'Affichage des réponses sur  : '}{currentStudent.student_id}</h4>\n                                    {currentStudent && currentStudent.student_answers.map((answers, index) => (\n                                        <div> \n                                            <h4>{answers.question_answer_id}{' .'}{answers.answer}</h4>\n                                            <h4>{'Explication : '}{answers.explanation}</h4>\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                        <div style={{marginBottom: \"20px\"}}>\n                        </div>\n                        <Container>\n                            {array && displayStats && (\n                                <div>\n                                    <Grid container spacing={3}>\n                                        {array && array.map((answer, index) => (\n                                            <Grid item sm={12} md={6} lg={4} >\n                                                <Card elevation={2}>\n                                                    <CardHeader\n                                                        action={\n                                                            <IconButton onClick={handlePieChartChange}>\n                                                                <SwapHorizRounded/>\n                                                            </IconButton>\n                                                        }\n                                                        title={\"\"}\n                                                        subheader={actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)} \n                                                    />\n                                                    <CardContent>\n                                                        <DoughnutChart\n                                                        pieData={pieData}\n                                                        labels={getLabels(answer)}\n                                                        answerValues={getAnswerValues(answer, getLabels(answer))} />\n                                                    </CardContent>\n                                                </Card>\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                                        \n                                ) }\n\n                            {explanationStats && (\n                                <div>\n                                        <Grid container spacing={3} >\n                                            {explanationStats && explanationStats.map((explanation, index) => (\n                                                <Grid item sm={12} md={6} lg={6}>\n                                                    <Card elevation={2}>\n                                                        <CardHeader\n                                                        action={\n                                                            <IconButton onClick={handleBarChartChange}>\n                                                                <SwapHorizRounded/>\n                                                            </IconButton>\n                                                        } \n                                                        title={\"\"}\n                                                        subheader={actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)}\n                                                        />\n                                                        <CardContent>\n                                                            <BarChart\n                                                                barData={barData} \n                                                                explanationArray={allExplanations[index]}\n                                                                explanationLabels={getLabels(explanation)}\n                                                                explanationValues={getExplanationValues(explanation, getLabels(explanation))} \n                                                            />\n                                                        </CardContent>\n                                                    </Card>\n                                                </Grid>\n                                            ))}\n                                        </Grid>\n                                </div>         \n                                )}\n                        </Container>    \n                    </div>\n                ) : (<Title data=\"Veuillez sélectionner un quiz pour afficher les réponses\" noUnderline={true} subHeader={true} />)}\n            </div>   \n        </div>\n    )\n}\n\nexport default AllAnswers;","import {useState, useEffect} from 'react';\nimport Axios from 'axios';\n// import {FaTimes} from 'react-icons/fa'\nimport { List, ListItem, ListItemText, Button, ListItemIcon } from '@material-ui/core';\nimport BookOutlined from '@material-ui/icons/BookOutlined';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Avatar, Typography } from '@material-ui/core';\n\nimport FlippyItems from './Flippy';\n\n\nimport NoteCard from \"./NoteCard\";\nimport Flippy from 'react-flippy/dist/Flippy';\nimport {Title} from './Title';\n\n\nconst AllQuestions = () => {\n    const [allQuizzes, setallQuizzes] = useState([]);\n    const [currentQuiz, setcurrentQuiz] = useState(null);\n    const [radioOptions, setradioOptions] = useState({});\n    const [checkedItems, setCheckedItems] = useState([]); \n    const [displayQuiz, setdisplayQuiz] = useState(false);\n    const [displayQuizzes, setdisplayQuizzes] = useState(true)\n\n    // const [currentUser] = useState(AuthService.getCurrentUser());\n    const [showSpinner, setShowSpinner] = useState(true);\n\n    // LOAD ALL QUIZZES FROM DATABASE ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\n    useEffect(() => {\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllQ').then((response) => {\n          setallQuizzes(response.data) \n          setShowSpinner(false);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n    }, []);\n\n    // SET SELECTED(CLICKED) QUIZ\n    const setActiveQuiz = (quiz, index) => {\n        setcurrentQuiz(quiz);\n        setdisplayQuizzes(false);\n        setdisplayQuiz(true);\n    };\n\n    const backToQuizzes = () => {\n        setdisplayQuizzes(true);\n        setdisplayQuiz(false);\n    }\n\n    // RETURN CHECKED VALUE(true or false)\n    const checkRadioButton = (question_id, label) => {\n        if (!radioOptions[question_id]) {\n            return false;\n        }\n        return radioOptions[question_id] === label;\n    }\n\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\n    const setradio = (id , answer) => {\n        let checkedArray = checkedItems.map(x => {return {...x}})\n        const find_question = checkedArray.find(a => a.question_answer_id === id);\n        if(find_question) {\n            checkedArray.find(a => a.question_answer_id === id).answer = answer;\n            setradioOptions((state) => {\n                return {\n                    ...state,\n                    [id] : answer\n                }\n            });\n            setCheckedItems(checkedArray);\n        }\n        else{\n        setradioOptions((state) => {\n            return {\n                ...state,\n                [id] : answer\n            }\n        });\n\n        setCheckedItems([\n            ...checkedItems,\n             {\n                question_answer_id : id,\n                answer: answer,\n                explanation: 'no explanation'\n            }\n        ]);}\n    }\n\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\n        let checkedArray = checkedItems.map(x => {return {...x}})\n        const find_question = checkedArray.find(a => a.question_answer_id === question_id);\n        if(find_question) {\n            checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\n            setCheckedItems(checkedArray);\n        }\n        \n    }\n\n    // SUBMIT ANSWERS TO THE BACKEND  // DISABLED BECAUSE ADMIN MUST NOT SUBMIT\n    // const submitAnswers = () =>{\n    //     setmessage('');\n    //     setsuccessful(false);\n    //     const answers = {\n    //         quiz_id : currentQuiz.quiz_id,\n    //         quiz_title : currentQuiz.quiz,\n    //         quiz_answers : {\n    //             student_id : currentUser.message.email,\n    //             student_answers : checkedItems\n    //         }\n    //     }\n    //     Axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\n    //         answers\n    //       }).then((res) => {\n    //             if(res){\n    //                 //   window.location.reload(false);\n    //                 setmessage('You submitted Quiz as Admin or Teacher... Please Delete from the answers page else Stats will be affected');\n    //                 setsuccessful(true);\n    //                 setCheckedItems([]);\n    //                 setradioOptions({});\n\n    //             }\n    //       }).catch(error => {\n    //             const errMessage =\n    //             (error.response.data.message[0].password || (error.response &&\n    //               error.response.data &&\n    //               error.response.data.message)) ||\n    //             error.message ||\n    //             error.toString();\n    //             console.log(errMessage);\n    //           setmessage(errMessage);\n    //             setsuccessful(false);            \n    //       });\n\n\n    // }\n\n\n    return (\n        <div >\n            {/* html for spinner */}\n            {showSpinner && <div class=\"spinner\">\n                <div></div>\n                <div></div>\n            </div>\n            }\n            {!showSpinner && displayQuizzes && (<div  style={{borderRadius: \"10px\", marginTop: \"10px\"}}>\n                    <div >      \n                      <div className=\"col-xs-12 col-sm-12 col-md-12\">\n                          <Title data='Liste de quiz' />\n                        <div className=\"row\" >\n                            {displayQuizzes && allQuizzes && allQuizzes.map((quiz, index) => (\n                                <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\" onClick= {() => setActiveQuiz(quiz, index)} style={{paddingTop: \"10px\"}}> \n                                    <FlippyItems\n                                    frontSide={\n                                        <Card \n                                        elevation={1} \n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\n                                            <CardHeader\n                                                  avatar={\n                                                      (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\n                                                          {quiz.quiz_id[0].toUpperCase()}\n                                                      </Avatar>)\n                                              }\n        \n                                                  title={quiz.quiz_id}\n                                            />\n                                            <CardContent>\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                                    {(quiz.quiz).substr(0,27) + \"...\"}\n                                                </Typography>\n                                            </CardContent>\n                                        </Card> \n                                    }\n                                    backSide={\n                                        <Card \n                                        elevation={1} \n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\n                                            <CardHeader\n                                                  avatar={\n                                                      (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\n                                                          {quiz.quiz_id[0].toUpperCase()}\n                                                      </Avatar>)\n                                              }\n        \n                                                  title={quiz.quiz_id}\n                                            />\n                                            <CardContent>\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                                    {(quiz.quiz).substr(0,27) + \"...\"}\n                                                </Typography>\n                                            </CardContent>\n                                        </Card> \n                                    }\n                                    />\n\n                                </div> \n                            ))}\n                        </div>\n                      </div>\n                    </div>\n\n            </div>)}\n\n            <div>\n                {(displayQuiz && currentQuiz ) && (\n                    <div className=\"container-questions\">\n                        <Button onClick={()=> backToQuizzes()}><ArrowBackIcon fontsize=\"large\" style={{color: \"#4257b2\"}}/></Button> \n                        <center><h4>{currentQuiz.quiz}</h4><br/></center>\n                        {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\n                            <div key={questions.question_id}>\n                                <p><strong>{questions.question_id}{'. '}{questions.question_title}</strong></p>    \n                                <div>\n                                    <input \n                                        type=\"radio\" \n                                        value=\"Oui\" \n                                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \n                                    /> Oui\n                                    <input \n                                        type=\"radio\" \n                                        value=\"Plutot Oui\"  \n                                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \n                                    /> Plutot Oui\n                                    <input \n                                        type=\"radio\" \n                                        value=\"Plutot Non\"  \n                                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\n                                    /> Plutot Non\n                                    <input \n                                        type=\"radio\" \n                                        value=\"Non\" \n                                        checked={checkRadioButton(questions.question_id, \"Non\")}  \n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\n                                    /> Non\n                                </div>\n                                {radioOptions[questions.question_id] === \"Plutot Non\"\n                                || radioOptions[questions.question_id] === \"Plutot Oui\"\n                                || radioOptions[questions.question_id] === \"Non\" ? (\n                                    <div>\n                                        {questions.question_options && questions.question_options.map((options, index) => ( \n                                            <div>\n                                                <label>\n                                                    <input type=\"checkbox\" value={options.options_id} \n                                                    checked={checkedItems[options.option_text]}  \n                                                    onChange={(e) => \n                                                        setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\n                                                    }\n                                                    />\n                                                    <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\n                                                </label>\n                                            </div>\n                                        ))}\n                                    </div>\n                                ) : (<span>Aucune explication requise</span>)}\n                            </div>\n                        ))}\n                    </div>\n                ) }\n            </div>\n\n        </div>\n    )\n}\n\nexport default AllQuestions\n","import React, { Component } from 'react';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport CheckButton from 'react-validation/build/button';\nimport { isEmail } from 'validator';\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthService from '../services/auth.service';\nimport FormCard from './formCard';\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Ce champ est obligatoire !\n      </div>\n    );\n  }\n};\n\nconst email = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Adresse email non valide.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 50) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\n      </div>\n    );\n  }\n};\n\nexport default class AdminRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\n    this.onChangeLastname = this.onChangeLastname.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\n\n    this.state = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      admin: false,\n      teacher: false,\n      roles: [],\n      successful: false,\n      message: '',\n      noRoleError: false,\n      mdpTmp: '',\n    };\n  }\n\n  onChangeFirstname(e) {\n    this.setState({\n      firstname: e.target.value,\n    });\n  }\n  onChangeLastname(e) {\n    this.setState({\n      lastname: e.target.value,\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangeCheckbox(e) {\n    let target = e.target;\n    let value = target.checked;\n    let name = target.name;\n    this.setState({\n      [name]: value,\n      noRoleError: false,\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: '',\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    if (!this.state.admin && !this.state.teacher) {\n      return this.setState({\n        noRoleError: true,\n      });\n    } else {\n      let roles = this.state.roles;\n      if (this.state.admin) {\n        roles.push('ROLE_ADMIN');\n      }\n      if (this.state.teacher) {\n        roles.push('ROLE_TEACHER');\n      }\n      this.setState({\n        roles,\n      });\n    }\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.adminRegister(\n        this.state.firstname,\n        this.state.lastname,\n        this.state.email,\n        this.state.roles\n      ).then(\n        (response) => {\n          this.setState({\n            message: 'Compte créé avec succès',\n            successful: true,\n            mdpTmp: response.data.mdpTmp,\n          });\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage,\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <FormCard\n          content={\n            <div\n              className=\"formCardContent\"\n              style={{\n                padding: '35px',\n                paddingTop: '70px',\n                paddingBottom: '60px',\n              }}\n            >\n              <Form\n                onSubmit={this.handleRegister}\n                ref={(c) => {\n                  this.form = c;\n                }}\n              >\n                {!this.state.successful && (\n                  <div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"username\">Prenom</label>\n                      <Input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"username\"\n                        value={this.state.firstname}\n                        onChange={this.onChangeFirstname}\n                        required\n                        validations={[required, vusername]}\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"username\">Nom</label>\n                      <Input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"username\"\n                        value={this.state.lastname}\n                        onChange={this.onChangeLastname}\n                        required\n                        validations={[required, vusername]}\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"email\">Email</label>\n                      <Input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={this.onChangeEmail}\n                        required\n                        validations={[required, email]}\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <div className=\"form-check\">\n                        <Input\n                          type=\"checkbox\"\n                          className=\"form-check-input\"\n                          name=\"teacher\"\n                          checked={this.state.teacher}\n                          onChange={this.onChangeCheckbox}\n                        />\n                        <label className=\"form-check-label\">Professeur</label>\n                      </div>\n                      <div className=\"form-check\">\n                        <Input\n                          type=\"checkbox\"\n                          className=\"form-check-input\"\n                          name=\"admin\"\n                          checked={this.state.admin}\n                          onChange={this.onChangeCheckbox}\n                        />\n                        <label className=\"form-check-label\">\n                          Administrateur\n                        </label>\n                      </div>\n\n                      {this.state.noRoleError && (\n                        <div className=\"container\">\n                          <div className=\"itsanerror\">\n                            Vous devez sélectionner au moins un rôle\n                          </div>\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"form-group\">\n                      <button className=\"btnn\">Créer le compte</button>\n                    </div>\n                  </div>\n                )}\n\n                {this.state.message && (\n                  <div className=\"form-group\">\n                    <div\n                      className={\n                        this.state.successful\n                          ? 'alert alert-success'\n                          : 'alert alert-danger'\n                      }\n                      role=\"alert\"\n                    >\n                      {this.state.message}\n\n                      {this.state.mdpTmp && (\n                        <div>\n                          <br></br>\n                          <br></br>\n                          Votre mot de passe temporaire est :\n                          {' ' + this.state.mdpTmp}\n                          <br></br>\n                          <br></br>\n                          Vous pourrez le modifier en vous connectant à votre\n                          profil\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n                <CheckButton\n                  style={{ display: 'none' }}\n                  ref={(c) => {\n                    this.checkBtn = c;\n                  }}\n                />\n              </Form>\n            </div>\n          }\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\n\nconst ProtectedRoute =({ component: Component, role, ...rest })=> {\n        const currentUser = AuthService.getCurrentUser()\n        let isAuthenticated = '';\n        let isAuthorized = false;\n\n        if(currentUser){\n            isAuthenticated = currentUser.token;\n\n            role.map(roles => {\n                if(currentUser.message.roles.includes(roles)){\n                    isAuthorized = true;\n                } \n                return isAuthorized\n            });\n        }\n\n        return (isAuthenticated && (isAuthorized))? (\n            <Component />\n        ) : (\n            <div>\n            <Redirect to={{ pathname: '/home' }} />\n            </div>\n        );\n}\n\nexport default ProtectedRoute;","import React from 'react';\nimport '../paginate.css';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\nimport { List, ListItem, ListItemText, ListItemAvatar, Avatar, Button, IconButton } from '@material-ui/core';\nimport { useState } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nexport const Paginate = ({allStudents, getAllQuizzes, allQuizzes, displayQuizzes, setActiveQuiz, evolution}) => {\n    const [start, setStart] = useState(0)\n    const [end, setEnd] = useState(10)\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n\n    const prevStudent = () => {\n        setStart((old) => {\n            let newStart = old - 10\n            if(newStart < 0){\n                return allStudents.length - 10\n            }\n            else{\n                return newStart\n            }\n        })\n        setEnd((old) => {\n            let newEnd = old - 10\n            if((start - 10) < 0){\n                return allStudents.length\n            }\n            else{\n                return newEnd\n            }\n        })\n    }\n    const nextStudent = () => {\n        setStart((old) => {\n            let newStart = old + 10\n            if(newStart >= allStudents.length){\n                return 0\n            }\n            else{\n                return newStart\n            }\n        })\n        setEnd((old) => {\n            let newEnd = old + 10\n            if((start + 10) >= allStudents.length) {\n                return 10\n            }\n            else{\n                return newEnd\n            }\n        })\n    }\n\n\n    return (\n        // {(allQuizzes && displayQuizzes) &00p0& (\n        //     <div >\n        //         <h4>{'Questionnaires auxquels ont répondu : '}</h4>\n        //         <h4> {currentStudent}</h4>\n        //         <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n        //             <List>\n        //             {allQuizzes && allQuizzes.map((quiz, index) => (\n        //                 <ListItem button onClick= {() => setActiveQuiz(quiz, index)}>\n        //                     <ListItemIcon>\n        //                         <BookOutlined />\n        //                     </ListItemIcon>\n        //                     <ListItemText primary={\n        //                         <h4>\n        //                         {quiz.quiz_id} \n        //                         </h4>\n        //                     }/>\n        //                 </ListItem>\n        //             ))}\n        //             </List>\n        //         </div>\n        //     </div>\n        // ) }\n        \n\n        <div>\n            {allStudents && allStudents.slice(start, end).map((student, index) => (\n                <Accordion expanded={expanded === `panel${index + 0}`} onChange={handleChange(`panel${index + 0}`)} onClick={()=> getAllQuizzes(student.email,student.firstname +' ' +student.lastname )}>\n                    <AccordionSummary\n                        aria-controls=\"panel2a-content\"\n                        id=\"panel2a-header\"\n                        expandIcon={<ExpandMore style={{color: \"#4257b2\"}} />}\n                    >\n                        <Avatar style={{fontSize: \"0.8rem\", backgroundColor: \"#4257b2\"}}>\n                            {(student.firstname[0] +' ' + student.lastname[0]).toUpperCase()}\n                        </Avatar>\n                        <Typography  style={{marginLeft: \"15px\"}} variant=\"h6\">{student.firstname +' ' +student.lastname}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        {(allQuizzes && displayQuizzes) && (\n                            <div style={{display: \"flex\"}}>\n                                {allQuizzes && allQuizzes.map((quiz, index) => (\n                                    <Tooltip title=\"show evolution\">\n                                        <Chip  style={{color:\"#fff\", marginLeft: \"5px\", backgroundColor: \"hsl(205, 78%, 60%)\"}} label={quiz.quiz_id} onMouseOver= {() => setActiveQuiz(quiz, index)} onClick={()=> evolution()}/>\n                                    </Tooltip>\n                                ))}\n                            </div>\n                        )}\n                        {(displayQuizzes === false) && (\n                            <Typography>Cet étudiant n'a répondu à aucun quiz</Typography>\n                        )}\n                    </AccordionDetails>\n                </Accordion>\n                // <ListItem key={student.email} button onClick={() => getAllQuizzes(student.email,student.firstname +' ' +student.lastname)}>\n                //     <ListItemAvatar>\n                //         \n                //     </ListItemAvatar>\n                //     <ListItemText primary={<h4>{student.firstname +' ' +student.lastname}</h4>}/>\n                // </ListItem>\n            ))}\n            <div className=\"button-container\">\n                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\"}} startIcon={ <FaChevronLeft />} className=\"prev-btn\" onClick={prevStudent}>\n                    Précédent\n                </Button>\n                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\"}} endIcon={<FaChevronRight />} className=\"next-btn\" onClick={nextStudent}>\n                    Suivant\n                </Button>\n            </div>\n        </div>\n    )\n}","import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { Avatar, Card, CardContent, CardHeader, Grid, IconButton, List, ListItem, ListItemAvatar, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\nimport BookOutlined from '@material-ui/icons/BookOutlined';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport LineChart from './LineChart';\nimport LineLabels from './LineLabels';\nimport SearchService from \"../services/search.service\";\nimport {Paginate} from './Paginate';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\n\n\n\nconst AllStudents = () => {\n    const [allStudents, setallStudents] = useState([]);\n    const [allQuizzes, setallQuizzes] = useState(null)\n    // const [message, setmessage] = useState('');\n    const [errorMessage, seterrorMessage] = useState('')\n    // const [successful, setsuccessful] = useState(false);\n    const [displayQuizzes, setdisplayQuizzes] = useState(null);\n    const [displayActiveQuiz, setdisplayActiveQuiz] = useState(false)\n    const [displayEvolution, setdisplayEvolution] = useState(false);\n    const [displayMain, setdisplayMain] = useState(true);\n    const [currentStudent, setcurrentStudent] = useState(null);\n    const [currentQuiz, setcurrentQuiz] = useState(null);\n    const [showSpinner, setShowSpinner] = useState(true);\n    const [lineArray, setLineArray] = useState([]);\n    const [displayLineChart, setDisplayLineChart] = useState(false);\n    const [actualQuiz, setactualQuiz] = useState([]);\n\n    useEffect(() => {\n        axios.get( \"https://neuroeducation-feedback.herokuapp.com/api/findAllStudents\")\n        .then(res => {\n            setallStudents(res.data);\n            setShowSpinner(false);\n        })\n        .catch(error => {\n            const resMessage =\n            (error.response && error.response.data && error.response.data.message) \n            || error.message || error.toString();\n  \n            seterrorMessage(resMessage);\n        });\n\n    }, [])\n\n    const getAllQuizzes = (student_id, name) => {\n        setcurrentQuiz(null);\n        setallQuizzes([]);\n        setdisplayQuizzes(null) \n        axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\n            if((response.data.quizzes).length ){\n                setallQuizzes(response.data.quizzes)\n                setdisplayQuizzes(true); \n            }\n            else{\n                setallQuizzes(null)\n                setdisplayQuizzes(false)  \n            }\n            setActiveStudent(name);\n          })\n          .catch(function (err) {\n              seterrorMessage(err.response.data.message|| err.response.data.message[0].error);\n          });\n    }\n\n\n\n\n\n      // SET SELECTED(CLICKED) QUIZ\n    const setActiveQuiz = (quiz, index) => {\n        setdisplayActiveQuiz(true);\n        setcurrentQuiz(quiz);\n        let tempLineArray = [];\n        quiz.quiz_answers.forEach((quiz, index) => {\n            tempLineArray.push(getAllAns(quiz))\n        })\n        setLineArray(tempLineArray)\n\n        // GET ACTUAL QUESTIONS FROM DATABASE\n        SearchService.searchQuiz(\n            quiz.quiz_id,\n        ).then(\n            response => {\n            setactualQuiz(response.data);\n            })\n            .catch(\n            error => {\n            //   console.log(error.response);\n            const resMessage =\n                (error.response && error.response.data && error.response.data.message) \n                || error.message || error.toString();\n\n\n            }\n        );\n  };\n\n    const setActiveStudent = (name) => {\n        setcurrentStudent(name);\n    };\n\n    const backToAllQuizzes = () => {\n        setdisplayQuizzes(true);\n        setdisplayActiveQuiz(false);\n    }\n\n    const evolution = () => {\n        if(displayMain===true && displayEvolution===false){\n            setdisplayMain(false); \n            setdisplayEvolution(true);\n            setDisplayLineChart(true);\n        } \n        else if(displayMain===false && displayEvolution===true){\n            setdisplayMain(true); \n            setdisplayEvolution(false);\n            setDisplayLineChart(false);\n        } \n\n\n    }\n\n    // CREATE ARRAY CONTAINING ANSWERS OF EACH ATTEMPT\n    const getAllAns = quiz => {\n        let array = []\n        quiz.student_answers.forEach(answers=> {\n            switch(answers.answer){\n                case \"Non\":\n                    array.push(1)\n                    break\n                case \"Plutot Non\":\n                    array.push(2)\n                    break\n                case \"Plutot Oui\":\n                    array.push(3)\n                    break\n                default:\n                    array.push(4)\n                    break\n            }\n        })\n        return array\n    }\n\n    //GENERATE DATA VALUES FOR LINE CHART \n    const getLineData = (groupArray, index) => {\n        let dataArray = []\n        groupArray.forEach((item) => {\n            dataArray.push(item[index])\n        })\n        return dataArray\n    }\n\n \n \n\n    return (\n    \n        <div className=\"container-questions\">\n            {errorMessage ? (\n                <div className=\"form-group\">\n                    <div\n                    className={ \"alert alert-danger\"}\n                    role=\"alert\"\n                    >\n                    {errorMessage}\n                    </div>\n                </div>\n            ):(\n                <div>\n                    {displayMain  && <div className=\"row\">\n                        <div className=\"col-xs-12 col-sm-12 col-md-12\">\n                            <Typography\n                                style={{textAlign: \"center\", color:\"#4257b2\"}}\n                                variant=\"h5\"\n                            >\n                                {'Liste des étudiants '}\n                                <div className=\"underline\"></div>\n                            </Typography>\n                           \n                            {showSpinner && (<div class=\"spinner\">\n                                <div></div>\n                                <div></div>\n                            </div>)}\n                            {!showSpinner && (<div  class=\"quiz\" style={{borderRadius: \"10px\"}}>\n                                    <Paginate \n                                        allStudents={allStudents}\n                                        getAllQuizzes={getAllQuizzes}\n                                        allQuizzes={allQuizzes}\n                                        displayQuizzes={displayQuizzes}\n                                        setActiveQuiz={setActiveQuiz}\n                                        evolution={evolution}\n                                    />\n                                </div>)}\n\n                        </div>            \n                    </div>\n                    }\n                    <div>                        \n                        {displayLineChart && (\n                            <div>\n                             <IconButton  onClick={()=>evolution()} style={{float:\"left\", color:\"#4257b2\"}}>\n                                <ArrowBackIcon />\n                            </IconButton>\n                            <Grid container spacing={3}>\n                                {(lineArray.length && displayLineChart) && lineArray[0].map((attempt, index) => (\n                                    <Grid item md={6} sm={12} lg={4} >\n                                        <Card elevation={2}>\n                                            <CardHeader\n                                                title={<Typography style={{fontSize: \"1rem\"}} color=\"textSecondary\" variant=\"h6\" component=\"p\">{actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)}</Typography>}\n                                                subheader={<div style={{fontSize: \"0.8rem\"}}>Oui-4 Plutot Oui-3 Plutot Non-2 Non-1</div>}\n                                            />\n                                            <CardContent>\n                                                <LineChart labels={LineLabels(lineArray.length)} data={getLineData(lineArray, index)} />\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                            </div>\n                           \n                        )}\n                    </div>    \n                </div>)}\n        </div>\n    )\n}\n\nexport default AllStudents\n","import {useState, useEffect} from 'react'\nimport AuthService from \"../services/auth.service\";\nimport FormCard from './formCard'\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { useHistory } from \"react-router\";\n\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\nconst VerifyAccount = ({match: { params }} ) => {\n    const [message, setmessage] = useState('');\n    const [successful, setsuccessful] = useState(false);\n    const history = useHistory();\n\n\n\n    useEffect(() => {\n        AuthService.verifyAccount(params.token)\n        .then(response=>{\n            setmessage(response.data.message);\n            setsuccessful(true);\n        })\n        .catch(error=>{\n            console.log(error)\n            setmessage(error.response.data.message|| error.response.data);\n            setsuccessful(false);\n        })\n    }, [params.token])\n\n\n    return (\n        <div>\n            {message && (\n              <div className=\"form-group\">\n                <FormCard\n                content={\n                  <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"50px\", paddingBottom:\"60px\", clear: \"both\" }}>\n                      <p>{message}</p>\n                      <button\n                    onClick={() =>  history.push({\n                      pathname: \"/login\",\n                    })} \n                    className=\"btnn\" style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\",\"font-size\" : \"12px\", width: \"44%\"}}\n                    >\n                      SE CONNECTER\n                      </button> \n                  </div>\n                }/>\n              </div>\n            )}\n        </div>\n    )\n}\n\nexport default VerifyAccount\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 140,\n    },\n  });\n\nconst AdminDashboard = () => {\n    let history = useHistory(); \n    const classes = useStyles();\n\n\n    const routeChange = (path, item) =>{\n    let newPath = path;\n    if(item===\"DATABASE\"){\n        return window.location.href = newPath;\n    }\n    history.push(newPath);\n  }\n\n  const childRoute = route =>{\n    if(route===\"USER\"){\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/User'\n    }\n    else if(route===\"QUIZZES\"){\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/Quiz'\n    }\n    else if(route===\"HISTORY\"){\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/history'\n    }\n  }\n\n  const dashboardArray = [\n      {\n        title: \"AJOUTER UN COMPTE\",\n        path: '/adminRegister',\n        children: [],\n        message: \"Ajouter un nouvel administrateur ou enseignant dans la base de données.\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <SupervisorAccountIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n    },\n\n    {\n        title: \"TOUS LES QUIZZ\",\n        path: '/questions',\n        children: [],\n        message: \"Une liste de tous les quiz de la base de données. Visualisez-les tous en quelques clics\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <AssignmentIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n    },    \n    {\n        title: \"PAGE RÉPONSES\",\n        path: '/answers',\n        children: [],\n        message: \"Un historique de toutes les réponses des élèves dans la base de données. Tout visualiser en quelques clics\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <RecentActorsIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n    },\n    {\n        title: \"EVOLUTION\",\n        path: '/students',\n        children: [],\n        message: \"En tant qu'administrateur ou enseignant, vous pouvez visualiser les progrès de tous les élèves en quelques clics.\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <TrackChangesIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n    },\n    // {\n    //     title: \"DASHBOARD\",\n    //     path: '/dashboard',\n    //     children: [],\n    //     message: \"A link to the admin dashboard where you can see everything\",\n    //     actions : {\n    //         one: \"Share\",\n    //         two: \"Learn More\"\n    //     },\n    //     icon: <DashboardIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n    // },\n    {\n        title: \"BASE DE DONNEES\",\n        path: 'https://neuroeducation-feedback.herokuapp.com/admin/',\n        children: ['USER', 'QUIZZES', 'HISTORY'],\n        message: \"Il s'agit d'une page spéciale pour l'administrateur. Pour la gestion de la base de données.\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <StorageIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n    },\n  ]\n\n  return (\n    <>\n        <div className=\"col-xs-12 col-sm-12 col-md-12\" style={{paddingTop: \"60px\"}}>\n            <div className=\"row\">\n                {dashboardArray && dashboardArray.map(item => (\n                    <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"> \n                        <Card className={classes.root} style={{height:235, padding: \"20px\", \"margin-bottom\": \"10px\"}}>\n                            <CardActionArea>\n                                <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" >\n                                    <Typography variant=\"h6\" style={{color:\"#4257b2\"}}>{item.title} <div className=\"underlinee\"></div></Typography>\n                                    {item.icon}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                {item.message}\n                                </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions >\n                                {item.title=== ( \"BASE DE DONNEES\") ? (\"\") : \n                                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\"}} onClick={()=>routeChange(item.path, item.title)}>\n                                GO TO\n                                </Button>\n                                }\n\n                                {item.children && item.children.map(child=> (\n                                    <Button \n                                    size=\"small\" \n                                    style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\", width: \"45%\"}} \n                                    onClick={()=>childRoute(child)}>\n                                        {child}\n                                    </Button>\n                                 ))\n                                }\n                            </CardActions>\n                        </Card>\n                    </div>\n                ))\n   }\n            </div>\n        </div>\n    </>\n  );\n};\n\nexport default AdminDashboard;\n","import React from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\n// import HomeIcon from '@material-ui/icons/Home';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function TemporaryDrawer(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n      // style={{background:\"#e6e6d5\"}}\n    >\n\n    <List style={{\"paddingTop\": \"30px\", background: \"#4257b2\"}}>\n        <ListItem button key={\"home\"} style={{color: 'white'}}>\n            <ListItemIcon> <MenuIcon style={{color: 'white'}}fontsize=\"large\"/></ListItemIcon>\n            <ListItemText primary={\"MENU\"} />   \n          </ListItem>\n \n      </List>\n      <List >\n        {props.lists && (props.lists).map((text, index) => (\n         <Link to={text.link} style={{color: '#4257b2', textDecoration: 'none'}}>   \n          <ListItem button key={text.title}>\n            <ListItemIcon>{text.icon}</ListItemIcon>\n            <ListItemText primary={text.title} />   \n          </ListItem>\n         </Link> \n        ))}\n      </List>\n      {/* <Divider /> */}\n      <List style={{position: \"absolute\",bottom: 0}}>\n        {props.actions.map((text, index) => (\n         <Link to={text.link} onClick={text.onclick} style={{color: '#4257b2', textDecoration: 'none'}}>   \n            <ListItem button key={text.title}>\n                <ListItemIcon>{text.icon}</ListItemIcon>\n                <ListItemText primary={text.title} />   \n            </ListItem>\n        </Link>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div >\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)}><MenuIcon style={{color:\"white\",  float:\"left\"}} fontSize=\"large\"></MenuIcon></Button>\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)} style={{background:\"#e6e6d5\"}}>\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Component } from 'react';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport AuthService from './services/auth.service';\n\nimport Login from './components/login.component';\nimport Register from './components/register.component';\nimport Home from './components/home.component';\nimport Home2 from './components/home2.component';\nimport Profile from './components/profile.component';\nimport BoardUser from './components/board-user.component';\nimport BoardAdmin from './components/board-admin.component';\nimport PostSubmitForm from './components/postSubmitForm.component';\nimport AllAnswers from './components/all-answers.component';\nimport AllQuestions from './components/allquestions.component';\nimport AdminRegister from './components/admin-register.component';\nimport { Button } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport ProtectedRoute from './components/protected-routes.component';\nimport AllStudents from './components/all-students.component';\nimport VerifyAccount from './components/verify-account.component';\nimport AdminDashboard from './components/Admin/admin-dashboard';\nimport TemporaryDrawer from './components/navbar';\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#DCDCDC',\n    },\n  },\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showAdminBoard: false,\n      showTeacherBoard: false,\n      currentUser: undefined,\n      admin: ['ROLE_ADMIN'],\n      adminTeacher: ['ROLE_ADMIN', 'ROLE_TEACHER'],\n      allUsers: ['ROLE_ADMIN', 'ROLE_TEACHER', 'ROLE_STUDENT'],\n      studentAdmin: ['ROLE_STUDENT', 'ROLE_ADMIN'],\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showAdminBoard: user.message.roles.includes('ROLE_ADMIN'),\n        showTeacherBoard: user.message.roles.includes('ROLE_TEACHER'),\n        navList: [\n          user &&\n            !user.message.roles.includes('ROLE_TEACHER') && {\n              title: 'Utilisateur',\n              link: '/user',\n              icon: (\n                <FindInPageIcon\n                  style={{ color: '#4257b2', float: 'right' }}\n                  fontSize=\"large\"\n                />\n              ),\n            },\n          (user.message.roles.includes('ROLE_ADMIN') ||\n            user.message.roles.includes('ROLE_TEACHER')) && {\n            title: 'Ajouter/Modifier un quiz',\n            link: '/addQuiz',\n            icon: (\n              <AddBoxIcon\n                style={{ color: '#4257b2', float: 'right' }}\n                fontSize=\"large\"\n              />\n            ),\n          },\n          (user.message.roles.includes('ROLE_ADMIN') ||\n            user.message.roles.includes('ROLE_TEACHER')) && {\n            title: 'Page Questions',\n            link: '/questions',\n            icon: (\n              <SupervisorAccountIcon\n                style={{ color: '#4257b2', float: 'right' }}\n                fontSize=\"large\"\n              />\n            ),\n          },\n          (user.message.roles.includes('ROLE_ADMIN') ||\n            user.message.roles.includes('ROLE_TEACHER')) && {\n            title: 'Page Reponses',\n            link: '/answers',\n            icon: (\n              <AssignmentIcon\n                style={{ color: '#4257b2', float: 'right' }}\n                fontSize=\"large\"\n              />\n            ),\n          },\n          (user.message.roles.includes('ROLE_ADMIN') ||\n            user.message.roles.includes('ROLE_TEACHER')) && {\n            title: 'Page Etudiants',\n            link: '/students',\n            icon: (\n              <RecentActorsIcon\n                style={{ color: '#4257b2', float: 'right' }}\n                fontSize=\"large\"\n              />\n            ),\n          },\n          user.message.roles.includes('ROLE_ADMIN') && {\n            title: 'Tableau de bord administrateur',\n            link: '/dashboard',\n            icon: (\n              <DashboardIcon\n                style={{ color: '#4257b2', float: 'right' }}\n                fontSize=\"large\"\n              />\n            ),\n          },\n        ],\n        actions: [\n          user && {\n            title: user.message.firstname,\n            link: '/profile',\n            onclick: '',\n            icon: (\n              <AccountCircleIcon\n                style={{ color: '#4257b2', float: 'right' }}\n                fontSize=\"large\"\n              />\n            ),\n          },\n          user && {\n            title: 'Deconnexion',\n            link: '/home',\n            onclick: this.logOut,\n            icon: (\n              <ExitToAppIcon\n                style={{ color: '#4257b2', float: 'right' }}\n                fontSize=\"large\"\n              />\n            ),\n          },\n        ],\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n    this.setState({\n      currentUser: undefined,\n      showAdminBoard: false,\n      showTeacherBoard: false,\n    });\n    if (!this.state.currentUser) {\n      return <Redirect to=\"/home\" />;\n    }\n  }\n\n  render() {\n    const {\n      currentUser,\n      admin,\n      adminTeacher,\n      allUsers,\n      studentAdmin,\n      navList,\n    } = this.state;\n\n    return (\n      <ThemeProvider theme={theme}>\n        <div>\n          <nav\n            className=\"navbar navbar-expand navbar-dark \"\n            style={{ background: '#4257b2' }}\n          >\n            {currentUser && (\n              <TemporaryDrawer\n                lists={navList}\n                actions={this.state.actions}\n              ></TemporaryDrawer>\n            )}\n\n            <Link to={'/'} className=\"navbar-brand\">\n              Outsmarted\n            </Link>\n\n            {currentUser ? (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={'/profile'} className=\"nav-link\">\n                    <Button color=\"primary\" style={{ textTransform: 'none' }}>\n                      <AccountCircleIcon\n                        style={{ color: 'white', float: 'right' }}\n                        fontSize=\"large\"\n                      />\n                      {currentUser.message.firstname}\n                    </Button>\n                  </Link>\n                </li>\n              </div>\n            ) : (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={'/login'} className=\"nav-link\">\n                    <Button color=\"primary\" style={{ textTransform: 'none' }}>\n                      Se Connecter\n                    </Button>\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link to={'/register'} className=\"nav-link\">\n                    <Button\n                      color=\"primary\"\n                      style={{ textTransform: 'none', font: 'Robotto' }}\n                    >\n                      Créer un Compte\n                    </Button>\n                  </Link>\n                </li>\n              </div>\n            )}\n          </nav>\n\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Home2} />\n              <Route exact path=\"/home\" component={Home2} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route\n                exact\n                path=\"/verifyAccount/:token\"\n                component={VerifyAccount}\n              />\n              <Route exact path=\"/postSubmitForm\" component={PostSubmitForm} />\n              <ProtectedRoute\n                exact\n                path=\"/adminRegister\"\n                component={AdminRegister}\n                role={admin}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/profile\"\n                component={Profile}\n                role={allUsers}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/user\"\n                component={BoardUser}\n                role={studentAdmin}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/questions\"\n                component={AllQuestions}\n                role={adminTeacher}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/answers\"\n                component={AllAnswers}\n                role={adminTeacher}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/students\"\n                component={AllStudents}\n                role={allUsers}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/addQuiz\"\n                component={BoardAdmin}\n                role={adminTeacher}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/dashboard\"\n                component={AdminDashboard}\n                role={admin}\n              />\n              <ProtectedRoute component={Home} />\n            </Switch>\n          </div>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// serviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}