{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","components/home.component.js","components/home2.component.js","components/modifyPassword.component.js","components/profile.component.js","services/search.service.js","components/board-user.component.js","services/admin-submit-form.js","components/confirm-dialogue.js","components/menu.js","components/board-admin.component.js","components/postSubmitForm.component.js","components/BarChart.js","components/DoughnutChart.js","components/all-answers.component.js","components/allquestions.component.js","components/admin-register.component.js","components/protected-routes.component.js","components/LineChart.js","components/LineLabels.js","components/all-students.component.js","components/verify-account.component.js","components/Admin/admin-dashboard.jsx","components/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","email","password","axios","post","then","response","console","log","data","token","localStorage","setItem","JSON","stringify","removeItem","firstname","lastname","password_confirmation","roles","old_password","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vlastname","vfirstname","vpassword","vpasswordConfirmation","Register","handleRegister","onChangeFirstname","onChangeLastname","onChangePasswordConfirmation","successful","register","Home","content","Home2","title","description","textAlign","marginTop","height","width","borderRadius","src","alt","ModifyPassword","useState","oldPw","setOldPw","newPw","setNewPw","confirmNewPw","setConfirmNewPw","setmessage","setsuccessful","userEmail","placeholder","onClick","oldPass","newPass","confirmPass","changePassword","res","catch","errMessage","Profile","currentUser","getCurrentUser","substring","substr","_id","map","index","id","get","answers","Alert","elevation","variant","vsearch","BoardUser","search","setsearch","errorMessage","seterrorMessage","currentQuiz","setcurrentQuiz","radioOptions","setradioOptions","checkedItems","setCheckedItems","allQuizzes","setallQuizzes","displayAllAnswered","setdisplayAllAnswered","validate","setvalidate","useEffect","student_id","quizzes","err","checkRadioButton","question_id","label","setradio","answer","checkedArray","x","find_question","find","a","question_answer_id","explanation","handleClose","SearchService","searchQuiz","quiz","setActiveQuiz","quiz_id","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","severity","questions","indexx","question_title","checked","question_options","options","options_id","option_text","setCheckbox","options_text","timestamp","Date","now","formatedTimestamp","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","quiz_answers","student_answers","time_submitted","created_by","ConfirmDialogue","confirmDialog","Dialog","isOpen","DialogTitle","DialogContent","Typography","subTitle","DialogActions","onDiscard","onConfirm","MenuOption","React","anchorEl","setAnchorEl","Boolean","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","float","Menu","keepMounted","PaperProps","maxHeight","ITEM_HEIGHT","option","MenuItem","selected","onclick","icon","StyledButtonAddExplanation","withStyles","root","background","border","color","padding","boxShadow","margin","textTransform","Button","StyledButtonAddQuestion","StyledButtonDelExplanation","StyledButtonDelQuestion","StyledButtonSubmit","MyForm","onChangeQuestion","onClickAddExplanation","explanations","onQuestionChange","indexExplanation","onExplanationChange","onRemoveExplanationClick","onAddExplanationClick","element","onChangeExplanation","autoComplete","onClickRemoveExplanation","question","createExplanationUI","BoardAdmin","createQuiz","laststate","displayQuizzes","displayCreate","displayQuiz","backToQuizzes","edit","getQuiz","quiz_idd","toggle","allow","setConfirmDialog","updateQuiz","discard","handleToggle","allowQuiz","success","updated_questions","i","document","getElementById","expArr","j","alphabet","String","fromCharCode","expId","exp","deleteQuiz","danger","editQuiz","onClickAddQuestion","onChangeTitle","handleSubmit","undefined","submitted","quizMdp","updateTitle","updateSubTitle","user","menuOptions","fontsize","indexQuestion","prevState","splice","PostForm","submit","handleQuestionChange","onTitleChange","handleTitleChange","handleExplanationChange","handleAddExplanationClick","handleRemoveExplanationClick","onClickDelQuestion","to","pathname","List","ListItem","button","ListItemIcon","ListItemText","primary","Switch","inputProps","readOnly","createQuestionUI","PostSubmitForm","BarChart","names","explanationArray","explanationLabels","explanationValues","barData","labels","datasets","backgroundColor","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","legend","tooltips","callbacks","item","displayColors","DoughnutChart","answerValues","pieData","AllAnswers","allAnswers","setallAnswers","array","setarray","answersArray","setanswersArray","explanationsArray","setexplanationsArray","currentStudent","setcurrentStudent","explanationStats","setexplanationStats","showSpinner","setShowSpinner","allQuestions","setAllQuestions","allExplanations","setAllExplanations","setPieData","setBarData","pieTitle","setPieTitle","barTitle","setBarTitle","Axios","handlePieChartChange","handleBarChartChange","getStats","getExplanationValues","keys","values","forEach","key","getAnswerValues","getLabels","object","Object","class","quiz_title","students","student","marginBottom","arrayAns","mergeAllStudentsByIndex","arrayExp","mergeAllExplanation","countAnswers","all","filter","labelsArray","countExplanations","b","d","letter","Container","Grid","container","spacing","sm","md","lg","Card","CardHeader","action","subheader","CardContent","AllQuestions","setdisplayQuiz","setdisplayQuizzes","vusername","AdminRegister","onChangeCheckbox","admin","teacher","noRoleError","mdpTmp","adminRegister","ProtectedRoute","component","isAuthenticated","isAuthorized","includes","LineChart","borderColor","datax","string","LineLabels","integer","AllStudents","allStudents","setallStudents","displayActiveQuiz","setdisplayActiveQuiz","displayEvolution","setdisplayEvolution","displayMain","setdisplayMain","lineArray","setLineArray","displayLineChart","setDisplayLineChart","actualQuiz","setactualQuiz","setActiveStudent","evolution","getAllAns","getLineData","groupArray","dataArray","ListItemAvatar","Avatar","toUpperCase","tempLineArray","attempt","VerifyAccount","params","match","verifyAccount","useStyles","makeStyles","maxWidth","media","AdminDashboard","useHistory","classes","dashboardArray","path","children","actions","one","two","fontSize","CardActionArea","gutterBottom","CardActions","size","newPath","href","routeChange","child","route","list","fullList","TemporaryDrawer","top","left","bottom","right","toggleDrawer","anchor","clsx","onKeyDown","lists","text","link","textDecoration","position","Fragment","Drawer","theme","createMuiTheme","palette","main","App","logOut","showAdminBoard","showTeacherBoard","adminTeacher","allUsers","studentAdmin","navList","logout","ThemeProvider","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.9e629032.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\n// const API_URL = \"http://localhost:5050/api/\";\n\nclass AuthService {\n  login(email, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        email,\n        password\n      })\n      .then(response => {\n        console.log(response.data);\n\n        if (response.data.token) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(firstname, lastname, email, password, password_confirmation) {\n    return axios.post(API_URL + \"signup\", {\n      firstname, \n      lastname, \n      email, \n      password, \n      password_confirmation\n    });\n  }\n\n  verifyAccount(token) {\n    return axios.post(API_URL + \"verifyAccount\", {\n      token\n    });\n  }\n\n  adminRegister(firstname, lastname, email, roles) {\n    return axios\n    .post(API_URL + \"signup\", {\n      firstname,\n      lastname,\n      email,\n      roles\n    });\n  }\n\n  changePassword(email, old_password, password, password_confirmation) {\n    return axios\n    .post(API_URL + \"changePassword\", {\n      email, \n      old_password, \n      password, \n      password_confirmation\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Ce champ est obligatoire !\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.email, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n            \n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email de l'utilisateur</label>\n              <Input\n                type=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.onChangeEmail}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Mot de passe</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btnn\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Se connecter</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Ce champ est obligatoire !\n            </div>\n        );\n    }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Adresse email non valide.\n      </div>\n    );\n  }\n};\n\nconst vlastname = value => {\n  if (value.length < 3 || value.length > 50) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\n      </div>\n    );\n  }\n};\n\nconst vfirstname = value => {\n  if (value.length < 3 || value.length > 50) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 50) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Le mot de passe doit contenir entre 6 et 50 charactères.\n      </div>\n    );\n  }\n};\nconst vpasswordConfirmation = value => {\n  if (value.length < 3 || value.length > 50) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\n    this.onChangeLastname = this.onChangeLastname.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangePasswordConfirmation = this.onChangePasswordConfirmation.bind(this);\n\n    this.state = {\n      lastname: \"\",\n      firstname: \"\",\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  // onChangeUsername(e) {\n  //   this.setState({\n  //     username: e.target.value\n  //   });\n  // }\n\n  onChangeFirstname(e) {\n    this.setState({\n      firstname: e.target.value\n    });\n  }\n\n  onChangeLastname(e) {\n    this.setState({\n      lastname: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangePasswordConfirmation(e) {\n    this.setState({\n      password_confirmation: e.target.value\n    });\n  }\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.firstname,\n        this.state.lastname,\n        this.state.email,\n        this.state.password,\n        this.state.password_confirmation,\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n          console.log(this.state);\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"firstname\">Prenom</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"firstname\"\n                    value={this.state.firstname}\n                    onChange={this.onChangeFirstname}\n                    validations={[required, vfirstname]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"lastname\">Nom</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"lastname\"\n                    value={this.state.lastname}\n                    onChange={this.onChangeLastname}\n                    validations={[required, vlastname]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password_confirmation\">Confirmer Mot de passe</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password_confirmation\"\n                    value={this.state.password_confirmation}\n                    onChange={this.onChangePasswordConfirmation}\n                    validations={[required, vpasswordConfirmation]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btnn\">Créer le compte</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // UserService.getPublicContent().then(\n    //   response => {\n    //     this.setState({\n    //       content: response.data.body\n    //     });\n    //   },\n    //   error => {\n    //     this.setState({\n    //       content:\n    //         (error.response && error.response.data) ||\n    //         error.message ||\n    //         error.toString()\n    //     });\n    //   }\n    // );\n    this.setState({\n      content: \"Bienvenue dans votre application de Neuroéducation\"\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Home2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      description: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      title: \"Bienvenue dans votre application de Neuroéducation\",\n      description: \"Cette application permet aux élèves de prendre conscience de leurs stratégies de réussite et des potentielles origines de leurs erreurs\"\n    })\n  }\n\n  render() {\n    return (\n        <div>\n            <div className=\"container\">\n                <header className=\"jumbotron\">\n                    <h3>{this.state.title}</h3>\n                </header>\n            </div>\n            <div className=\"container\">\n                <h5>{this.state.description}</h5>\n                <div style={{textAlign: \"center\", marginTop: \"20px\"}}>\n                  <img style={{height: \"500px\", width: \"500px\", borderRadius: \"10px\"}} src=\"/brain-storming.png\" alt=\"students brainstorming\"/>\n                </div>\n            </div>\n        </div>\n      \n    );\n  }\n}","import {useState} from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\n// import CheckButton from \"react-validation/build/button\";\n// import React, { Component } from \"react\";\n\nimport AuthService from '../services/auth.service'\n\n\n\n// const currentPassword = \"\"\n\n\n// const required = (value) => {\n//     if (!value) {\n//         return (\n//             <div className=\"alert alert-danger\" role=\"alert\">\n//                 Ce champ est obligatoire !\n//             </div>\n//         );\n//     }\n// };\n\n// const vpassword = value => {\n//     if (value.length < 6 || value.length > 50) {\n//       return (\n//         <div className=\"alert alert-danger\" role=\"alert\">\n//           Le mot de passe doit contenir entre 6 et 50 charactères.\n//         </div>\n//       );\n//     }\n//   };\n\n//   const vpasswordConfirmation = value => {\n//     if (value !== newPw) {\n//       return (\n//         <div className=\"alert alert-danger\" role=\"alert\">\n//           Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\n//         </div>\n//       );\n//     }\n//   };\n\nconst ModifyPassword = (props) =>{\n    const [oldPw, setOldPw] = useState('')\n    const [newPw, setNewPw] = useState('')\n    const [confirmNewPw, setConfirmNewPw] = useState('')\n    const [message, setmessage] = useState('');\n    const [successful, setsuccessful] = useState(false);\n    const [userEmail] = useState(props.email)\n\n    const ApplyModifications =(email,oldPass, newPass, confirmPass) => {\n        console.log(email)\n        setmessage('');\n        setsuccessful(false);\n        AuthService.changePassword(email, oldPass, newPass, confirmPass)\n        .then((res) => {\n            console.log(res.data);\n            setmessage(\"Mot de passe modifié avec succès\");\n            setsuccessful(true);\n        })\n        .catch((error) =>{\n            const errMessage =\n              (error.response.data.message[0].password || (error.response &&\n                error.response.data &&\n                error.response.data.message)) ||\n              error.message ||\n              error.toString();\n              console.log(errMessage);\n            setmessage(errMessage);\n            setsuccessful(false);\n        })\n    }\n\n\n\nreturn (\n    <div className=\"card card-container\">\n        \n        <strong>Changement de mot de passe</strong>\n        <Form>\n        <label name=\"oldPw\">Ancien mot de passe</label>\n        <Input name=\"oldPw\" value={oldPw} placeholder=\"******\" onChange={(e) => setOldPw(e.target.value)} />\n        <label name=\"newPw\">Nouveau mot de passe</label>\n        <Input name=\"newPw\" value={newPw} placeholder=\"******\" onChange={(e) => setNewPw(e.target.value)} />\n        <label name=\"confirmNewPw\">Confirmer le nouveau mot de passe</label>\n        <Input name=\"confirmNewPw\" value={confirmNewPw} placeholder=\"******\" onChange={(e) => setConfirmNewPw(e.target.value)} />\n        {/* <CheckButton\n            style={{ display: \"none\" }}\n            ref={c => {\n            Component.checkBtn = c;\n            }}\n        /> */}\n        </Form>\n        <button className=\"btnn\" onClick={() => ApplyModifications(userEmail,oldPw,newPw,confirmNewPw)}>Confirmer</button>\n\n        {message && (\n          <div className=\"form-group\">\n            <div\n              className={\n                successful\n                  ? \"alert alert-success\"\n                  : \"alert alert-danger\"\n              }\n              role=\"alert\"\n            >\n              {message}\n            </div>\n          </div>\n        )}\n    </div>\n);\n}\n\n\n\nexport default ModifyPassword;\n","import React, { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport ModifyPassword from \"./modifyPassword.component\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser()\n    };\n  }\n\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n          Profile : <strong>{currentUser.message.firstname}{' '}{currentUser.message.lastname}</strong> \n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong>{\" \"}\n          {currentUser.token.substring(0, 20)} ...{\" \"}\n          {currentUser.token.substr(currentUser.token.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.message._id}\n        </p>\n        <p>\n          <strong>Email:</strong>{\" \"}\n          {currentUser.message.email}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.message.roles &&\n            currentUser.message.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n        <ModifyPassword email={currentUser.message.email}/>        \n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\n\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\n// const API_URL = \"http://localhost:5050/api/${id}\";\n\n\nclass SearchService {\n\n  searchQuiz(id) {\n    return axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${id}`, {\n      \n    });\n  }\n\n  submitAnswers(answers){\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\n        answers\n      })\n  }\n\n\n}\n\nexport default new SearchService();\n","import React from \"react\";\nimport SearchService from \"../services/search.service\";\nimport AuthService from \"../services/auth.service\";\nimport {useState, useEffect} from 'react';\nimport axios from \"axios\";\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Ce champ est obligatoire !\n            </div>\n        );\n    }\n};\n\nconst vsearch = value => {\n  if (value.length < 6) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Le nom d'utilisateur doit contenir entre 6 charactères.\n      </div>\n    );\n  }\n};\n\nconst BoardUser = () => {\n  const [search, setsearch] = useState('');\n  const [successful, setsuccessful] = useState(false);\n  const [message, setmessage] = useState('');\n  const [errorMessage, seterrorMessage] = useState('');\n  // const [errors, seterrors] = useState([])\n  const [currentQuiz, setcurrentQuiz] = useState(null);\n  const [radioOptions, setradioOptions] = useState({})\n  const [checkedItems, setCheckedItems] = useState([]); \n  const [currentUser] = useState(AuthService.getCurrentUser()) ;\n  const [allQuizzes, setallQuizzes] = useState([]);\n  const [displayAllAnswered, setdisplayAllAnswered] = useState(false);\n  const [validate, setvalidate] = useState(false)\n\n\n  // LOAD ALL QUIZZES ANSWERED BY CURRENT STUDENT FROM DATABASE \n  //ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\n  useEffect(() => {\n    const student_id = currentUser.message.email;\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\n      console.log(response.data.quizzes);\n      setallQuizzes(response.data.quizzes) \n    })\n    .catch(function (err) {\n        seterrorMessage(err.response);\n    });\n  }, [currentUser]);\n\n  // SET SELECTED(CLICKED) QUIZ\n  const setActiveQuiz = (quiz, index) => {\n    console.log(quiz)\n    // setcurrentQuiz(quiz);\n    // setcurrentIndex(index)\n  };\n\n  const onChangeSearch = (e) =>{\n    setsearch(e.target.value)\n  }\n\n  // RETURN CHECKED VALUE(true or false)\n  const checkRadioButton = (question_id, label) => {\n      if (!radioOptions[question_id]) {\n          return false;\n      }\n      return radioOptions[question_id] === label;\n  }\n\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\n    const setradio = (id , answer) => {\n      let checkedArray = checkedItems.map(x => {return {...x}})\n      const find_question = checkedArray.find(a => a.question_answer_id === id);\n      console.log(find_question)\n      if(find_question) {\n          checkedArray.find(a => a.question_answer_id === id).answer = answer;\n          setradioOptions((state) => {\n              console.log(state);\n              return {\n                  ...state,\n                  [id] : answer\n              }\n          });\n          setCheckedItems(checkedArray);\n      }\n      else{\n      setradioOptions((state) => {\n          console.log(state);\n          return {\n              ...state,\n              [id] : answer\n          }\n      });\n\n      setCheckedItems([\n          ...checkedItems,\n           {\n              question_answer_id : id,\n              answer: answer,\n              explanation: 'no explanation'\n          }\n      ]);}\n  }\n\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\n      let checkedArray = checkedItems.map(x => {return {...x}})\n      const find_question = checkedArray.find(a => a.question_answer_id === question_id);\n      console.log(find_question)\n      if(find_question) {\n          checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\n          setCheckedItems(checkedArray);\n      }\n      \n  }\n\n  // SUBMIT ANSWERS TO THE BACKEND\n  const submitAnswers = () =>{\n    // setmessage(\"\");\n    // setsuccessful(false);\n    // setdisplayAllAnswered(false);\n    const timestamp = Date.now(); // This would be the timestamp you want to format\n    const formatedTimestamp = new Intl.DateTimeFormat('en-US', {year: 'numeric',\n                              month: '2-digit',day: '2-digit', hour: '2-digit', \n                              minute: '2-digit', second: '2-digit'}).format(timestamp);\n    console.log(new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',\n                day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'})\n                .format(timestamp));\n    const answers = {\n        quiz_id : currentQuiz.quiz_id,\n        quiz_answers : {\n            student_id : currentUser.message.email,\n            student_answers : checkedItems,\n            time_submitted : formatedTimestamp,\n        }\n    }\n\n\n    if((currentQuiz.questions).length !== (answers.quiz_answers.student_answers).length){\n      // setmessage(null);\n      // setsuccessful(null);\n      // setdisplayAllAnswered(false);\n      console.log((currentQuiz.questions).length);\n      console.log((answers.quiz_answers.student_answers).length);\n      setvalidate(true);\n      // setmessage('Please answer all quizzes');\n              // setsuccessful(false);\n              return setvalidate(true);\n    }\n\n    console.log(\"Radio Answer: \", radioOptions);\n    console.log(\"CheckedItems: \", checkedItems);\n    console.log(\"Final: \", answers);\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\n        answers\n      }).then((res) => {\n          console.log(res);\n          if(res){\n              //   window.location.reload(false);\n              setcurrentQuiz(null);\n              setCheckedItems([]);\n              setradioOptions({});\n              setallQuizzes([...allQuizzes, answers])\n              setmessage('Answers Submitted');\n              setsuccessful(true);\n              setdisplayAllAnswered(true);\n              \n          }\n      }).catch(err => {\n          setcurrentQuiz(null)  \n          setsuccessful(false);\n          console.log(err.response.data.message|| err.response.data.message[0].error);   \n          setmessage(err.response.data.message|| err.response.data.message[0].error);\n                 \n      });\n  }\n\n  const handleClose = () => {\n    setvalidate(false)\n  }\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setmessage(\"\");\n    setsuccessful(false);\n    setdisplayAllAnswered(false);\n\n    // this.form.validateAll();\n\n    SearchService.searchQuiz(\n      search,\n    ).then(\n      response => {\n        console.log(response.data);\n        setsuccessful(true);\n        setcurrentQuiz(response.data);\n      })\n      .catch(\n      error => {\n        console.log(error.response);\n        const resMessage =\n          (error.response && error.response.data && error.response.data.message) \n          || error.message || error.toString();\n\n        setmessage(resMessage);\n        setsuccessful(false);\n      }\n    );\n    \n  }\n\nreturn (\n<div>\n  <div className=\"row\">\n    <div className=\"col-xs-12 col-sm-12 col-md-6\">\n      {errorMessage && (\n          <div className=\"form-group\">\n            <div\n              className={\"alert alert-danger\"}\n              role=\"alert\"\n            >\n              {errorMessage}\n            </div>\n          </div>\n        )}\n    <div className={!successful || message ? \"card card-container\" : \"\"}>\n        {(!successful || displayAllAnswered)  && (\n          <div >\n            <div className=\"form-group\">\n              <label htmlFor=\"search\">Search for Quiz</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"search\"\n                value={search}\n                onChange={onChangeSearch}\n                validations={[required, vsearch]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button className=\"btn btn-primary btn-block\"  onClick={handleSearch}>Search Quiz</button>\n            </div>\n          </div>\n        )}\n        {message && (\n          <div className=\"form-group\">\n            <div\n              className={\n                successful\n                  ? \"alert alert-success\"\n                  : \"alert alert-danger\"\n              }\n              role=\"alert\"\n            >\n              {message}\n            </div>\n          </div>\n        )}\n      </div>\n      </div>\n\n      <div className=\"col-xs-12 col-sm-12 col-md-6\">\n    <div className={!successful || message ? \"card card-container\" : \"\"}>\n        {(displayAllAnswered || !successful )  && allQuizzes && (\n          <div >\n            <h4>Quiz déjà répondus</h4>\n            <div className={`quiz`} >\n                {allQuizzes && allQuizzes.map((quiz, index) => (\n                    <h4 \n                    onClick= {() => setActiveQuiz(quiz, index)}\n                    > {quiz.quiz_id} \n                    </h4>\n                ))}\n            </div>\n          </div>\n        )}\n\n      </div>\n      </div>\n      </div>\n\n\n      <div >\n      {currentQuiz && (\n        <div className=\"container-questions\"> \n          { validate &&\n              <Snackbar anchorOrigin={{ vertical :'top', horizontal: 'center' }}open={validate} autoHideDuration={6000} onClose={()=>handleClose()}>\n              <Alert onClose={()=>handleClose()} severity=\"error\">\n                {'Please answer all questions'}\n              </Alert>\n           </Snackbar>\n          }\n          <center><h4>{currentQuiz.quiz}</h4><br/></center>\n          {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\n            <div key={questions.question_id}>\n              <h4>{questions.question_id}{'. '}{questions.question_title}</h4>    \n              <div>\n                  <input \n                      className=\"input\"\n                      type=\"radio\" \n                      value=\"Oui\" \n                      checked={checkRadioButton(questions.question_id, \"Oui\")}  \n                      onChange={(e) => setradio(questions.question_id, e.target.value)} \n                  /> Oui\n                  <input \n                      className=\"input\"\n                      type=\"radio\" \n                      value=\"Plutot Oui\"  \n                      checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \n                      onChange={(e) => setradio(questions.question_id, e.target.value)} \n                  /> Plutot Oui\n                  <input\n                      className=\"input\" \n                      type=\"radio\" \n                      value=\"Plutot Non\"  \n                      checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \n                      onChange={(e) => setradio(questions.question_id, e.target.value)}\n                  /> Plutot Non\n                  <input\n                      className=\"input\" \n                      type=\"radio\" \n                      value=\"Non\" \n                      checked={checkRadioButton(questions.question_id, \"Non\")}  \n                      onChange={(e) => setradio(questions.question_id, e.target.value)}\n                  /> Non\n              </div>\n\n              {radioOptions[questions.question_id] === \"Plutot Non\"\n              || radioOptions[questions.question_id] === \"Plutot Oui\"\n              || radioOptions[questions.question_id] === \"Non\" ? (\n                <div>\n                  {questions.question_options && questions.question_options.map((options, index) => ( \n                    <div>\n                      <label>\n                        <input type=\"checkbox\" value={options.options_id} \n                        checked={checkedItems[options.option_text]}  \n                        onChange={(e) => \n                            setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\n                        }\n                        />\n                        <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              ) : (<span>No Explanation Needed</span>)}\n            </div>\n          ))}\n          <div className=\"form-group\">\n            <button className=\"btnn\" onClick={submitAnswers}>Submit Answers</button>\n          </div>\n        </div>\n          )\n        }\n      </div>\n\n</div>\n    );\n  }\n\n  export default BoardUser","import axios from \"axios\";\n\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\n\nclass PostForm {\n    submit(title, created_by, questions) {\n        return axios\n            .post(API_URL + \"submit\", {\n                title,\n                created_by,\n                questions\n            })\n            .then(response => {\n                return response.data;\n            });\n    }\n}\n\nexport default new PostForm();\n","import { Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@material-ui/core'\nimport {React} from 'react'\n\nconst ConfirmDialogue = (props) => {\n    const {confirmDialog} = props;\n    return (\n        <div>\n            <Dialog open={confirmDialog.isOpen}>\n                <DialogTitle >\n                    \n                </DialogTitle>\n                <DialogContent>\n                    <Typography variant=\"h6\">\n                        {confirmDialog.title}\n                    </Typography>\n                    <Typography variant=\"subtitle2\">\n                        {confirmDialog.subTitle}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <button className=\"btnn\" onClick={confirmDialog.onDiscard}>No</button>\n                    <button className=\"btnn\" onClick={confirmDialog.onConfirm}>Yes</button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default ConfirmDialogue\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\nconst ITEM_HEIGHT = 48; \n\nexport default function MenuOption(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        style={{float:\"right\"}}\n      >\n        <MoreVertIcon />\n        <span>OPTIONS</span>\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5,\n            width: '20ch',\n          },\n        }}\n      >\n        {props.options && props.options.map((option) => (\n          <MenuItem key={option.title} selected={option === 'Pyxis'} onClick={option.onclick} >\n            {option.icon}{option.title}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport { Button, Snackbar, Switch } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport PostForm from \"../services/admin-submit-form\";\nimport AuthService from \"../services/auth.service\";\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { List, ListItem,ListItemIcon, ListItemText } from '@material-ui/core';\nimport BookOutlined from '@material-ui/icons/BookOutlined';\nimport SearchService from \"../services/search.service\";\nimport ConfirmDialogue from \"./confirm-dialogue\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport MenuOption from \"./menu\";\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n// Here is 5 constants related to the visual of our custom button\nconst StyledButtonAddExplanation = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst StyledButtonAddQuestion = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #00BCFF 30%, #5355FF 90%)',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst StyledButtonDelExplanation = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FF8700 30%, #FF1E1E 90%)',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst StyledButtonDelQuestion = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FF1D1D 30%, #4C4C4C 90%)',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst StyledButtonSubmit = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #11FF00 30%, #00FF82 90%)',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Ce champ est obligatoire !\n      </div>\n    );\n  }\n};\n\nclass MyForm extends Component {\n  constructor(props){\n    super(props);\n    this.onChangeQuestion = this.onChangeQuestion.bind(this);\n    this.onClickAddExplanation = this.onClickAddExplanation.bind(this);\n\n    this.state = {\n      explanations: false\n    };\n  }\n\n  onChangeQuestion(e){\n    this.props.onQuestionChange(e.target.value);\n  }\n\n  onChangeExplanation(indexExplanation, e){\n    this.props.onExplanationChange(indexExplanation, e.target.value)\n  }\n\n  onClickRemoveExplanation(indexExplanation){\n    this.props.onRemoveExplanationClick(indexExplanation);\n  }\n\n  onClickAddExplanation(){\n    this.props.onAddExplanationClick();\n    this.setState({\n      explanations: true\n    });\n  }\n  \n  createExplanationUI(){\n    return(\n      <div>\n          {this.props.explanations ?(this.props.explanations.map((element, indexExplanation) =>\n            <div>\n              <div key={indexExplanation} className=\"form-group\">\n                <label htmlFor=\"explanation\">Explication</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"explanation\"\n                    value = {element.options_text||''}\n                    onChange = {this.onChangeExplanation.bind(this, indexExplanation)}\n                    validations = {[required]}\n                    autoComplete = \"off\"\n                  />\n              </div>\n\n              <StyledButtonDelExplanation \n                variant = \"contained\" onClick = {this.onClickRemoveExplanation.bind(this, indexExplanation)}>Supprimer cette explication\n              </StyledButtonDelExplanation>\n\n\n            </div>\n            )) : (<h3>No Explanation props</h3>)\n          }\n      </div>\n    )\n  }\n\n  render(){\n\n    const question = this.state.question;\n\n    return (\n      <div>\n        <Form>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"question\"><strong>Question</strong></label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"question\"\n              value = {question}\n              onChange = {this.onChangeQuestion}\n              validations = {[required]}\n              autoComplete = \"off\"\n            />\n          </div>\n\n          <StyledButtonAddExplanation\n            variant = \"contained\" onClick = {this.onClickAddExplanation}>Ajouter une explication\n          </StyledButtonAddExplanation>\n          \n          {\n            this.state.explanations &&\n              this.createExplanationUI()\n          }\n\n        </Form>\n\n      </div>\n      \n    )\n  }\n}\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.onClickAddQuestion = this.onClickAddQuestion.bind(this);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.allowQuiz = this.allowQuiz.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n\n    this.state = {\n      title: '',\n      created_by: '',\n      questions: [\n        {\n          question_id: '',\n          question_title: '',\n          question_options: []\n        }\n      ],\n      message: '',\n      currentUser: undefined,\n      submitted: false,\n      quizMdp:'',\n      allQuizzes: null,\n      displayQuizzes: null,\n      errorMessage: '',\n      laststate: null,\n      confirmDialog: {\n        isOpen:false,\n        title:'',\n        subTitle:''\n      },\n      updateTitle: \"Are you sure you want to update?\",\n      updateSubTitle : \"You will be able to edit again\"\n    };\n  }\n\n  componentDidMount() {\n\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n      });\n    }\n\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${user.message.email}`).then((response) => {\n            console.log(response.data.quizzes);\n            if((response.data.quizzes).length ){\n                // setallQuizzes(response.data.quizzes)\n                // setdisplayQuizzes(true); \n                this.setState({\n                  allQuizzes: response.data.quizzes,\n                  displayQuizzes: true\n                });\n                // console.log(response.data.quizzes)\n            }\n            else{\n                // setallQuizzes(null)\n                // setdisplayQuizzes(false)  \n                this.setState({\n                  allQuizzes: null,\n                  displayQuizzes: false\n                });\n            }\n          })\n          .catch(function (err) {\n              // seterrorMessage(err.response.data.message|| err.response.data.message[0].error);\n              this.setState({\n                errorMessage: err.response.data.message|| err.response.data.message[0].error,\n              });\n          });\n\n          this.setState({\n            menuOptions : [\n              {\n                title: \"Back\",\n                icon : <ArrowBackIcon fontsize=\"large\"/>,\n                onclick : this.backToQuizzes\n              },\n              {\n                title: \"Edit\",\n                icon : <EditIcon fontsize=\"large\"/>,\n                onclick : this.editQuiz\n              },\n              {\n                title: \"Delete\",\n                icon : <DeleteForeverIcon fontsize=\"large\"/>,\n                onclick : this.deleteQuiz\n              }\n            ]\n          })\n  }\n\n  createQuiz = () => {\n    this.setState({\n      laststate: this.state.displayQuizzes,\n      displayQuizzes : null,\n      displayCreate : true,\n      displayQuiz: false,\n\n    })\n  }\n\n  backToQuizzes = () => {\n    this.setState({\n      displayQuizzes: this.state.laststate,\n      displayCreate: false,\n      displayQuiz: false,\n      edit: false\n\n    })\n  }\n\n  getQuiz = (quiz_idd) => {\n    SearchService.searchQuiz(\n      quiz_idd,\n    ).then(\n      response => {\n        console.log(response);\n        // setsuccessful(true);\n        // setcurrentQuiz(response.data);\n        this.setState({\n          displayQuiz: true,\n          laststate: this.state.displayQuizzes,\n          currentQuiz: response.data,\n          toggle: response.data.allow,\n          displayQuizzes : null,\n          displayCreate: false,\n        })\n      })\n      .catch(\n      error => {\n        console.log(error.response);\n        const resMessage =\n          (error.response && error.response.data && error.response.data.message) \n          || error.message || error.toString();\n\n        // setmessage(resMessage);\n        // setsuccessful(false);\n        this.setState({\n          message: resMessage,\n          successful: false\n        })\n      }\n    );\n  }\n\n  setConfirmDialog = () => {\n        this.setState({\n          confirmDialog: {\n            isOpen: true,\n            title: \"Do you want to Edit this Quiz?\",\n            subTitle: \"You can edit again\",\n            onConfirm: this.updateQuiz,\n            onDiscard: ()=>this.discard(\"update\")\n          }\n        })\n  }\n\n  discard = (type) => {\n    if(type===\"update\"){\n      this.setState({\n        confirmDialog: {\n          isOpen: false,\n          title: '',\n          subTitle: \"\",\n          onConfirm: null,\n          onDiscard: null\n        }\n      })\n    }\n    else if(type===\"toggle\"){\n      this.setState({\n        confirmDialog: {\n          isOpen: false,\n          title: '',\n          subTitle: \"\",\n          onConfirm: null,\n          onDiscard: null\n        },\n         toggle: !this.state.toggle\n      })\n    }\n  }\n\n\n  handleToggle = (event) =>{\n    this.setState({\n      toggle: event.target.checked\n    })\n    let title;\n    let message;\n    if(event.target.checked){\n      title = \"Allow Students to take Quiz?\";\n      message = \"Students Can Take Quiz now\"\n    }\n    else{\n      title = \"Do you want to Close Quiz?\"\n      message = \"Students Cannot Take Quiz now\"\n    }\n    this.setState({\n      confirmDialog: {\n        isOpen: true,\n        title: title,\n        subTitle: this.state.subTitle,\n        onConfirm: () => this.allowQuiz(message),\n        onDiscard: ()=> this.discard(\"toggle\")\n      }\n    })\n\n  }\n\n  allowQuiz = (message) => {\n    let allow = this.state.toggle\n    console.log(allow)\n    const quiz_id = this.state.currentQuiz.quiz_id;\n    axios.post(`https://neuroeducation-feedback.herokuapp.com/api/allowQuiz/${quiz_id}` , {\n      allow\n    })\n    .then((response) => {\n      console.log(response.data);\n      let success;\n      if(allow){\n        success = allow\n      }\n      else{\n        success=allow\n      }\n      this.setState({\n        message: message,\n        open:true,\n        successful:success,\n        toggle: allow\n      })\n    })\n    .catch(function (err) {\n        // this.setState({\n        //   toggle: !this.state.toggle\n        // });\n        console.log(err.response.data.message|| err.response);\n    });\n    \n    this.setState({\n      confirmDialog: {\n        isOpen: false,\n        title: '',\n        subTitle: \"\",\n        onConfirm: null,\n        onDiscard: null\n      }\n    })\n  }\n\n  updateQuiz = (event) =>{\n    event.preventDefault();\n    let updated_questions = [];\n\n    for(let i=1;i<=5;i++){\n      if(document.getElementById('Q'+i) === null){\n        break\n      }\n      var id = document.getElementById('Q'+i).value;\n\n      let expArr = [];\n      for(let j=1;j<=20;j++){\n        let alphabet = String.fromCharCode(96 + (j));\n        let expId = 'Q'+i+'E'+alphabet;\n\n        if(document.getElementById(expId) === null){\n          break\n        }\n        else{\n        var exp = document.getElementById(expId).value;\n        expArr.push({\n          options_id : alphabet,\n          options_text : exp\n        })}\n      }\n      updated_questions.push({question_id:i, question_title: id, question_options : expArr})\n    }\n\n    console.log(updated_questions)\n    const quiz_id = document.getElementById(\"quiz_id\").value;\n    console.log(quiz_id)\n    axios.post(`https://neuroeducation-feedback.herokuapp.com/api/updateQuiz/${quiz_id}` , {\n      updated_questions\n    })\n    .then((response) => {\n      console.log(response.data);\n      this.setState({\n        message: \"Quiz Updated\",\n        open: true,\n        successful:true\n      })\n    })\n    .catch(function (err) {\n        console.log(err.response.data.message|| err.response);\n        this.setState({\n          message: \"Quiz Not Updated\",\n          open:true,\n          successful: false\n        })\n    });\n    \n    this.setState({\n      confirmDialog: {\n        isOpen: false,\n        title: '',\n        subTitle: \"\",\n        onConfirm: null,\n        onDiscard: null\n      }\n    })\n  }\n\n\n  deleteQuiz=()=> {\n    this.setState({\n      open: true,\n      message: \"Not Functional Yet\",\n      danger: true,\n      successful:null\n    })\n  }\n\n  editQuiz=()=>{\n    this.setState({\n      edit: true,\n      displayQuiz: false\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  handleQuestionChange(indexQuestion, question){\n    let questions = [...this.state.questions];\n    questions[indexQuestion].question_title = question;\n    questions[indexQuestion].question_id = indexQuestion+1;\n    this.setState({\n      questions\n    });\n  }\n\n  handleExplanationChange(indexQuestion, indexExplanation, explanation){\n    let questions = [...this.state.questions];\n    questions[indexQuestion].question_options[indexExplanation].options_text = explanation;\n    \n    let alphabet = String.fromCharCode(96 + (indexExplanation+1));\n    questions[indexQuestion].question_options[indexExplanation].options_id = alphabet;\n    \n    this.setState({\n      questions\n    })\n  }\n\n  onChangeTitle(e){\n    let title = e.target.value;\n    this.setState({\n      title\n    });\n  }\n\n  onClickAddQuestion(){\n    this.setState(\n      prevState => ({questions : [...prevState.questions,        \n        {\n        question_title: '',\n        question_options: []\n      }]})\n    );\n  }\n\n  handleAddExplanationClick(indexQuestion){\n    let questions = [...this.state.questions];\n    questions[indexQuestion].question_options.push({options_text : ''});\n    this.setState({\n      questions\n    })\n  }\n\n  handleRemoveExplanationClick(indexQuestion, indexExplanation){\n    let questions = [...this.state.questions];\n    questions[indexQuestion].question_options.splice(indexExplanation, 1);\n    this.setState({\n      questions\n    });\n  }\n\n  onClickDelQuestion(indexQuestion){\n    let questions = [...this.state.questions];\n    questions.splice(indexQuestion, 1);\n    this.setState({\n      questions\n    });\n  }\n\n  handleSubmit(){\n\n    const { currentUser} = this.state;\n\n    PostForm.submit(this.state.title, currentUser.message.email, this.state.questions).then(\n      (response) => {\n        // this.props.history.push({\n        //   pathname: \"/postSubmitForm\",\n        //   state:{quizMdp: response.quizMdp}\n        // })\n        // window.location.reload();\n       console.log(response);\n        this.setState({\n          message: 'Quiz submitted',\n          submitted: true,\n          quizMdp:response.quizMdp\n        });\n      },\n      error => {\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        this.setState({\n          message: resMessage,\n          questions: [\n            {\n              question_title: '',\n              question_options: []\n            }\n          ]\n        });\n      }\n    );\n  }\n\n  createQuestionUI(){\n\n    return(this.state.questions.map((element, indexQuestion) => \n      <div className=\"questionContainer\">\n        <div className=\"container\" key={indexQuestion}>\n          <MyForm \n            onQuestionChange = {this.handleQuestionChange.bind(this, indexQuestion)}\n            onTitleChange = {this.handleTitleChange}\n            onExplanationChange = {this.handleExplanationChange.bind(this, indexQuestion)}\n            onAddExplanationClick = {this.handleAddExplanationClick.bind(this, indexQuestion)}\n            onRemoveExplanationClick = {this.handleRemoveExplanationClick.bind(this, indexQuestion)}\n            explanations = {this.state.questions[indexQuestion].question_options}\n          />\n          <div className=\"delQuestion\">\n            <StyledButtonDelQuestion\n              variant = \"contained\" onClick = {this.onClickDelQuestion.bind(this, indexQuestion)}>Supprimer cette question\n            </StyledButtonDelQuestion>\n          </div>\n        </div>\n      </div>\n      )\n    )\n  }\n\n  // Pourrait être utile plus tard donc je met de coté (deprecated)\n  // componentDidMount() {\n  //   UserService.getAdminBoard().then(\n  //     response => {\n  //       this.setState({\n  //         content: response.data\n  //       });\n  //     },\n  //     error => {\n  //       this.setState({\n  //         content:\n  //           (error.response &&\n  //             error.response.data &&\n  //             error.response.data.message) ||\n  //           error.message ||\n  //           error.toString()\n  //       });\n  //     }\n  //   );\n  // }\n\n  render() {\n\n    const title = this.state.title;\n    const currentUser = this.state.currentUser;\n    const allQuizzes = this.state.allQuizzes;\n    const displayQuizzes = this.state.displayQuizzes;\n    const displayCreate = this.state.displayCreate;\n    const displayQuiz = this.state.displayQuiz;\n    const currentQuiz = this.state.currentQuiz\n\n\n\n\n    // redirect to post/SubmitForm\n    if(this.state.submitted===true){\n      return <Redirect to={{ pathname: \"/postSubmitForm\", state: { quizMdp: this.state.quizMdp } }} />\n    }\n\n    \n\n\n\n    return (\n      <div className=\"mainTeacherForm\">\n\n        <Snackbar anchorOrigin={{ vertical :'top', horizontal: 'center' }}open={this.state.open} autoHideDuration={6000} onClose={()=>this.handleClose()}>\n          <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n\n        {\n          this.state.confirmDialog.isOpen && \n          <ConfirmDialogue\n          confirmDialog={this.state.confirmDialog}\n          setConfirmDialog={this.state.confirmDialog}\n          />\n        }\n\n        {(displayQuizzes===false || displayQuizzes) && \n          <div className=\"container-questions\">\n            {(allQuizzes && displayQuizzes) && (\n                <div >\n                    <h4>{'Quizzes Created by : '}</h4>\n                    <h4> {currentUser.message.firstname+\" \"+currentUser.message.lastname}</h4>\n                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n                        <List>\n                        {allQuizzes && allQuizzes.map((quiz, index) => (\n                            <ListItem button  onClick= {()=>this.getQuiz(quiz.quiz_id)}>\n                                <ListItemIcon>\n                                    <BookOutlined />\n                                </ListItemIcon>\n                                <ListItemText primary={\n                                    <h4>\n                                    {quiz.quiz_id} \n                                    </h4>\n                                }/>\n                            </ListItem>\n                        ))}\n                        </List>\n                    </div>\n                </div>\n            )}\n            {(displayQuizzes===false) && (\n              <div>\n                  <h4>{'Quizzes Created by : '}</h4>\n                  <h4> {currentUser.message.firstname+\" \"+currentUser.message.lastname}</h4>\n                  <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n                      <h4>You have not created any quiz</h4>\n                  </div>\n              </div>\n            )}\n            <button className=\"btnn\" onClick={this.createQuiz}>Create new Quiz</button>\n          </div>}\n\n        {(displayQuiz || this.state.edit) && currentQuiz &&\n          <div className=\"container-questions\">\n            <MenuOption options = {this.state.menuOptions}></MenuOption>\n            <button className=\"btnn\"  onClick={this.backToQuizzes}><ArrowBackIcon fontsize=\"large\"/></button> \n\n            {/* <button className=\"btnn\"  onClick={this.deleteQuiz}><DeleteForeverIcon fontsize=\"large\"/></button>  */}\n            {/* <button className=\"btnn\"  onClick={this.editQuiz}>Edit Quiz</button> */}\n            <p>\n                {currentQuiz.quiz + ' is currently ' + (this.state.toggle ? (\"allowed\") : (\"not allowed\")) +\" to be taken\"}             \n                <Switch\n                checked={this.state.toggle}\n                onChange={this.handleToggle}\n                name=\"switch\"\n                inputProps={{\"aria-label\":\"test switch\"}}\n                color=\"primary\"\n                />\n            </p>\n            \n            {(currentQuiz && this.state.edit) && (\n              <div  > \n    \n                <Form id=\"myForm\">\n                  <div className=\"container\">\n                    <div className=\"form-group\">\n                      <center><h4 >{currentQuiz.quiz}</h4><br/></center>\n\n                      <Input\n                              type=\"text\"\n                              className=\"form-control\"\n                              name=\"quiz_id\"\n                              id=\"quiz_id\"\n                              value = {currentQuiz.quiz_id}\n                              readOnly\n                          /> \n                      {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\n                        <div key={questions.question_id}>\n                          <label htmlFor={'Q'+questions.question_id}><strong>{'Question : '+questions.question_id}</strong></label>\n                          <Input\n                              type=\"text\"\n                              className=\"form-control\"\n                              name={'Q'+questions.question_id}\n                              id={'Q'+questions.question_id}\n                              value = {questions.question_title}\n                              // onChange = {this.onChangeTitle}\n                              validations = {[required]}\n                              autoComplete = \"off\"\n                          /> \n\n                          {questions.question_options && questions.question_options.map((options, index) => ( \n                            <div>\n                            <label htmlFor={'Q'+questions.question_id+'E'+options.options_id}><strong>{'Explanation : '+options.options_id}</strong></label>\n                            <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name={'Q'+questions.question_id+'E'+options.options_id}\n                            id={'Q'+questions.question_id+'E'+options.options_id}\n                            value = {options.options_text}\n                            // onChange = {this.onChangeTitle}\n                            validations = {[required]}\n                            autoComplete = \"off\"\n                            />\n                            </div>\n                          ))}                  \n                        </div>\n                      ))}\n                    </div>\n                  </div>   \n                </Form> \n                <button className=\"btnn\" onClick={()=>this.setConfirmDialog(\"update\",this.state.updateTitle,this.state.updateSubTitle)}>Update</button>   \n              </div>\n              \n              )}\n\n              <div >\n                {(currentQuiz && displayQuiz) && (\n                  <div  > \n                    <center><h4>{currentQuiz.quiz}</h4><br/></center>\n                    {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\n                      <div key={questions.question_id}>\n                        <h4>{questions.question_id}{'. '}{questions.question_title}</h4>    \n                      \n                          <div>\n                            {questions.question_options && questions.question_options.map((options, index) => ( \n                              <div>\n                                <label>\n                                  <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\n                                </label>\n                              </div>\n                            ))}\n                          </div>\n                        \n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n          </div>\n        }\n\n\n        <div>\n          {displayCreate && <div> \n            <button className=\"btnn\" onClick={this.backToQuizzes}><ArrowBackIcon fontsize=\"large\"/></button> \n            <div className=\"container\">\n              <header className=\"jumbotron\">\n                <h3>Création de nouvelles questions</h3>\n              </header>\n            </div>\n\n            <Form>\n              <div className=\"container\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"form-title\"><strong>Titre du formulaire</strong></label>\n                    <Input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"form-title\"\n                      value = {title}\n                      onChange = {this.onChangeTitle}\n                      validations = {[required]}\n                      autoComplete = \"off\"\n                    />\n                </div>\n              </div>\n\n\n              {this.createQuestionUI()}\n\n\n              <div className=\"container\">\n                <br></br>\n                <StyledButtonAddQuestion\n                    variant = \"contained\" onClick = {this.onClickAddQuestion}>Ajouter une question\n                </StyledButtonAddQuestion>\n                <br></br><br></br>\n                <StyledButtonSubmit\n                  variant = \"contained\" onClick = {this.handleSubmit}>Valider\n                </StyledButtonSubmit>\n              </div>\n            </Form>\n\n            { this.state.message && \n              <div className=\"container\">\n                <div className=\"itsanerror\"><h3>Une erreur est survenu lors de l'envoi du formulaire</h3></div>\n              </div>\n            }\n          </div>}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nexport default class PostSubmitForm extends Component {\n    render(){\n        if(this.props.location.state === undefined){\n            // console.log(this.props.location); \n            return <Redirect to={{pathname:'/home'}}/>\n        }\n        return(\n            <div>\n                <div className=\"container\">\n                    <header className=\"jumbotron\">\n                        <div className=\"success\">\n                            <h3>Formulaire envoyé avec succès !</h3>\n                            <br></br>\n                            <h5>Voici le code du quizz à partager aux élèves :</h5>\n                            <p className=\"quizMdp\">{\" \" + this.props.location.state.quizMdp}</p>\n                        </div>\n                    </header>\n                </div>\n            </div>\n        );\n    }\n}","import { Bar, HorizontalBar } from 'react-chartjs-2';\n\n\nconst BarChart = ( props ) => {\n\n    const names = props.explanationArray;\n    const explanationLabels = props.explanationLabels;\n    const explanationValues = props.explanationValues;\n    const barData = props.barData;\n    \n\n    return (\n        <div>\n            {(barData === \"Bar\") ? (\n                        <Bar\n                        data={{\n                            labels: explanationLabels,\n                            datasets: [{\n                                data: explanationValues,\n                                backgroundColor: [\n                                    'rgba(255, 99, 132, 1)',\n                                    'rgba(54, 162, 235, 1)',\n                                    'rgba(255, 206, 86, 1)',\n                                    'rgba(75, 192, 192, 1)',\n                                    'rgba(153, 102, 255, 1)',\n                                    'rgba(255, 159, 64, 1)'\n                                ]\n                            }]\n                        }}\n                        options={{\n                            maintainAspectRatio: false,\n                            scales: {\n                                yAxes: [{\n                                    ticks: {\n                                        beginAtZero: true\n                                    }\n                                }]\n                            },\n                            legend: {\n                                display: false\n                            },\n                            tooltips: {\n                                callbacks: {\n                                    label: function(item, data){\n                                        return names[item.index];\n                                    },\n                                    title: function(item, data){\n                                        return;\n                                    }\n                                },\n                                displayColors: false\n                            }\n                        }}\n                    />\n            ): (\n                <HorizontalBar\n                data={{\n                    labels: explanationLabels,\n                    datasets: [{\n                        data: explanationValues,\n                        backgroundColor: [\n                            'rgba(255, 99, 132, 1)',\n                            'rgba(54, 162, 235, 1)',\n                            'rgba(255, 206, 86, 1)',\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(153, 102, 255, 1)',\n                            'rgba(255, 159, 64, 1)'\n                        ]\n                    }]\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }]\n                    },\n                    legend: {\n                        display: false\n                    },\n                    tooltips: {\n                        callbacks: {\n                            label: function(item, data){\n                                return names[item.index];\n                            },\n                            title: function(item, data){\n                                return;\n                            }\n                        },\n                        displayColors: false\n                    }\n                }}\n            />\n            )}\n    \n        </div>\n    );\n}\n \nexport default BarChart;","import { Doughnut, Pie } from 'react-chartjs-2';\n\n\nconst DoughnutChart = ({ labels, answerValues, pieData }) => {\n    return ( \n        <div>\n            {(pieData === \"Doughnut\") ? (\n                <Doughnut\n                    data={{\n                        labels: labels,\n                        datasets: [{\n                            data: answerValues,\n                            backgroundColor: [\n                                'rgba(255, 99, 132, 1)',\n                                'rgba(54, 162, 235, 1)',\n                                'rgba(255, 206, 86, 1)',\n                                'rgba(75, 192, 192, 1)',\n                            ]\n                        }]\n                    }}\n                    options={{\n                        maintainAspectRatio: false\n                    }}\n                />\n            ):(\n                <Pie\n                    data={{\n                        labels: labels,\n                        datasets: [{\n                            data: answerValues,\n                            backgroundColor: [\n                                'rgba(255, 99, 132, 1)',\n                                'rgba(54, 162, 235, 1)',\n                                'rgba(255, 206, 86, 1)',\n                                'rgba(75, 192, 192, 1)',\n                            ]\n                        }]\n                    }}\n                    options={{\n                        maintainAspectRatio: false\n                    }}\n                />\n            )}\n            \n        </div>\n     );\n}\n\nexport default DoughnutChart;","import {useState, useEffect} from 'react';\nimport Axios from 'axios';\n// import {FaTimes} from 'react-icons/fa'\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport SwapHorizRounded from '@material-ui/icons/SwapHorizRounded';import BarChart from './BarChart';\nimport { Container, List, ListItem, ListItemText} from '@material-ui/core';\nimport DoughnutChart from './DoughnutChart';\nimport BookOutlined from '@material-ui/icons/BookOutlined';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\n\nconst AllAnswers = () => {\n    const [allAnswers, setallAnswers] = useState([]);\n    const [currentQuiz, setcurrentQuiz] = useState(null);\n    const [array, setarray] = useState(null);\n    const [answersArray, setanswersArray] = useState();\n    const [explanationsArray, setexplanationsArray] = useState()\n    const [currentStudent, setcurrentStudent] = useState(null)\n    const [explanationStats, setexplanationStats] = useState(null)\n    const [showSpinner, setShowSpinner] = useState(true);\n    const [allQuestions, setAllQuestions] = useState([]);\n    const [allExplanations, setAllExplanations] = useState([]);\n    const [pieData, setPieData] = useState(\"Doughnut\");\n    const [barData, setBarData] = useState(\"Bar\");\n    const [pieTitle, setPieTitle] = useState(\"Graphique en anneau\");\n    const [barTitle, setBarTitle] = useState(\"Diagramme à bandes\");\n\n\n    // FIND ALL ANSWERED QUESTIONS ON PAGE LOAD\n    useEffect(() => {\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllAnswered').then((response) => {\n          console.log(response.data);\n          setallAnswers(response.data);\n          setShowSpinner(false);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }, []);\n\n    //ALTERNATE BETWEEN PIE AND DOUGHNUT CHART\n\n    const handlePieChartChange = () => {\n        if(pieData === \"Doughnut\"){\n            setPieData(\"Pie\")\n            setPieTitle(\"Diagramme circulaire\")\n        }\n        if(pieData === \"Pie\"){\n            setPieData(\"Doughnut\")\n            setPieTitle(\"Graphique en anneau\")\n        }\n    }\n    const handleBarChartChange = () => {\n        if(barData === \"Bar\"){\n            setBarData(\"Horizontal Bar\")\n            setBarTitle(\"Graphique à barres horizontales\")\n        }\n        if(barData === \"Horizontal Bar\"){\n            setBarData(\"Bar\")\n            setBarTitle(\"Diagramme à bandes\")\n        }\n    }\n\n    // SET SELECTED(CLICKED) QUIZ\n    const setActiveQuiz = (quiz, index, quiz_id) => {\n        console.log(quiz)\n        setcurrentQuiz(quiz);\n        getStats(quiz_id);\n        setcurrentStudent(null);\n        setexplanationStats(null);\n        setarray(null);\n\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${quiz_id}`)\n        .then(response => {\n            setAllQuestions(response.data.questions);\n            console.log(response.data.questions);\n        })\n        .catch(err => {\n            console.log(\"An error occurred\", err.response);\n        })\n    }; \n\n    // RETRIEVE GROUPPED DATA FROM THE DATABASE BY SELECTED QUIZ ID \n    const getStats = (quiz_id) => {\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/groupStats/${quiz_id}`)\n        .then(response => {\n            if(response){\n            // SET GROUPPED ANSWERS \"FOR EACH STUDENT\" ARRAY\n            setanswersArray(response.data[0]._id.answer);\n            console.log(response.data[0]._id.answer)\n\n            // SET GROUPPED EXPLANATIONS \"FOR EACH STUDENT\" ARRAY\n            setexplanationsArray(response.data[0]._id.explanation);\n            console.log(response.data[0]._id.explanation)\n            }\n        })\n        .catch()\n    }\n\n    // SET SELECTED(CLICKED) STUDENT ARRAY\n    const setActiveStudent = (student) => {\n        console.log(student)\n        setcurrentStudent(student);\n    }\n\n    // MERGE ALL ANSWERS BY QUESTION NUMBER AND SET COUNT AND STATS\n    const stats = () => {\n        // MERGE ALL ANSWERS INTO AN ARRAY (arrAns)\n        const arrayAns = answersArray[0].map(function(value, index) {\n            const mergeAllStudentsByIndex = [value];\n            if(value){\n                for(let i=1; i<answersArray.length; i++){\n                    mergeAllStudentsByIndex.push(answersArray[i][index])\n                }\n            }\n            console.log(mergeAllStudentsByIndex);\n            return mergeAllStudentsByIndex;\n        });\n        console.log(arrayAns);\n\n         // MERGE ALL EXPLANATIONS INTO AN ARRAY (arrExp)\n        const arrayExp = explanationsArray[0].map(function(explanation, index) {\n            const mergeAllExplanation = [explanation];\n            if(explanation){\n                for(let i =1; i< explanationsArray.length; i++){\n                    mergeAllExplanation.push(explanationsArray[i][index])\n                }\n            }\n\n            return mergeAllExplanation;\n        });\n        console.log(arrayExp)\n        \n        // COUNT NUMBER OF OCCURRENCE OF AN ANSWER(\"Plutot Oui\", \"Non\"... etc) FOR EACH QUESTION\n        const countAnswers = arrayAns.map((answers, index) => {\n            console.log(array)\n            let all = {\n                \"Oui\" : 0,\n                \"Plutot Oui\" : 0,\n                \"Plutot Non\" : 0,\n                \"Non\": 0,\n            };\n            for(const answer of answers){\n                all = {...all,  [answer] : answers.filter((a) => {return a === answer}).length}\n            }\n            return all;\n        })\n        // SET COUNT AS A STATE\n        setarray(countAnswers)\n\n        // GET EXPLANATIONS OF ALL QUESTIONS FOR THE CHART DISPLAY \n        const labelsArray = allQuestions.map((value, index) => {\n            const myArray = value.question_options.map((value, index) => {\n                return value.options_text;\n            })\n            return myArray\n        })\n\n        setAllExplanations(labelsArray);\n        console.log(labelsArray);\n\n        // COUNT NUMBER OF OCCURRENCE OF AN EXPLANATION(\"a\", \"b\", \"c\"... etc) FOR EACH QUESTION\n        const countExplanations = arrayExp.map((array,index) => {\n            //return arr.filter((a) => {return a === \"a\"}).length\n            console.log(array)\n            let all = {\n                a : 0,\n                b : 0,\n                c : 0,\n                d : 0,\n                e : 0\n            }\n            for(const letter of array){\n                all = {...all,  [letter] : array.filter((a) => {return a === letter}).length}\n            }\n\n            return all;\n        })\n        // SET COUNT AS A STATE\n        setexplanationStats(countExplanations);\n        \n    }\n\n    // RETRIEVE INTEGERS(VALUES) FOR EXPLANATIONS\n    const getExplanationValues = (explanation, keys) => {\n        let values = [];\n        keys.forEach(key => {\n            values.push(explanation[key])\n        })\n        return values;\n    }\n    // RETRIEVE INTEGERS(VALUES) FOR Y, MY, MN, N QUESTIONS\n    const getAnswerValues = (answer, keys) => {\n        let values = [];\n        keys.forEach(key => {\n            values.push(answer[key])\n        })\n        return values;\n    }\n\n    //RETRIEVE KEYS(LABELS) FOR CHART DATA\n    const getLabels = object => {\n        return Object.keys(object);\n    }\n\n    // const disp = () => {\n    //     console.log(array);\n    //     console.log(explanationStats)\n    // }\n\n\n\n    return (\n        <div className=\"container-questions\">\n            <h4>Liste de toutes les réponses</h4>\n            {showSpinner && <div class=\"spinner\">\n                <div></div>\n                <div></div>\n            </div>\n            }\n            {!showSpinner && (<div className={`quiz`} style={{borderRadius: \"10px\"}}>\n                <List>\n                    {allAnswers && allAnswers.map((quiz, index) => (\n                        <ListItem button onClick= {() => setActiveQuiz(quiz, index, quiz.quiz_id)} >\n                            <ListItemIcon>\n                                <BookOutlined />\n                            </ListItemIcon>\n                            <ListItemText primary={\n                                 <h4> \n                                     {quiz.quiz_title} {''} \n                                     {/* <FaTimes \n                                         style={{color: 'red', cursor: 'pointer'}}\n                                         //  onClick={() => onDelete(quiz._id)}\n                                     /> */}\n                                 </h4>\n                            } />\n                        </ListItem>\n                    ))}\n                </List>\n            </div>)}\n\n            <div>\n                {currentQuiz ? (\n                    <div>\n                        <center><h4>{'Vous avez sélectionné le quiz : '}{currentQuiz.quiz_id}</h4></center>\n                        \n                        <div >\n                            <h4>{'Liste des étudiants : '}</h4>\n                            {currentQuiz.quiz_answers && currentQuiz.quiz_answers.map((students, index) => (\n                                <div>\n                                    <h4 onClick={() => setActiveStudent(students)}>{students.student_id}</h4>\n                                </div>\n                            ))}\n                        </div>\n\n                        <div>\n                            {currentStudent && (\n                                <div>\n                                    <h4>{'Affichage des réponses sur  : '}{currentStudent.student_id}</h4>\n                                    {currentStudent && currentStudent.student_answers.map((answers, index) => (\n                                        <div> \n                                            <h4>{answers.question_answer_id}{' .'}{answers.answer}</h4>\n                                            <h4>{'Explication : '}{answers.explanation}</h4>\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                        <div style={{marginBottom: \"20px\"}}>\n                            <button className=\"btnn\" onClick={stats}>Cliquez pour les statistiques</button>\n                        </div>\n                        <Container>\n                            {array && (\n                                <div>\n                                    <Grid container spacing={3}>\n                                        {array && array.map((answer, index) => (\n                                            <Grid item sm={12} md={6} lg={4} >\n                                                <Card elevation={2}>\n                                                    <CardHeader\n                                                        action={\n                                                            <IconButton onClick={handlePieChartChange}>\n                                                                <SwapHorizRounded/>\n                                                            </IconButton>\n                                                        }\n                                                        title={pieTitle}\n                                                        subheader={\"Question. \" + (index + 1)} \n                                                    />\n                                                    <CardContent>\n                                                        <DoughnutChart\n                                                        pieData={pieData}\n                                                        labels={getLabels(answer)}\n                                                        answerValues={getAnswerValues(answer, getLabels(answer))} />\n                                                    </CardContent>\n                                                </Card>\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                                        \n                                ) }\n\n                            {explanationStats && (\n                                <div>\n                                        <Grid container spacing={3} >\n                                            {explanationStats && explanationStats.map((explanation, index) => (\n                                                <Grid item sm={12} md={6} lg={6}>\n                                                    <Card elevation={2}>\n                                                        <CardHeader\n                                                        action={\n                                                            <IconButton onClick={handleBarChartChange}>\n                                                                <SwapHorizRounded/>\n                                                            </IconButton>\n                                                        } \n                                                        title={barTitle}\n                                                        subheader={`Question. ${index + 1}`}\n                                                        />\n                                                        <CardContent>\n                                                            <BarChart\n                                                                barData={barData} \n                                                                explanationArray={allExplanations[index]}\n                                                                explanationLabels={getLabels(explanation)}\n                                                                explanationValues={getExplanationValues(explanation, getLabels(explanation))} \n                                                            />\n                                                        </CardContent>\n                                                    </Card>\n                                                </Grid>\n                                            ))}\n                                        </Grid>\n                                </div>         \n                                )}\n                        </Container>    \n                    </div>\n                ) : (<h4>Veuillez sélectionner un quiz pour afficher les réponses</h4>)}\n            </div>   \n        </div>\n    )\n}\n\nexport default AllAnswers;","import {useState, useEffect} from 'react';\nimport Axios from 'axios';\n// import {FaTimes} from 'react-icons/fa'\nimport { List, ListItem, ListItemText, Button, ListItemIcon } from '@material-ui/core';\nimport BookOutlined from '@material-ui/icons/BookOutlined';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\n\nconst AllQuestions = () => {\n    const [allQuizzes, setallQuizzes] = useState([]);\n    const [currentQuiz, setcurrentQuiz] = useState(null);\n    const [radioOptions, setradioOptions] = useState({});\n    const [checkedItems, setCheckedItems] = useState([]); \n    const [displayQuiz, setdisplayQuiz] = useState(false);\n    const [displayQuizzes, setdisplayQuizzes] = useState(true)\n\n    // const [currentUser] = useState(AuthService.getCurrentUser());\n    const [showSpinner, setShowSpinner] = useState(true);\n\n    // LOAD ALL QUIZZES FROM DATABASE ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\n    useEffect(() => {\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllQ').then((response) => {\n          console.log(response.data);\n          setallQuizzes(response.data) \n          setShowSpinner(false);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n    }, []);\n\n    // SET SELECTED(CLICKED) QUIZ\n    const setActiveQuiz = (quiz, index) => {\n        console.log(quiz)\n        setcurrentQuiz(quiz);\n        setdisplayQuizzes(false);\n        setdisplayQuiz(true);\n        \n    };\n\n    const backToQuizzes = () => {\n        setdisplayQuizzes(true);\n        setdisplayQuiz(false);\n    }\n\n    // RETURN CHECKED VALUE(true or false)\n    const checkRadioButton = (question_id, label) => {\n        if (!radioOptions[question_id]) {\n            return false;\n        }\n        return radioOptions[question_id] === label;\n    }\n\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\n    const setradio = (id , answer) => {\n        let checkedArray = checkedItems.map(x => {return {...x}})\n        const find_question = checkedArray.find(a => a.question_answer_id === id);\n        console.log(find_question)\n        if(find_question) {\n            checkedArray.find(a => a.question_answer_id === id).answer = answer;\n            setradioOptions((state) => {\n                console.log(state);\n                return {\n                    ...state,\n                    [id] : answer\n                }\n            });\n            setCheckedItems(checkedArray);\n        }\n        else{\n        setradioOptions((state) => {\n            console.log(state);\n            return {\n                ...state,\n                [id] : answer\n            }\n        });\n\n        setCheckedItems([\n            ...checkedItems,\n             {\n                question_answer_id : id,\n                answer: answer,\n                explanation: 'no explanation'\n            }\n        ]);}\n    }\n\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\n        let checkedArray = checkedItems.map(x => {return {...x}})\n        const find_question = checkedArray.find(a => a.question_answer_id === question_id);\n        console.log(find_question)\n        if(find_question) {\n            checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\n            setCheckedItems(checkedArray);\n        }\n        \n    }\n\n    // SUBMIT ANSWERS TO THE BACKEND  // DISABLED BECAUSE ADMIN MUST NOT SUBMIT\n    // const submitAnswers = () =>{\n    //     setmessage('');\n    //     setsuccessful(false);\n    //     const answers = {\n    //         quiz_id : currentQuiz.quiz_id,\n    //         quiz_title : currentQuiz.quiz,\n    //         quiz_answers : {\n    //             student_id : currentUser.message.email,\n    //             student_answers : checkedItems\n    //         }\n    //     }\n    //     console.log(\"current: \", currentQuiz);\n\n    //     console.log(\"Radio Answer: \", radioOptions);\n    //     console.log(\"CheckedItems: \", checkedItems);\n    //     console.log(\"Final: \", answers);\n    //     Axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\n    //         answers\n    //       }).then((res) => {\n    //             console.log(res);\n    //             if(res){\n    //                 //   window.location.reload(false);\n    //                 setmessage('You submitted Quiz as Admin or Teacher... Please Delete from the answers page else Stats will be affected');\n    //                 setsuccessful(true);\n    //                 setCheckedItems([]);\n    //                 setradioOptions({});\n\n    //             }\n    //       }).catch(error => {\n    //             console.log(error);\n    //             const errMessage =\n    //             (error.response.data.message[0].password || (error.response &&\n    //               error.response.data &&\n    //               error.response.data.message)) ||\n    //             error.message ||\n    //             error.toString();\n    //             console.log(errMessage);\n    //           setmessage(errMessage);\n    //             setsuccessful(false);            \n    //       });\n\n\n    // }\n\n\n\n    //DELETE SLECTED QUIZ WITH THE QUIZ ID FROM DAATABASE\n    // const onDelete = (id) => {\n    //     Axios.delete(`https://neuroeducation-feedback.herokuapp.com/api/delete/${id}`)\n    //     .then((res) => {\n    //         console.log(res)\n    //         setallQuizzes(allQuizzes.filter((question) => question._id !== id))\n    //     })\n    //     .catch(err => {\n    //         console.log(err); \n    //     });\n    // }; \n\n\n    return (\n        <div className=\"container-questions\">\n            {/* html for spinner */}\n            {showSpinner && <div class=\"spinner\">\n                <div></div>\n                <div></div>\n            </div>\n            }\n            {!showSpinner && displayQuizzes && (<div className={`quiz`} style={{borderRadius: \"10px\", marginTop: \"10px\"}}>\n                <List>\n                    <h4>Liste de quiz</h4>\n                    { displayQuizzes && allQuizzes && allQuizzes.map((quiz, index) => (\n                        <ListItem button onClick= {() => setActiveQuiz(quiz, index)} >\n                            <ListItemIcon>\n                                <BookOutlined />\n                            </ListItemIcon>\n                            <ListItemText primary={\n                                <h4> \n                                    {quiz.quiz} {''} \n                                    {/* <FaTimes \n                                        style={{color: 'red', cursor: 'pointer'}}\n                                    /> */}\n                                </h4>\n                            } />\n                        </ListItem>\n                    ))}\n                </List>\n            </div>)}\n\n            <div>\n                {(displayQuiz && currentQuiz )? (\n                    <div>\n                        <Button onClick={()=> backToQuizzes()}><ArrowBackIcon fontsize=\"large\"/></Button> \n                        <center><h4>{currentQuiz.quiz}</h4><br/></center>\n                        {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\n                            <div key={questions.question_id}>\n                                <h4>{questions.question_id}{'. '}{questions.question_title}</h4>    \n                                <div>\n                                    <input \n                                        type=\"radio\" \n                                        value=\"Oui\" \n                                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \n                                    /> Oui\n                                    <input \n                                        type=\"radio\" \n                                        value=\"Plutot Oui\"  \n                                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \n                                    /> Plutot Oui\n                                    <input \n                                        type=\"radio\" \n                                        value=\"Plutot Non\"  \n                                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\n                                    /> Plutot Non\n                                    <input \n                                        type=\"radio\" \n                                        value=\"Non\" \n                                        checked={checkRadioButton(questions.question_id, \"Non\")}  \n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\n                                    /> Non\n                                </div>\n                                {radioOptions[questions.question_id] === \"Plutot Non\"\n                                || radioOptions[questions.question_id] === \"Plutot Oui\"\n                                || radioOptions[questions.question_id] === \"Non\" ? (\n                                    <div>\n                                        {questions.question_options && questions.question_options.map((options, index) => ( \n                                            <div>\n                                                <label>\n                                                    <input type=\"checkbox\" value={options.options_id} \n                                                    checked={checkedItems[options.option_text]}  \n                                                    onChange={(e) => \n                                                        setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\n                                                    }\n                                                    />\n                                                    <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\n                                                </label>\n                                            </div>\n                                        ))}\n                                    </div>\n                                ) : (<span>Aucune explication requise</span>)}\n                            </div>\n                        ))}\n                    </div>\n                ) : (<h4>Veuillez cliquer sur un quiz</h4>)}\n            </div>\n            {/* <Button disableElevation variant=\"contained\" onClick={submitAnswers}>Soumettre les réponses</Button> */}\n\n        </div>\n    )\n}\n\nexport default AllQuestions\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Ce champ est obligatoire !\n            </div>\n        );\n    }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Adresse email non valide.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 50) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\n      </div>\n    );\n  }\n};\n\n\nexport default class AdminRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\n    this.onChangeLastname = this.onChangeLastname.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\n\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      admin: false,\n      teacher: false,\n      roles : [],\n      successful: false,\n      message: \"\",\n      noRoleError: false,\n      mdpTmp: \"\",\n    };\n  }\n\n  onChangeFirstname(e) {\n    this.setState({\n      firstname: e.target.value\n    });\n  }\n  onChangeLastname(e) {\n    this.setState({\n      lastname: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangeCheckbox(e) {\n    let target = e.target;\n    let value = target.checked;\n    let name = target.name;\n    this.setState({\n        [name]: value,\n        noRoleError: false\n    })\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (!this.state.admin && !this.state.teacher) {\n      return (this.setState({\n        noRoleError: true\n      }))\n    }\n    else {\n      let roles = this.state.roles;\n      if (this.state.admin) {\n        roles.push(\"ROLE_ADMIN\");\n      }\n      if (this.state.teacher) {\n        roles.push(\"ROLE_TEACHER\")\n      }\n      this.setState({\n        roles\n      })\n    }\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.adminRegister(\n        this.state.firstname,\n        this.state.lastname,\n        this.state.email,\n        this.state.roles,\n      ).then(\n        response => {\n          this.setState({\n            message: \"Compte créé avec succès\",\n            successful: true,\n            mdpTmp: response.data.mdpTmp\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Prenom</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.firstname}\n                    onChange={this.onChangeFirstname}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Nom</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.lastname}\n                    onChange={this.onChangeLastname}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"form-check\">\n                    <Input\n                      type=\"checkbox\"\n                      className=\"form-check-input\"\n                      name=\"teacher\"\n                      checked={this.state.teacher}\n                      onChange={this.onChangeCheckbox}\n                    />\n                    <label className=\"form-check-label\">\n                    Professeur\n                    </label>\n                  </div>\n                  <div className=\"form-check\">\n                    <Input\n                      type=\"checkbox\"\n                      className=\"form-check-input\"\n                      name=\"admin\"\n                      checked={this.state.admin}\n                      onChange={this.onChangeCheckbox}\n                    />\n                    <label className=\"form-check-label\">\n                    Administrateur\n                    </label>\n                  </div>\n\n                  {this.state.noRoleError && \n                    <div className=\"container\">\n                      <div className=\"itsanerror\">Vous devez sélectionner au moins un rôle</div>\n                    </div>\n                  }\n                </div>\n\n                <div className=\"form-group\">\n                  <button  className=\"btnn\">Créer le compte</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n\n                  {this.state.mdpTmp && (\n                    <div>\n                      <br></br><br></br>\n                      Votre mot de passe temporaire est :\n                      {\" \" + this.state.mdpTmp}\n                      <br></br><br></br>\n                      Vous pourrez le modifier en vous connectant à votre profil\n                    </div>\n                  )}\n                  \n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\n\nconst ProtectedRoute =({ component: Component, role, ...rest })=> {\n        const currentUser = AuthService.getCurrentUser()\n        let isAuthenticated = '';\n        let isAuthorized = false;\n\n        if(currentUser){\n            isAuthenticated = currentUser.token;\n\n            role.map(roles => {\n                if(currentUser.message.roles.includes(roles)){\n                    isAuthorized = true;\n                } \n                return isAuthorized\n            });\n        }\n\n        return (isAuthenticated && (isAuthorized))? (\n            <Component />\n        ) : (\n            <div>\n            <Redirect to={{ pathname: '/home' }} />\n            </div>\n        );\n}\n\nexport default ProtectedRoute;","\nimport { Line } from 'react-chartjs-2';\n\n\nconst LineChart = ({ labels, data }) => {\n    return ( \n        <div>\n            <Line\n                data={{\n                    labels: labels,\n                    datasets: [{\n                        data: data,\n                        borderColor: 'rgba(75, 192, 192, 0.6)'\n                    }]\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    legend: {\n                        display: false\n                    },\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }]\n                    },\n                    tooltips: {\n                        callbacks: {\n                            label: (item, datax) => {\n                                let string = \"\"\n                                switch(data[item.index]){\n                                    case 4:\n                                        string = \"Oui\"\n                                        break\n                                    case 3:\n                                        string = \"Plutot Oui\"\n                                        break\n                                    case 2: \n                                        string = \"Plutot Non\"\n                                        break\n                                    default:\n                                        string = \"Non\"\n                                        break\n                                }\n                                return string\n                            }\n                        }\n                    }\n                }}\n            />\n        </div>\n     );\n}\n \nexport default LineChart;\n","//CREATE LABELS FOR LINE CHART \nconst LineLabels = (integer) => { //integer is == groupArray.length\n    let array = []\n    switch(integer){\n        case 1:\n            array = [\"1er quiz\"];\n            break;\n        case 2:\n            array = [\"1er quiz\", \"2e quiz\"];\n            break;\n        case 3:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\"];\n            break;\n        case 4:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\"];\n            break;\n        case 5:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\"];\n            break;\n        case 6:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\"];\n            break;\n        case 7:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\"];\n            break;\n        case 8:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\"];\n            break;\n        case 9:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\"];\n            break;\n        case 10:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\"];\n            break;\n        case 11:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\"];\n            break;\n        case 12:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\"];\n            break;\n        case 13:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\"];\n            break;\n        case 14:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\"];\n            break;\n        default:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\", \"15e quiz\"];\n            break;\n    }\n    return array;\n  }\n\n  export default LineLabels;\n\n","import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { Avatar, Card, CardContent, CardHeader, Grid, IconButton, List, ListItem, ListItemAvatar, ListItemIcon, ListItemText } from '@material-ui/core';\nimport BookOutlined from '@material-ui/icons/BookOutlined';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport LineChart from './LineChart';\nimport LineLabels from './LineLabels';\nimport SearchService from \"../services/search.service\";\n\n\n\n\nconst AllStudents = () => {\n    const [allStudents, setallStudents] = useState([]);\n    const [allQuizzes, setallQuizzes] = useState(null)\n    // const [message, setmessage] = useState('');\n    const [errorMessage, seterrorMessage] = useState('')\n    // const [successful, setsuccessful] = useState(false);\n    const [displayQuizzes, setdisplayQuizzes] = useState(null);\n    const [displayActiveQuiz, setdisplayActiveQuiz] = useState(false)\n    const [displayEvolution, setdisplayEvolution] = useState(false);\n    const [displayMain, setdisplayMain] = useState(true);\n    const [currentStudent, setcurrentStudent] = useState(null);\n    const [currentQuiz, setcurrentQuiz] = useState(null);\n    const [showSpinner, setShowSpinner] = useState(true);\n    const [lineArray, setLineArray] = useState([]);\n    const [displayLineChart, setDisplayLineChart] = useState(false);\n    const [actualQuiz, setactualQuiz] = useState([]);\n\n    useEffect(() => {\n        axios.get( \"https://neuroeducation-feedback.herokuapp.com/api/findAllStudents\")\n        .then(res => {\n            console.log(res.data);\n            setallStudents(res.data);\n            setShowSpinner(false);\n        })\n        .catch(error => {\n            const resMessage =\n            (error.response && error.response.data && error.response.data.message) \n            || error.message || error.toString();\n  \n            seterrorMessage(resMessage);\n        });\n\n    }, [])\n\n    const getAllQuizzes = (student_id, name) => {\n        setcurrentQuiz(null);\n        setallQuizzes([]);\n        setdisplayQuizzes(null) \n        axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\n            console.log(response.data.quizzes);\n            if((response.data.quizzes).length ){\n                setallQuizzes(response.data.quizzes)\n                setdisplayQuizzes(true); \n            }\n            else{\n                setallQuizzes(null)\n                setdisplayQuizzes(false)  \n            }\n            setActiveStudent(name);\n          })\n          .catch(function (err) {\n              seterrorMessage(err.response.data.message|| err.response.data.message[0].error);\n          });\n    }\n\n\n\n\n\n      // SET SELECTED(CLICKED) QUIZ\n  const setActiveQuiz = (quiz, index) => {\n    console.log(quiz);\n    setdisplayActiveQuiz(true);\n    setcurrentQuiz(quiz);\n    let tempLineArray = [];\n    quiz.quiz_answers.forEach((quiz, index) => {\n        tempLineArray.push(getAllAns(quiz))\n    })\n    setLineArray(tempLineArray)\n\n    \n    setdisplayQuizzes(null);\n\n// GET ACTUAL QUESTIONS FROM DATABASE\nSearchService.searchQuiz(\n    quiz.quiz_id,\n  ).then(\n    response => {\n      console.log(response.data);\n    //   setsuccessful(true);\n      setactualQuiz(response.data);\n    })\n    .catch(\n    error => {\n      console.log(error.response);\n      const resMessage =\n        (error.response && error.response.data && error.response.data.message) \n        || error.message || error.toString();\n\n    //   setmessage(resMessage);\n    //   setsuccessful(false);\n    }\n  );\n  };\n\n  const setActiveStudent = (name) => {\n    console.log(name)\n    setcurrentStudent(name);\n    // setcurrentQuiz(quiz);\n    // setcurrentIndex(index)\n  };\n\n  const backToAllQuizzes = () => {\n    setdisplayQuizzes(true);\n    setdisplayActiveQuiz(false);\n  }\n\n  const evolution = () => {\n    if(displayMain===true && displayEvolution===false){\n        setdisplayMain(false); \n        setdisplayEvolution(true);\n        setDisplayLineChart(true);\n    } \n    else if(displayMain===false && displayEvolution===true){\n        setdisplayMain(true); \n        setdisplayEvolution(false);\n        setDisplayLineChart(false);\n    } \n\n\n  }\n  // CREATE ARRAY CONTAINING ANSWERS OF EACH ATTEMPT\n  const getAllAns = quiz => {\n    let array = []\n    quiz.student_answers.forEach(answers=> {\n        switch(answers.answer){\n            case \"Non\":\n                array.push(1)\n                break\n            case \"Plutot Non\":\n                array.push(2)\n                break\n            case \"Plutot Oui\":\n                array.push(3)\n                break\n            default:\n                array.push(4)\n                break\n        }\n    })\n    return array\n  }\n\n  //GENERATE DATA VALUES FOR LINE CHART \n  const getLineData = (groupArray, index) => {\n    let dataArray = []\n    groupArray.forEach((item) => {\n        dataArray.push(item[index])\n    })\n    return dataArray\n  }\n\n \n \n\n    return (\n    \n        <div className=\"container-questions\">\n            {errorMessage ? (\n                <div className=\"form-group\">\n                    <div\n                    className={ \"alert alert-danger\"}\n                    role=\"alert\"\n                    >\n                    {errorMessage}\n                    </div>\n                </div>\n            ):(\n                <div>\n                    {displayMain  && <div className=\"row\">\n                        <div className=\"col-xs-12 col-sm-12 col-md-6\">\n                            <h3>{'Liste des étudiants : '}</h3>\n                            {showSpinner && (<div class=\"spinner\">\n                                <div></div>\n                                <div></div>\n                            </div>)}\n                            {!showSpinner && (<div  class=\"quiz\" style={{borderRadius: \"10px\"}}>\n                                    <List>\n                                        {allStudents && allStudents.map((student,index) =>(\n                                            <ListItem button onClick={()=> getAllQuizzes(student.email,student.firstname +' ' +student.lastname )}>\n                                                <ListItemAvatar>\n                                                    <Avatar>\n                                                    {(student.firstname[0] +' ' +student.lastname[0]).toUpperCase()}\n                                                    </Avatar>\n                                                </ListItemAvatar>\n                                                <ListItemText primary={<h4>{student.firstname +' ' +student.lastname}</h4>} />\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </div>)}\n                        </div>\n                        <div className=\"col-xs-12 col-sm-12 col-md-6\">  \n                            {(allQuizzes && displayQuizzes) && (\n                                <div >\n                                    <h4>{'Questionnaires auxquels ont répondu : '}</h4>\n                                    <h4> {currentStudent}</h4>\n                                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n                                        <List>\n                                        {allQuizzes && allQuizzes.map((quiz, index) => (\n                                            <ListItem button onClick= {() => setActiveQuiz(quiz, index)}>\n                                                <ListItemIcon>\n                                                    <BookOutlined />\n                                                </ListItemIcon>\n                                                <ListItemText primary={\n                                                    <h4>\n                                                    {quiz.quiz_id} \n                                                    </h4>\n                                                }/>\n                                            </ListItem>\n                                        ))}\n                                        </List>\n                                    </div>\n                                </div>\n                            ) }\n                            {(displayQuizzes===false) && (\n                                <div>\n                                    <h4>{'Questionnaires auxquels ont répondu : '}</h4>\n                                    <h4> {currentStudent}</h4>\n                                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n                                        <h4>Cet étudiant n'a répondu à aucun quiz</h4>\n                                    </div>\n                                </div>\n                            \n                            )}\n                            <div >\n                            {(currentQuiz && displayActiveQuiz) && \n                                <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n                                    <ListItem button>\n                                        <ListItemIcon>\n                                            <BookOutlined />\n                                        </ListItemIcon>\n                                        <ListItemText primary={\n                                            <h4>\n                                            {currentQuiz.quiz_id} \n                                            </h4>\n                                        }/>\n                                    </ListItem>\n                                    <h4>{currentStudent+' has taken this quiz '+ (currentQuiz.quiz_answers.length) +' times'}</h4>\n                                    <button className=\"btnn\" onClick={()=> backToAllQuizzes()}>Back</button>\n                                    <button className=\"btnn\" onClick={()=> evolution()}>{'View Answers & Evolution'}</button>\n                                </div>\n                            }\n                                \n\n                        </div> \n                        </div>\n\n            \n                    </div>\n                    }\n                    <div>\n                        { (currentQuiz && displayEvolution) && <button className=\"btnn\" onClick={()=> evolution()}>Back</button>}\n                        \n                        {/* <div className=\"row\">\n                            \n                            {(currentQuiz && displayEvolution) && currentQuiz.quiz_answers.map((quiz, index)=>(                            \n                                <div className=\"col-xs-12 col-sm-12 col-md-6\">\n                                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n                                        <h4>{'Attempt number ' + (index+1)}</h4>\n                                        {quiz.student_answers.map((answers, idx)=>(\n                                            <div>\n                                            <h4>{'Question '+answers.question_answer_id}</h4>\n                                            <h4>{'answer: ' +answers.answer +' explanation: ' +answers.explanation}</h4>\n                                            </div>\n                                        ))}\n                                    </div>    \n                                </div>  \n                            ))}\n                        </div> */}\n\n                        {displayLineChart && (\n                            <Grid container spacing={3}>\n                                {(lineArray.length && displayLineChart) && lineArray[0].map((attempt, index) => (\n                                    <Grid item md={6} sm={12} lg={6} >\n                                        <Card elevation={2}>\n                                            <CardHeader\n                                                action={\n                                                    <IconButton>\n                                                        <MoreVert />\n                                                    </IconButton>\n                                                }\n                                                title={actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)}\n                                                subheader={`Oui-4 Plutot Oui-3 Plutot Non-2 Non-1`}\n                                            />\n                                            <CardContent>\n                                                <LineChart labels={LineLabels(lineArray.length)} data={getLineData(lineArray, index)} />\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        )}\n                    </div>    \n                </div>)}\n        </div>\n    )\n}\n\nexport default AllStudents\n","import {useState, useEffect} from 'react'\nimport AuthService from \"../services/auth.service\";\n\n\nconst VerifyAccount = ({match: { params }} ) => {\n    const [message, setmessage] = useState('');\n    const [successful, setsuccessful] = useState(false)\n\n    useEffect(() => {\n        AuthService.verifyAccount(params.token)\n        .then(response=>{\n            setmessage(response.data.message);\n            setsuccessful(true);\n        })\n        .catch(error=>{\n            console.log(error)\n            setmessage(error.response.data.message|| error.response.data);\n            setsuccessful(false);\n        })\n    }, [params.token])\n\n\n    return (\n        <div>\n            {message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {message}\n                </div>\n              </div>\n            )}\n        </div>\n    )\n}\n\nexport default VerifyAccount\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 140,\n    },\n  });\n\nconst AdminDashboard = () => {\n    let history = useHistory(); \n    const classes = useStyles();\n\n\n    const routeChange = (path, item) =>{\n    let newPath = path;\n    if(item===\"DATABASE\"){\n        return window.location.href = newPath;\n    }\n    history.push(newPath);\n  }\n\n  const childRoute = route =>{\n    if(route===\"USER\"){\n        window.location.href = 'http://localhost:5050/admin/resources/User'\n    }\n    else if(route===\"QUIZZES\"){\n        window.location.href = 'http://localhost:5050/admin/resources/Quizzes'\n    }\n    else if(route===\"HISTORY\"){\n        window.location.href = 'http://localhost:5050/admin/resources/history'\n    }\n  }\n\n  const dashboardArray = [\n      {\n        title: \"ADD ACCOUNT\",\n        path: '/adminRegister',\n        children: [],\n        message: \"Add a new Admin or Teacher into the Database. Note this new administrator will have all privilleges\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <SupervisorAccountIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n    },\n    {\n        title: \"EVOLUTION \",\n        path: '/students',\n        children: [],\n        message: \"As an admin or teacher, view all students progress with a few clicks\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <TrackChangesIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n    },\n    {\n        title: \"ALL QUIZZES\",\n        path: '/questions',\n        children: [],\n        message: \"A list of all quizzes in the database. View all with a few clicks\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <AssignmentIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n    },    \n    {\n        title: \"ALL ANSWERS\",\n        path: '/answers',\n        children: [],\n        message: \"A history of all student answers in the database. View all with a few clicks\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <RecentActorsIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n    },\n    {\n        title: \"DASHBOARD\",\n        path: '/dashboard',\n        children: [],\n        message: \"A link to the admin dashboard where you can see everything\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <DashboardIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n    },\n    {\n        title: \"DATABASE\",\n        path: 'https://neuroeducation-feedback.herokuapp.com/admin/',\n        children: ['USER', 'QUIZZES', 'HISTORY'],\n        message: \"This is a special page for the Admin. In desperate times of Database management this is a place to go.\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <StorageIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n    },\n  ]\n\n  return (\n    <>\n        <div className=\"col-xs-12 col-sm-12 col-md-12\">\n            <div className=\"row\">\n                {dashboardArray && dashboardArray.map(item => (\n                    <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"> \n                        <Card className={classes.root} style={{height:280, padding: \"20px\", \"margin-bottom\": \"10px\"}}>\n                            <CardActionArea>\n                                {/* <CardMedia\n                                className={classes.media}\n                                image=\"/static/images/cards/contemplative-reptile.jpg\"\n                                title=\"Contemplative Reptile\"\n                                /> */}\n                                <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" >\n                                    {/* <div className=\"row\" >\n                                        hii\n                                    {Parser(item.icon)}\n                                    </div> */}\n                                    {item.title}\n                                    {item.icon}\n                                    {/* <StorageIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" /> */}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                {item.message}\n                                </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                <Button size=\"small\" style={{background:\"#C2EDCE\"}} onClick={()=>routeChange(item.path, item.title)}>\n                                GO TO\n                                </Button>\n                                {item.children && item.children.map(child=> (\n                                    <Button size=\"small\" style={{background:\"#C2EDCE\"}} onClick={()=>childRoute(child)}>\n                                        {child}\n                                    </Button>\n                                 ))\n                                }\n                            </CardActions>\n                        </Card>\n                    </div>\n                ))\n   }\n            </div>\n        </div>\n    </>\n  );\n};\n\nexport default AdminDashboard;\n","import React, {useEffect} from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\n// import HomeIcon from '@material-ui/icons/Home';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function TemporaryDrawer(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  useEffect(() => {\n      console.log(props)\n  }, [props])\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n      style={{background:\"#e6e6d5\"}}\n    >\n\n    <List style={{\"paddingTop\": \"30px\", background: \"#388087\"}}>\n        <ListItem button key={\"home\"} style={{color: 'white'}}>\n            <ListItemIcon> <MenuIcon style={{color: 'white'}}fontsize=\"large\"/></ListItemIcon>\n            <ListItemText primary={\"MENU\"} />   \n          </ListItem>\n \n      </List>\n      <List >\n        {props.lists && (props.lists).map((text, index) => (\n         <Link to={text.link} style={{color: '#388087', textDecoration: 'none'}}>   \n          <ListItem button key={text.title}>\n            <ListItemIcon>{text.icon}</ListItemIcon>\n            <ListItemText primary={text.title} />   \n          </ListItem>\n         </Link> \n        ))}\n      </List>\n      {/* <Divider /> */}\n      <List style={{position: \"absolute\",bottom: 0}}>\n        {props.actions.map((text, index) => (\n         <Link to={text.link} onClick={text.onclick} style={{color: '#388087', textDecoration: 'none'}}>   \n            <ListItem button key={text.title}>\n                <ListItemIcon>{text.icon}</ListItemIcon>\n                <ListItemText primary={text.title} />   \n            </ListItem>\n        </Link>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div >\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)}><MenuIcon style={{color:\"white\",  float:\"left\"}} fontSize=\"large\"></MenuIcon></Button>\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)} style={{background:\"#e6e6d5\"}}>\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Component } from \"react\";\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n// import axios from 'axios';\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Home2 from \"./components/home2.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\nimport PostSubmitForm from \"./components/postSubmitForm.component\";\nimport AllAnswers from \"./components/all-answers.component\";\nimport AllQuestions from './components/allquestions.component';\nimport AdminRegister from \"./components/admin-register.component\";\nimport { Button } from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport ProtectedRoute from \"./components/protected-routes.component\";\nimport AllStudents from \"./components/all-students.component\";\nimport VerifyAccount from \"./components/verify-account.component\";\nimport AdminDashboard from \"./components/Admin/admin-dashboard\";\nimport TemporaryDrawer from \"./components/navbar\";\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nconst theme = createMuiTheme({\n  palette:{\n    primary: {\n      main: \"#DCDCDC\"\n    }\n  }\n})\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showAdminBoard: false,\n      showTeacherBoard: false,\n      currentUser: undefined,\n      admin:[\"ROLE_ADMIN\"],\n      adminTeacher:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\"],\n      allUsers:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\" , \"ROLE_STUDENT\"],\n      studentAdmin: [\"ROLE_STUDENT\", \"ROLE_ADMIN\"]\n    };\n  }\n\n  componentDidMount() {\n\n    \n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showAdminBoard: user.message.roles.includes(\"ROLE_ADMIN\"),\n        showTeacherBoard: user.message.roles.includes(\"ROLE_TEACHER\"),\n        navList : [\n        // {\n        //   title : \"Accueil\",\n        //   link : '/home'\n        // },\n        (user && !user.message.roles.includes(\"ROLE_TEACHER\")) && {\n          title : \"UTILISATEUR\",\n          link : '/user',\n          icon: <FindInPageIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n        },\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\") ) && {\n          title : \"ADD QUIZ\",\n          link : '/addQuiz',\n          icon: <AddBoxIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n        },\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {\n          title : \"PAGE QUESTIONS\",\n          link : '/questions',\n          icon: <SupervisorAccountIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n        },\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {            \n          title : \"PAGE REPONSES\",\n          link : '/answers',\n          icon: <AssignmentIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n        },\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {            \n          title : \"PAGE ETUDIANTS\",\n          link : '/students',\n          icon: <RecentActorsIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n        },\n        user.message.roles.includes(\"ROLE_ADMIN\")  && {\n          title : \"ADMIN DASHBOARD\",\n          link : '/dashboard',\n          icon: <DashboardIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n        }\n\n        \n      ],\n      actions : [user &&  {\n          title : (user.message.firstname.toUpperCase()),\n          link : '/profile',\n          onclick : '',\n          icon: <AccountCircleIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n        },\n        user &&  {\n          title : \"DECONNEXION\",\n          link : '/home',\n          onclick : this.logOut,\n          icon: <ExitToAppIcon style={{color:\"#388087\",  float:\"right\"}} fontSize=\"large\" />\n        }\n      ]\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n    this.setState({\n      currentUser: undefined,\n      showAdminBoard: false,\n      showTeacherBoard: false\n    })\n    if (!this.state.currentUser) {  \n      return <Redirect to=\"/home\" />;\n    }\n  }\n\n  render() {\n    //  const { currentUser, showAdminBoard, showTeacherBoard, admin, adminTeacher, allUsers, student, navList } = this.state;\n    const { currentUser, admin, adminTeacher, allUsers, studentAdmin, navList } = this.state;\n\n    return (\n      <ThemeProvider theme={theme}>\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark \" style={{background:'#388087'}}>\n            \n            {currentUser && \n              <TemporaryDrawer lists = {navList} actions={this.state.actions}></TemporaryDrawer>\n              }\n\n            <Link to={\"/\"} className=\"navbar-brand\">\n              Outsmarted\n            </Link>\n            \n            {/* <div className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/home\"} className=\"nav-link\">\n                  <Button color=\"primary\">Accueil</Button>\n                </Link>\n              </li>\n\n              {(showAdminBoard || showTeacherBoard) && (\n                <div>\n                  <li className=\"nav-item\">\n                    <Link to={\"/admin\"} className=\"nav-link\">\n                      <Button color=\"primary\">Ajouter un quiz</Button>\n                    </Link>\n                  </li>\n                </div> \n              )}\n\n              {showAdminBoard && (\n                <li className=\"nav-item\">\n                  <Link to={\"/adminRegister\"} className=\"nav-link\">\n                    <Button color=\"primary\">Ajouter un compte</Button>\n                  </Link>\n                </li>\n              )}\n\n              {(showAdminBoard || showTeacherBoard) && (\n                <div>\n                  <li className=\"nav-item\">\n                    <Link to={\"/questions\"} className=\"nav-link\">\n                      <Button color=\"primary\">Page Questions</Button>\n                    </Link>\n                  </li>\n                </div> \n              )}\n\n              {(showAdminBoard || showTeacherBoard) && (\n                <div>\n                  <li className=\"nav-item\">\n                    <Link to={\"/answers\"} className=\"nav-link\">\n                      <Button color=\"primary\">Page Réponses</Button>\n                    </Link>\n                  </li>\n                </div> \n              )}\n\n              {(showAdminBoard || showTeacherBoard) && (\n                <div>\n                  <li className=\"nav-item\">\n                    <Link to={\"/students\"} className=\"nav-link\">\n                      <Button color=\"primary\">Page Etudiants</Button>\n                    </Link>\n                  </li>\n                </div> \n              )}\n\n                {(currentUser && !showTeacherBoard) && (\n                <li className=\"nav-item\">\n                  <Link to={\"/user\"} className=\"nav-link\">\n                    <Button color=\"primary\">Répondre à un quiz</Button>\n                  </Link>\n                </li>\n                )}\n\n                {showAdminBoard  && (\n                <li className=\"nav-item\">\n                  <Link to={\"/dashboard\"} className=\"nav-link\">\n                    <Button color=\"primary\">TEST</Button>\n                  </Link>\n                </li>\n                )}\n            </div> */}\n\n            {currentUser ? (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/profile\"} className=\"nav-link\">\n                    <Button color=\"primary\"><AccountCircleIcon style={{color:\"white\",  float:\"right\"}} fontSize=\"large\" />{currentUser.message.firstname}</Button>\n                  </Link>\n                </li>\n                {/* <li className=\"nav-item\">\n                  <Link to={\"/home\"} className=\"nav-link\" onClick={this.logOut}>\n                    <Button color=\"primary\">Déconnexion</Button>\n                  </Link>\n                </li> */}\n              </div>\n            ) : (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/login\"} className=\"nav-link\">\n                    <Button color=\"primary\">Se connecter</Button>\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link to={\"/register\"} className=\"nav-link\">\n                    <Button color=\"primary\">Créer un compte</Button>\n                  </Link>\n                </li>\n              </div>\n            )}\n\n            </nav>\n\n            <div className=\"container pt-3\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/home\" component={Home2} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/verifyAccount/:token\" component={VerifyAccount} />\n                <Route exact path=\"/postSubmitForm\" component={PostSubmitForm}/>\n                <ProtectedRoute exact path=\"/adminRegister\" component={AdminRegister} role={admin}/>\n                <ProtectedRoute exact path=\"/profile\" component={Profile} role={allUsers}/>\n                <ProtectedRoute exact path=\"/user\" component={BoardUser} role={studentAdmin}/>\n                <ProtectedRoute exact path=\"/questions\" component={AllQuestions} role={adminTeacher}/>\n                <ProtectedRoute exact path=\"/answers\" component={AllAnswers} role={adminTeacher}/>\n                <ProtectedRoute exact path=\"/students\" component={AllStudents} role={allUsers}/>\n                <ProtectedRoute exact path=\"/addQuiz\" component={BoardAdmin} role={adminTeacher}/>\n                <ProtectedRoute exact path=\"/dashboard\" component={AdminDashboard} role={admin}/>\n                <ProtectedRoute  component={Home} />\n              </Switch>\n            </div>\n          \n\n        </div>\n      </ThemeProvider>\n    );\n\n  }\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// serviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}