{"version":3,"sources":["services/auth.service.js","components/formCard.js","components/login.component.js","components/register.component.js","components/home.component.js","components/home2.component.js","components/modifyPassword.component.js","components/profile.component.js","services/search.service.js","components/Title.js","components/board-user.component.js","services/admin-submit-form.js","components/confirm-dialogue.js","components/menu.js","components/board-admin.component.js","components/postSubmitForm.component.js","components/BarChart.js","components/DoughnutChart.js","components/Flippy.js","components/all-answers.component.js","components/allquestions.component.js","components/admin-register.component.js","components/protected-routes.component.js","components/LineChart.js","components/LineLabels.js","components/Paginate.js","components/all-students.component.js","components/verify-account.component.js","components/Admin/admin-dashboard.jsx","components/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","email","password","axios","post","then","response","console","log","data","token","localStorage","setItem","JSON","stringify","removeItem","firstname","lastname","password_confirmation","roles","old_password","parse","getItem","useStyles","makeStyles","theme","root","display","details","flexDirection","content","flex","cover","width","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","FormCard","float","useTheme","Card","style","maxHeight","backgroundImage","maxWidth","margin","marginTop","backgroundColor","minWidth","Login","props","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","e","this","setState","target","value","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","className","onSubmit","ref","c","padding","paddingTop","role","htmlFor","color","TextField","size","onChange","variant","fullWidth","required","marginBottom","disabled","onClick","pathname","border","Component","isEmail","vlastname","vfirstname","vpassword","vpasswordConfirmation","Register","handleRegister","onChangeFirstname","onChangeLastname","onChangePasswordConfirmation","successful","register","clear","name","validations","Home","Home2","title","description","textAlign","borderRadius","src","alt","ModifyPassword","useState","oldPw","setOldPw","newPw","setNewPw","confirmNewPw","setConfirmNewPw","setmessage","setsuccessful","userEmail","placeholder","oldPass","newPass","confirmPass","changePassword","res","catch","errMessage","Profile","currentUser","getCurrentUser","substring","substr","_id","map","index","id","get","answers","Title","noUnderline","subHeader","Typography","Alert","elevation","field","BoardUser","search","setsearch","errorMessage","seterrorMessage","currentQuiz","setcurrentQuiz","radioOptions","setradioOptions","checkedItems","setCheckedItems","allQuizzes","setallQuizzes","displayAllAnswered","setdisplayAllAnswered","validate","setvalidate","useEffect","student_id","quizzes","err","checkRadioButton","question_id","label","setradio","answer","checkedArray","x","find_question","find","a","question_answer_id","explanation","handleClose","SearchService","searchQuiz","quiz","CardHeader","avatar","Avatar","quiz_id","toUpperCase","CardContent","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","severity","questions","indexx","fontSize","question_title","type","checked","question_options","options","options_id","option_text","setCheckbox","options_text","timestamp","Date","now","formatedTimestamp","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","quiz_title","quiz_answers","student_answers","time_submitted","created_by","ConfirmDialogue","confirmDialog","Dialog","isOpen","DialogTitle","DialogContent","subTitle","DialogActions","onDiscard","onConfirm","MenuOption","React","anchorEl","setAnchorEl","Boolean","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","PaperProps","ITEM_HEIGHT","option","MenuItem","selected","onclick","icon","withStyles","background","boxShadow","textTransform","Button","MyForm","onChangeQuestion","onClickAddExplanation","delete","explanations","onQuestionChange","indexExplanation","onExplanationChange","onRemoveExplanationClick","onAddExplanationClick","element","onChangeExplanation","Tooltip","onClickRemoveExplanation","question","deleteQuiz","autoComplete","createExplanationUI","BoardAdmin","createQuiz","laststate","displayQuizzes","displayCreate","displayQuiz","backToQuizzes","edit","getQuiz","quiz_idd","toggle","allow","setConfirmDialog","subtitle","onconfirm","discard","handleToggle","allowQuiz","success","updateQuiz","updated_questions","i","document","getElementById","expArr","j","alphabet","String","fromCharCode","expId","exp","danger","filter","editQuiz","onClickAddQuestion","onChangeTitle","handleSubmit","test","undefined","submitted","quizMdp","updateTitle","updateSubTitle","user","menuOptions","fontsize","alert","indexQuestion","prevState","splice","PostForm","submit","handleQuestionChange","onTitleChange","handleTitleChange","handleExplanationChange","handleAddExplanationClick","handleRemoveExplanationClick","onClickDelQuestion","to","SnackbarContent","position","top","action","Switch","inputProps","readOnly","fontWeight","createQuestionUI","PostSubmitForm","BarChart","names","explanationArray","explanationLabels","explanationValues","barData","labels","datasets","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","legend","tooltips","callbacks","item","displayColors","DoughnutChart","answerValues","pieData","FlippyItems","frontSide","backSide","flipOnHover","flipOnClick","flipDirection","marginRight","AllAnswers","allAnswers","setallAnswers","array","setarray","answersArray","setanswersArray","explanationsArray","setexplanationsArray","currentStudent","setcurrentStudent","explanationStats","setexplanationStats","showSpinner","setShowSpinner","allQuestions","setAllQuestions","allExplanations","setAllExplanations","setPieData","setBarData","setPieTitle","setBarTitle","displayAllQuizzes","setdisplayAllQuizzes","displayStudentList","setdisplayStudentList","displayStats","setdisplayStats","actualQuiz","setactualQuiz","Axios","handlePieChartChange","handleBarChartChange","getStats","handleStudentList","stats","arrayAns","mergeAllStudentsByIndex","arrayExp","mergeAllExplanation","countAnswers","all","labelsArray","countExplanations","b","d","letter","getExplanationValues","keys","values","forEach","key","getAnswerValues","getLabels","object","Object","class","Flippy","onMouseOver","setActiveQuiz","students","student","Container","Grid","container","sm","md","lg","subheader","AllQuestions","setdisplayQuiz","setdisplayQuizzes","List","vusername","AdminRegister","onChangeCheckbox","admin","teacher","noRoleError","mdpTmp","adminRegister","ProtectedRoute","component","isAuthenticated","isAuthorized","includes","LineChart","borderColor","datax","string","LineLabels","integer","Paginate","allStudents","getAllQuizzes","evolution","start","setStart","end","setEnd","expanded","setExpanded","slice","Accordion","panel","isExpanded","AccordionSummary","expandIcon","marginLeft","AccordionDetails","Chip","startIcon","old","newStart","newEnd","endIcon","AllStudents","setallStudents","setdisplayActiveQuiz","displayEvolution","setdisplayEvolution","displayMain","setdisplayMain","lineArray","setLineArray","displayLineChart","setDisplayLineChart","setActiveStudent","getAllAns","getLineData","groupArray","dataArray","tempLineArray","attempt","VerifyAccount","params","match","verifyAccount","media","AdminDashboard","useHistory","classes","dashboardArray","path","children","actions","one","two","CardActionArea","gutterBottom","CardActions","newPath","href","routeChange","child","route","list","fullList","TemporaryDrawer","left","bottom","right","toggleDrawer","anchor","clsx","onKeyDown","ListItem","button","ListItemIcon","ListItemText","primary","lists","text","link","textDecoration","Fragment","Drawer","createMuiTheme","palette","main","App","logOut","showAdminBoard","showTeacherBoard","adminTeacher","allUsers","studentAdmin","navList","logout","ThemeProvider","font","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.5d5d2b21.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\n// const API_URL = \"http://localhost:5050/api/\";\n\nclass AuthService {\n  login(email, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        email,\n        password\n      })\n      .then(response => {\n        console.log(response.data);\n\n        if (response.data.token) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(firstname, lastname, email, password, password_confirmation) {\n    return axios.post(API_URL + \"signup\", {\n      firstname, \n      lastname, \n      email, \n      password, \n      password_confirmation\n    });\n  }\n\n  verifyAccount(token) {\n    return axios.post(API_URL + \"verifyAccount\", {\n      token\n    });\n  }\n\n  adminRegister(firstname, lastname, email, roles) {\n    return axios\n    .post(API_URL + \"signup\", {\n      firstname,\n      lastname,\n      email,\n      roles\n    });\n  }\n\n  changePassword(email, old_password, password, password_confirmation) {\n    return axios\n    .post(API_URL + \"changePassword\", {\n      email, \n      old_password, \n      password, \n      password_confirmation\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nexport default function FormCard({content, float}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card style={{ height: \"680px\", maxHeight:\"700\", width: \"100%\", backgroundImage: `url(${\"/blueBG.png\"})`, maxWidth:\"890px\",  margin: \"auto\", marginTop:\"70px\"}}\n    >\n      <div style={{backgroundColor: \"white\", height: \"100%\",  maxWidth:\"480px\", minWidth:\"300px\", float: float}}>\n            {content}\n      </div>\n    </Card>\n  );\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\nimport FormCard from './formCard'\nimport TextField from '@material-ui/core/TextField';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { useHistory } from \"react-router-dom\"\n\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Ce champ est obligatoire !\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.email, this.state.password).then(\n        () => {\n          this.props.history.push(\"/\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        \n\n\n        <div >\n            \n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n\n            <FormCard\n              content={\n            <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"70px\", paddingBottom:\"60px\"}}>\n              {this.state.message && (\n                <div className=\"form-group\">\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {this.state.message}\n                  </div>\n                </div>\n              )}\n              <h2 style={{marginTop: \"30px\"}}>Bienvenue sur la page de connexion</h2>\n              <p>C'est génial que tu sois de retour</p>\n\n              <div style={{marginTop: \"50px\"}}>\n                {/* <FormLabel style={{marginTop: \"30px\", color:\"black\"}}><strong >Email</strong></FormLabel> */}\n                <label htmlFor=\"email\" style={{marginTop: \"30px\", color:\"black\"}}><strong>Email de l'utilisateur</strong></label>\n                <TextField\n                      size=\"small\"\n                      onChange={this.onChangeEmail}\n                      value={this.state.email}\n                      variant=\"outlined\"\n                      fullWidth\n                      required //just adds the asterix\n                  />\n                {/* <FormLabel style={{marginTop: \"30px\", color:\"black\"}}><strong >Password</strong></FormLabel> */}\n                <label htmlFor=\"password\" style={{marginTop: \"30px\", color:\"black\"}}><strong>Mot de passe</strong></label>\n                <TextField\n                      size=\"small\"\n                      value={this.state.password}\n                      onChange={this.onChangePassword}\n                      variant=\"outlined\"\n                      fullWidth\n                      required //just adds the asterix\n                      \n                  />\n                </div>  \n                <div>\n                {/* <span style={{float:\"left\", marginTop: \"30px\", marginBottom: \"30px\"}}>Remember me?</span> */}\n                <span style={{width: \"100%\", float:\"right\", marginTop: \"30px\", marginBottom: \"30px\"}}>Mot de passe oublié ?</span>\n                </div>\n                <div style={{marginTop: \"15px\", width: \"100%\"}}>\n                  <button \n                  className=\"btnn\" style={{\"font-size\" : \"12px\", width: \"45%\"}}\n                  disabled={this.state.loading}\n                  >\n                    {this.state.loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                    )}\n                    SE CONNECTER\n                    </button>\n                  <button\n                  onClick={() =>  this.props.history.push({\n                       pathname: \"/register\",\n                     })}\n                  className=\"btnn\" \n                  style={{\"font-size\" : \"12px\", backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\", width: \"45%\"}}>CREER EN COMPTE</button>\n                </div>\n            </div>\n              }\n              float=\"left\"\n            />\n\n              {/* <label htmlFor=\"email\">Email de l'utilisateur</label>\n              <Input\n                type=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.onChangeEmail}\n                validations={[required]}\n              /> */}\n            </div>\n\n            {/* <div className=\"form-group\">\n              <label htmlFor=\"password\">Mot de passe</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div> */}\n{/* \n            <div className=\"form-group\">\n              <button\n                className=\"btnn\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Se connecter</span>\n              </button>\n            </div> */}\n{/* \n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )} */}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport FormCard from './formCard'\nimport TextField from '@material-ui/core/TextField';\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Ce champ est obligatoire !\n            </div>\n        );\n    }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Adresse email non valide.\n      </div>\n    );\n  }\n};\n\nconst vlastname = value => {\n  if (value.length < 3 || value.length > 50) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\n      </div>\n    );\n  }\n};\n\nconst vfirstname = value => {\n  if (value.length < 3 || value.length > 50) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 50) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Le mot de passe doit contenir entre 6 et 50 charactères.\n      </div>\n    );\n  }\n};\nconst vpasswordConfirmation = value => {\n  if (value.length < 3 || value.length > 50) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\n    this.onChangeLastname = this.onChangeLastname.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangePasswordConfirmation = this.onChangePasswordConfirmation.bind(this);\n\n    this.state = {\n      lastname: \"\",\n      firstname: \"\",\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  // onChangeUsername(e) {\n  //   this.setState({\n  //     username: e.target.value\n  //   });\n  // }\n\n  onChangeFirstname(e) {\n    this.setState({\n      firstname: e.target.value\n    });\n  }\n\n  onChangeLastname(e) {\n    this.setState({\n      lastname: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangePasswordConfirmation(e) {\n    this.setState({\n      password_confirmation: e.target.value\n    });\n  }\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.firstname,\n        this.state.lastname,\n        this.state.email,\n        this.state.password,\n        this.state.password_confirmation,\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n          console.log(this.state);\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div >\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n\n<FormCard\n                  content={\n                <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"50px\", paddingBottom:\"60px\", clear: \"both\" }}>\n                  {this.state.message && (\n                    <div className=\"form-group\">\n                      <div\n                        className={\n                          this.state.successful\n                            ? \"alert alert-success\"\n                            : \"alert alert-danger\"\n                        }\n                        role=\"alert\"\n                      >\n                        {this.state.message}\n                      </div>\n                    </div>\n                  )}\n                  <h2>Bienvenue sur la page d'inscription</h2>\n\n                  <div style={{marginTop: \"20px\"}}>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"firstname\" style={{marginTop: \"20px\", color:\"black\"}}><strong>Prenom</strong></label>\n                      <TextField\n                          size=\"small\"\n                          name=\"firstname\"\n                          value={this.state.firstname}\n                          onChange={this.onChangeFirstname}\n                          validations={[required, vfirstname]}\n                          variant=\"outlined\"\n                          fullWidth\n                          required //just adds the asterix\n                      />\n                    </div>\n\n                    <div className=\"form-group\">  \n                      <label htmlFor=\"lastname\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Nom</strong></label>\n                      <TextField\n                            size=\"small\"\n                            name=\"lastname\"\n                            value={this.state.lastname}\n                            onChange={this.onChangeLastname}\n                            validations={[required, vlastname]}\n                            variant=\"outlined\"\n                            fullWidth\n                            required //just adds the asterix\n                      />\n                    </div>\n\n                    <div className=\"form-group\">    \n                      <label htmlFor=\"email\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Email</strong></label>\n                      <TextField\n                            size=\"small\"\n                            name=\"email\"\n                            onChange={this.onChangeEmail}\n                            value={this.state.email}\n                            variant=\"outlined\"\n                            fullWidth\n                            required //just adds the asterix\n                            validations={[required, email]}\n                      />\n                    </div> \n\n                    <div className=\"form-group\">    \n                      <label htmlFor=\"password\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Mot de passe</strong></label>\n                      <TextField\n                            size=\"small\"\n                            name=\"password\"\n                            value={this.state.password}\n                            onChange={this.onChangePassword}\n                            validations={[required, vpassword]}\n                            variant=\"outlined\"\n                            fullWidth\n                            required //just adds the asterix \n                      />\n                    </div>\n\n                    <div className=\"form-group\">    \n                      <label htmlFor=\"password_confirmation\" style={{marginTop: \"10px\", color:\"black\"}}><strong> Confirmer Mot de passe</strong></label>\n                      <TextField\n                            size=\"small\"\n                            name=\"password_confirmation\"\n                            value={this.state.password_confirmation}\n                            onChange={this.onChangePasswordConfirmation}\n                            validations={[required, vpasswordConfirmation]}\n                            variant=\"outlined\"\n                            fullWidth\n                            required //just adds the asterix \n                      />\n                    </div>\n\n                  </div>  \n\n                  <div style={{marginTop: \"15px\", width: \"100%\"}} className=\"form-group\">\n                    <button\n                    onClick={() =>  this.props.history.push({\n                      pathname: \"/login\",\n                    })} \n                    className=\"btnn\" style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\",\"font-size\" : \"12px\", width: \"44%\"}}\n                    disabled={this.state.loading}\n                    >\n                      {this.state.loading && (\n                      <span className=\"spinner-border spinner-border-sm\"></span>\n                      )}\n                      SE CONNECTER\n                      </button> \n                    <button \n                    className=\"btnn\" \n                    style={{\"font-size\" : \"12px\", width: \"45%\"}} \n                    >\n                      CREER EN COMPTE\n                      </button>\n                  </div>\n                </div>\n                  }\n                  float=\"right\"\n                />\n\n                {/* <div className=\"form-group\">\n                  <label htmlFor=\"firstname\">Prenom</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"firstname\"\n                    value={this.state.firstname}\n                    onChange={this.onChangeFirstname}\n                    validations={[required, vfirstname]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"lastname\">Nom</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"lastname\"\n                    value={this.state.lastname}\n                    onChange={this.onChangeLastname}\n                    validations={[required, vlastname]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password_confirmation\">Confirmer Mot de passe</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password_confirmation\"\n                    value={this.state.password_confirmation}\n                    onChange={this.onChangePasswordConfirmation}\n                    validations={[required, vpasswordConfirmation]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btnn\">Créer le compte</button>\n                </div> */}\n              </div>\n            )}\n\n            {/* {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )} */}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // UserService.getPublicContent().then(\n    //   response => {\n    //     this.setState({\n    //       content: response.data.body\n    //     });\n    //   },\n    //   error => {\n    //     this.setState({\n    //       content:\n    //         (error.response && error.response.data) ||\n    //         error.message ||\n    //         error.toString()\n    //     });\n    //   }\n    // );\n    this.setState({\n      content: \"Bienvenue dans votre application de Neuroéducation\"\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Home2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      description: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      title: \"Bienvenue dans votre application de Neuroéducation\",\n      description: \"Cette application permet aux élèves de prendre conscience de leurs stratégies de réussite et des potentielles origines de leurs erreurs\"\n    })\n  }\n\n  render() {\n    return (\n        <div>\n            <div className=\"container\">\n                <header className=\"jumbotron\">\n                    <h3>{this.state.title}</h3>\n                </header>\n            </div>\n            <div className=\"container\">\n                <h5>{this.state.description}</h5>\n                <div style={{textAlign: \"center\", marginTop: \"20px\"}}>\n                  <img style={{height: \"500px\", width: \"500px\", borderRadius: \"10px\"}} src=\"/brain-storming.png\" alt=\"students brainstorming\"/>\n                </div>\n            </div>\n        </div>\n      \n    );\n  }\n}","import {useState} from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\n// import CheckButton from \"react-validation/build/button\";\n// import React, { Component } from \"react\";\n\nimport AuthService from '../services/auth.service'\n\n\n\n// const currentPassword = \"\"\n\n\n// const required = (value) => {\n//     if (!value) {\n//         return (\n//             <div className=\"alert alert-danger\" role=\"alert\">\n//                 Ce champ est obligatoire !\n//             </div>\n//         );\n//     }\n// };\n\n// const vpassword = value => {\n//     if (value.length < 6 || value.length > 50) {\n//       return (\n//         <div className=\"alert alert-danger\" role=\"alert\">\n//           Le mot de passe doit contenir entre 6 et 50 charactères.\n//         </div>\n//       );\n//     }\n//   };\n\n//   const vpasswordConfirmation = value => {\n//     if (value !== newPw) {\n//       return (\n//         <div className=\"alert alert-danger\" role=\"alert\">\n//           Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\n//         </div>\n//       );\n//     }\n//   };\n\nconst ModifyPassword = (props) =>{\n    const [oldPw, setOldPw] = useState('')\n    const [newPw, setNewPw] = useState('')\n    const [confirmNewPw, setConfirmNewPw] = useState('')\n    const [message, setmessage] = useState('');\n    const [successful, setsuccessful] = useState(false);\n    const [userEmail] = useState(props.email)\n\n    const ApplyModifications =(email,oldPass, newPass, confirmPass) => {\n        console.log(email)\n        setmessage('');\n        setsuccessful(false);\n        AuthService.changePassword(email, oldPass, newPass, confirmPass)\n        .then((res) => {\n            console.log(res.data);\n            setmessage(\"Mot de passe modifié avec succès\");\n            setsuccessful(true);\n        })\n        .catch((error) =>{\n            const errMessage =\n              (error.response.data.message[0].password || (error.response &&\n                error.response.data &&\n                error.response.data.message)) ||\n              error.message ||\n              error.toString();\n              console.log(errMessage);\n            setmessage(errMessage);\n            setsuccessful(false);\n        })\n    }\n\n\n\nreturn (\n    <div className=\"card card-container\">\n        \n        <strong>Changement de mot de passe</strong>\n        <Form>\n        <label name=\"oldPw\">Ancien mot de passe</label>\n        <Input name=\"oldPw\" value={oldPw} placeholder=\"******\" onChange={(e) => setOldPw(e.target.value)} />\n        <label name=\"newPw\">Nouveau mot de passe</label>\n        <Input name=\"newPw\" value={newPw} placeholder=\"******\" onChange={(e) => setNewPw(e.target.value)} />\n        <label name=\"confirmNewPw\">Confirmer le nouveau mot de passe</label>\n        <Input name=\"confirmNewPw\" value={confirmNewPw} placeholder=\"******\" onChange={(e) => setConfirmNewPw(e.target.value)} />\n        {/* <CheckButton\n            style={{ display: \"none\" }}\n            ref={c => {\n            Component.checkBtn = c;\n            }}\n        /> */}\n        </Form>\n        <button className=\"btnn\" onClick={() => ApplyModifications(userEmail,oldPw,newPw,confirmNewPw)}>Confirmer</button>\n\n        {message && (\n          <div className=\"form-group\">\n            <div\n              className={\n                successful\n                  ? \"alert alert-success\"\n                  : \"alert alert-danger\"\n              }\n              role=\"alert\"\n            >\n              {message}\n            </div>\n          </div>\n        )}\n    </div>\n);\n}\n\n\n\nexport default ModifyPassword;\n","import React, { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport ModifyPassword from \"./modifyPassword.component\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser()\n    };\n  }\n\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n          Profile : <strong>{currentUser.message.firstname}{' '}{currentUser.message.lastname}</strong> \n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong>{\" \"}\n          {currentUser.token.substring(0, 20)} ...{\" \"}\n          {currentUser.token.substr(currentUser.token.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.message._id}\n        </p>\n        <p>\n          <strong>Email:</strong>{\" \"}\n          {currentUser.message.email}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.message.roles &&\n            currentUser.message.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n        <ModifyPassword email={currentUser.message.email}/>        \n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\n\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\n// const API_URL = \"http://localhost:5050/api/${id}\";\n\n\nclass SearchService {\n\n  searchQuiz(id) {\n    return axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${id}`, {\n      \n    });\n  }\n\n  submitAnswers(answers){\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\n        answers\n      })\n  }\n\n\n}\n\nexport default new SearchService();\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\n\nexport const Title = ({data, noUnderline, subHeader}) => {\n\n    return (\n        <div>\n            <Typography\n                style={{textAlign: \"center\", color:\"#4257b2\", marginTop: \"20px\", marginBottom: \"20px\"}}\n                variant={subHeader ? \"h6\": \"h5\"}\n            >\n                {data}\n                <div className={noUnderline ? \"\": \"underline\"}></div>\n            </Typography>\n        </div>\n    )\n}\n","import React from \"react\";\nimport SearchService from \"../services/search.service\";\nimport AuthService from \"../services/auth.service\";\nimport {useState, useEffect} from 'react';\nimport axios from \"axios\";\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { FormControlLabel, makeStyles } from '@material-ui/core';\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NoteCard from \"./NoteCard\";\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Avatar, Typography } from '@material-ui/core';\nimport {Title} from './Title';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Ce champ est obligatoire !\n            </div>\n        );\n    }\n};\n\nconst vsearch = value => {\n  if (value.length < 6) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Le nom d'utilisateur doit contenir entre 6 charactères.\n      </div>\n    );\n  }\n};\n\nconst useStyles = makeStyles((theme) =>({ //makeStyles returns to us a hook, the hook subsequently gives us the object. NB: react hooks must begin with the word 'use'\n  field: {\n      marginTop: 20,\n      marginBottom: 20,\n      display: 'block'\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst BoardUser = () => {\n  const [search, setsearch] = useState('');\n  const [successful, setsuccessful] = useState(false);\n  const [message, setmessage] = useState('');\n  const [errorMessage, seterrorMessage] = useState('');\n  // const [errors, seterrors] = useState([])\n  const [currentQuiz, setcurrentQuiz] = useState(null);\n  const [radioOptions, setradioOptions] = useState({})\n  const [checkedItems, setCheckedItems] = useState([]); \n  const [currentUser] = useState(AuthService.getCurrentUser()) ;\n  const [allQuizzes, setallQuizzes] = useState([]);\n  const [displayAllAnswered, setdisplayAllAnswered] = useState(false);\n  const [validate, setvalidate] = useState(false)\n  const classes = useStyles();\n\n\n  // LOAD ALL QUIZZES ANSWERED BY CURRENT STUDENT FROM DATABASE \n  //ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\n  useEffect(() => {\n    const student_id = currentUser.message.email;\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\n      console.log(response.data.quizzes);\n      setallQuizzes(response.data.quizzes) \n    })\n    .catch(function (err) {\n        seterrorMessage(err.response);\n    });\n  }, [currentUser]);\n\n  // SET SELECTED(CLICKED) QUIZ\n  const setActiveQuiz = (quiz, index) => {\n    console.log(quiz)\n    // setcurrentQuiz(quiz);\n    // setcurrentIndex(index)\n  };\n\n  const onChangeSearch = (e) =>{\n    setsearch(e.target.value)\n  }\n\n  // RETURN CHECKED VALUE(true or false)\n  const checkRadioButton = (question_id, label) => {\n      if (!radioOptions[question_id]) {\n          return false;\n      }\n      return radioOptions[question_id] === label;\n  }\n\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\n    const setradio = (id , answer) => {\n      let checkedArray = checkedItems.map(x => {return {...x}})\n      const find_question = checkedArray.find(a => a.question_answer_id === id);\n      console.log(find_question)\n      if(find_question) {\n          checkedArray.find(a => a.question_answer_id === id).answer = answer;\n          setradioOptions((state) => {\n              console.log(state);\n              return {\n                  ...state,\n                  [id] : answer\n              }\n          });\n          setCheckedItems(checkedArray);\n      }\n      else{\n      setradioOptions((state) => {\n          console.log(state);\n          return {\n              ...state,\n              [id] : answer\n          }\n      });\n\n      setCheckedItems([\n          ...checkedItems,\n           {\n              question_answer_id : id,\n              answer: answer,\n              explanation: 'no explanation'\n          }\n      ]);}\n  }\n\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\n      let checkedArray = checkedItems.map(x => {return {...x}})\n      const find_question = checkedArray.find(a => a.question_answer_id === question_id);\n      console.log(find_question)\n      if(find_question) {\n          checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\n          setCheckedItems(checkedArray);\n      }\n      \n  }\n\n  // SUBMIT ANSWERS TO THE BACKEND\n  const submitAnswers = () =>{\n    // setmessage(\"\");\n    // setsuccessful(false);\n    // setdisplayAllAnswered(false);\n    const timestamp = Date.now(); // This would be the timestamp you want to format\n    const formatedTimestamp = new Intl.DateTimeFormat('en-US', {year: 'numeric',\n                              month: '2-digit',day: '2-digit', hour: '2-digit', \n                              minute: '2-digit', second: '2-digit'}).format(timestamp);\n    console.log(new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',\n                day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'})\n                .format(timestamp));\n    const answers = {\n        quiz_id : currentQuiz.quiz_id,\n        quiz_title : currentQuiz.quiz,\n        quiz_answers : {\n            student_id : currentUser.message.email,\n            student_answers : checkedItems,\n            time_submitted : formatedTimestamp,\n        }\n    }\n\n\n    if((currentQuiz.questions).length !== (answers.quiz_answers.student_answers).length){\n      // setmessage(null);\n      // setsuccessful(null);\n      // setdisplayAllAnswered(false);\n      console.log((currentQuiz.questions).length);\n      console.log((answers.quiz_answers.student_answers).length);\n      setvalidate(true);\n      // setmessage('Please answer all quizzes');\n              // setsuccessful(false);\n              return setvalidate(true);\n    }\n\n    console.log(\"Radio Answer: \", radioOptions);\n    console.log(\"CheckedItems: \", checkedItems);\n    console.log(\"Final: \", answers);\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api//history', {\n        answers\n      }).then((res) => {\n          console.log(res);\n          if(res){\n              //   window.location.reload(false);\n              setcurrentQuiz(null);\n              setCheckedItems([]);\n              setradioOptions({});\n              setallQuizzes([...allQuizzes, answers])\n              setmessage('Answers Submitted');\n              setsuccessful(true);\n              setdisplayAllAnswered(true);\n              \n          }\n      }).catch(err => {\n          setcurrentQuiz(null)  \n          setsuccessful(false);\n          console.log(err.response.data.message|| err.response.data.message[0].error);   \n          setmessage(err.response.data.message|| err.response.data.message[0].error);\n                 \n      });\n  }\n\n  const handleClose = () => {\n    setvalidate(false)\n  }\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setmessage(\"\");\n    setsuccessful(false);\n    setdisplayAllAnswered(false);\n\n    // this.form.validateAll();\n\n    {SearchService.searchQuiz(\n      search,\n    ).then(\n      response => {\n        console.log(response.data);\n        setsuccessful(true);\n        setcurrentQuiz(response.data);\n      })\n      .catch(\n      error => {\n        console.log(error.response);\n        const resMessage =\n          (error.response && error.response.data && error.response.data.message) \n          || error.message || error.toString();\n\n        setmessage(resMessage);\n        setsuccessful(false);\n      }\n    );}\n    \n  }\n\n  return (\n    <div>\n    <div >\n      <div >\n        {errorMessage && (\n          <div className=\"form-group\">\n            <div\n              className={\"alert alert-danger\"}\n              role=\"alert\"\n            >\n              {errorMessage}\n            </div>\n          </div>\n        )}\n\n        {(!successful || displayAllAnswered)  && (\n          <div>\n            <div style={{\"margin-top\" :\"50px\"}}>\n              {message && (\n                <div className=\"form-group\">\n                  <div\n                    className={\n                      successful\n                        ? \"alert alert-success\"\n                        : \"alert alert-danger\"\n                    }\n                    role=\"alert\"\n                  >\n                    {message}\n                  </div>\n                </div>\n              )}\n              <form id =\"form\" >\n                <TextField\n                    onChange={onChangeSearch}\n                    id=\"commonSearchTerm\"\n                    variant=\"outlined\"\n                    fullWidth\n                    required //just adds the asterix\n                />\n                <button id=\"searchButton\" onClick={handleSearch}>Recherche</button>\n              </form>\n            </div>\n\n            {(displayAllAnswered || !successful )  && allQuizzes && (\n              <div >      \n                <div className=\"col-xs-12 col-sm-12 col-md-12\">\n                  <center>\n                    <Title data={'Quiz déjà répondus'} />\n                  </center>\n                  <div className=\"row\" >\n                      {allQuizzes && allQuizzes.map((quiz, index) => (\n                          <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"> \n                              {/* <NoteCard note={quiz.quiz_id}  handleDelete={\"handleDelete\"} color={'#'+Math.floor(Math.random()*16777215).toString(16).padStart(6, '0')}/> */}\n                              <Card elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\n                                        <CardHeader\n                                              avatar={\n                                                  (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\n                                                      {quiz.quiz_id[0].toUpperCase()}\n                                                  </Avatar>)\n                                          }\n                                              // action={ handleDelete===\"no delete\" ? (\"\") :\n                                              //     (<IconButton style={{color: \"#4257b2\"}}>\n                                              //         <DeleteOutlined />\n                                              //     </IconButton>)\n                                              // }\n                                              title={quiz.quiz_id}\n                                              // subheader={note}\n                                        />\n                                        <CardContent>\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                                {quiz.quiz_id}\n                                            </Typography>\n                                        </CardContent>\n                                    </Card> \n                          </div> \n                      ))}\n                  </div>\n                </div>\n              </div>  \n            )}\n          </div>\n        )}\n\n        {/* <div className={!successful || message ? \"card card-container\" : \"\"}>\n            {(!successful || displayAllAnswered)  && (\n              <div >\n                <div className=\"form-group\">\n                  <label htmlFor=\"search\">Search for Quiz</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"search\"\n                    value={search}\n                    onChange={onChangeSearch}\n                    validations={[required, vsearch]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\"  onClick={handleSearch}>Search Quiz</button>\n                </div>\n              </div>\n            )}\n            {message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {message}\n                </div>\n              </div>\n            )}\n          </div> */}\n        </div>\n\n        {/* <div className=\"col-xs-12 col-sm-12 col-md-6\">\n          <div className={!successful || message ? \"card card-container\" : \"\"}>\n            {(displayAllAnswered || !successful )  && allQuizzes && (\n              <div >\n                <h4>Quiz déjà répondus</h4>\n                <div className={`quiz`} >\n                    {allQuizzes && allQuizzes.map((quiz, index) => (\n                        <h4 \n                        onClick= {() => setActiveQuiz(quiz, index)}\n                        > {quiz.quiz_id} \n                        </h4>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div> */}\n      </div>\n\n\n      <div >\n        {currentQuiz && (\n          <div className=\"container-questions\"> \n            { validate &&\n                <Snackbar anchorOrigin={{ vertical :'top', horizontal: 'center' }}open={validate} autoHideDuration={6000} onClose={()=>handleClose()}>\n                <Alert onClose={()=>handleClose()} severity=\"error\">\n                  {'Please answer all questions'}\n                </Alert>\n            </Snackbar>\n            }\n            <center><h4>{currentQuiz.quiz}</h4><br/></center>\n            {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\n              <div key={questions.question_id}>\n                <span style={{fontSize:\"20px\"}}>{questions.question_id}{'. '}{questions.question_title}</span>    \n                <div>\n                    <input \n                        className=\"input\"\n                        type=\"radio\" \n                        value=\"Oui\" \n                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \n                        onChange={(e) => setradio(questions.question_id, e.target.value)} \n                    /> Oui\n                    <input \n                        className=\"input\"\n                        type=\"radio\" \n                        value=\"Plutot Oui\"  \n                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \n                        onChange={(e) => setradio(questions.question_id, e.target.value)} \n                    /> Plutot Oui\n                    <input\n                        className=\"input\" \n                        type=\"radio\" \n                        value=\"Plutot Non\"  \n                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \n                        onChange={(e) => setradio(questions.question_id, e.target.value)}\n                    /> Plutot Non\n                    <input\n                        className=\"input\" \n                        type=\"radio\" \n                        value=\"Non\" \n                        checked={checkRadioButton(questions.question_id, \"Non\")}  \n                        onChange={(e) => setradio(questions.question_id, e.target.value)}\n                    /> Non\n                </div>\n\n                {radioOptions[questions.question_id] === \"Plutot Non\"\n                || radioOptions[questions.question_id] === \"Plutot Oui\"\n                || radioOptions[questions.question_id] === \"Non\" ? (\n                  <div>\n                    {questions.question_options && questions.question_options.map((options, index) => ( \n                      <div>\n                        <label>\n                          <input type=\"checkbox\" value={options.options_id} \n                          checked={checkedItems[options.option_text]}  \n                          onChange={(e) => \n                              setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\n                          }\n                          />\n                          <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                ) : (<span>No Explanation Needed</span>)}\n              </div>\n            ))}\n            <div className=\"form-group\">\n              <button className=\"btnn\" onClick={submitAnswers}>Submit Answers</button>\n            </div>\n          </div>\n            )\n          }\n      </div>\n  </div>\n  );\n}\n\n  export default BoardUser","import axios from \"axios\";\n\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\n\nclass PostForm {\n    submit(title, created_by, questions) {\n        return axios\n            .post(API_URL + \"submit\", {\n                title,\n                created_by,\n                questions\n            })\n            .then(response => {\n                return response.data;\n            });\n    }\n}\n\nexport default new PostForm();\n","import { Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@material-ui/core'\nimport {React} from 'react'\n\nconst ConfirmDialogue = (props) => {\n    const {confirmDialog} = props;\n    return (\n        <div>\n            <Dialog open={confirmDialog.isOpen}>\n                <DialogTitle >\n                    \n                </DialogTitle>\n                <DialogContent>\n                    <Typography variant=\"h6\">\n                        {confirmDialog.title}\n                    </Typography>\n                    <Typography variant=\"subtitle2\">\n                        {confirmDialog.subTitle}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <button className=\"btnn\" onClick={confirmDialog.onDiscard}>No</button>\n                    <button className=\"btnn\" onClick={confirmDialog.onConfirm}>Yes</button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default ConfirmDialogue\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\nconst ITEM_HEIGHT = 48; \n\nexport default function MenuOption(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        style={{float:\"right\",color: '#4257b2'}}\n      >\n        <MoreVertIcon />\n        <span>Options</span>\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5,\n            width: '20ch',\n            color: '#4257b2'\n          },\n        }}\n      >\n        {props.options && props.options.map((option) => (\n          <MenuItem key={option.title} selected={option === 'Pyxis'} onClick={option.onclick} >\n            {option.icon}{option.title}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport { Button, Snackbar, Switch } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport PostForm from \"../services/admin-submit-form\";\nimport AuthService from \"../services/auth.service\";\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { List, ListItem,ListItemIcon, ListItemText } from '@material-ui/core';\nimport BookOutlined from '@material-ui/icons/BookOutlined';\nimport SearchService from \"../services/search.service\";\nimport ConfirmDialogue from \"./confirm-dialogue\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport MenuOption from \"./menu\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport NoteCard from \"./NoteCard\";\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport QueueIcon from '@material-ui/icons/Queue';\nimport { TextField } from \"@material-ui/core\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { EmailOutlined } from \"@material-ui/icons\";\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import Button from '@material-ui/core/Button';\nimport { Avatar, makeStyles, Typography } from '@material-ui/core';\nimport { DeleteOutlined } from '@material-ui/icons';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Title} from './Title';\n\n\n\n\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n// Here is 5 constants related to the visual of our custom button\nconst StyledButtonAddExplanation = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst StyledButtonAddQuestion = withStyles({\n  root: {\n    background: '#4257b2',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst StyledButtonDelExplanation = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FF8700 30%, #FF1E1E 90%)',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst StyledButtonDelQuestion = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FF1D1D 30%, #4C4C4C 90%)',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst StyledButtonSubmit = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #11FF00 30%, #00FF82 90%)',\n    borderRadius: 15,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    margin: '5px 15px',\n  },\n  label: {\n    textTransform: 'none',\n  },\n})(Button);\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Ce champ est obligatoire !\n      </div>\n    );\n  }\n};\n\nclass MyForm extends Component {\n  constructor(props){\n    super(props);\n    this.onChangeQuestion = this.onChangeQuestion.bind(this);\n    this.onClickAddExplanation = this.onClickAddExplanation.bind(this);\n    console.log(this.props.delete)\n    this.state = {\n      explanations: false,\n      delete : this.props.delete\n    };\n  }\n\n  onChangeQuestion(e){\n    this.props.onQuestionChange(e.target.value);\n  }\n\n  onChangeExplanation(indexExplanation, e){\n    this.props.onExplanationChange(indexExplanation, e.target.value)\n  }\n\n  onClickRemoveExplanation(indexExplanation){\n    this.props.onRemoveExplanationClick(indexExplanation);\n  }\n\n  onClickAddExplanation(){\n    this.props.onAddExplanationClick();\n    this.setState({\n      explanations: true\n    });\n  }\n\n  deleteQuiz(){\n    console.log(this.props)\n    // this.props.delete();\n  }\n  \n  createExplanationUI(){\n    return(\n      <div>\n          {this.props.explanations ?(this.props.explanations.map((element, indexExplanation) =>\n            <div>\n              <div key={indexExplanation} className=\"form-group\">\n                <label htmlFor=\"explanation\">Explication</label>\n                  <form id =\"formExp\" >\n                    <TextField\n                        onChange={this.onChangeExplanation.bind(this, indexExplanation)}\n                        id=\"inputExp\"\n                        variant=\"outlined\"\n                        fullWidth\n                        required //just adds the asterix\n                        size=\"small\"\n                        style={{height: \"50\"}}\n                    />\n                    <Tooltip title=\"Supprimer cette explication\">\n                    <button type= \"button\" id=\"buttonExp\" onClick={this.onClickRemoveExplanation.bind(this, indexExplanation)}> <DeleteForeverIcon style={{color:\"red\"}}/> </button>\n                    </Tooltip>\n                  </form>\n              </div>\n            </div>\n            )) : (<h3>No Explanation props</h3>)\n          }\n      </div>\n    )\n  }\n\n  render(){\n\n    const question = this.state.question;\n    const deleteQuiz = this.state.delete;\n\n    return (\n      <div>\n        <Form >\n\n          <div className=\"form-group\">\n            <label htmlFor=\"question\" style={{paddingTop: \"10px\"}}>\n              <span>\n              <strong >Question</strong>\n              <Tooltip title=\"Supprimer cette question\">\n                <IconButton className=\"deleteQuestion\" onClick={deleteQuiz} style={{float:\"right\"}}>\n                    <DeleteForeverIcon />\n                </IconButton>\n              </Tooltip>\n              </span>\n\n            </label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"question\"\n              value = {question}\n              onChange = {this.onChangeQuestion}\n              validations = {[required]}\n              autoComplete = \"off\"\n            />\n          </div>\n          {\n            this.state.explanations &&\n              this.createExplanationUI()\n          }\n          \n          <Tooltip title=\"Adjouter une explication\">\n            <IconButton  onClick={this.onClickAddExplanation} style={{color: \"#4257b2\", float:\"left\", marginBottom: \"15px\"}}>\n              <QueueIcon />\n            </IconButton>\n          </Tooltip>\n          <br/><br/>\n        </Form>\n\n      </div>\n      \n    )\n  }\n}\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.onClickAddQuestion = this.onClickAddQuestion.bind(this);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.allowQuiz = this.allowQuiz.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.getQuiz = this.getQuiz.bind(this);\n    this.test = this.test.bind(this)\n\n    this.state = {\n      title: '',\n      created_by: '',\n      questions: [\n        {\n          question_id: '',\n          question_title: '',\n          question_options: []\n        }\n      ],\n      message: '',\n      currentUser: undefined,\n      submitted: false,\n      quizMdp:'',\n      allQuizzes: null,\n      displayQuizzes: null,\n      errorMessage: '',\n      laststate: null,\n      confirmDialog: {\n        isOpen:false,\n        title:'',\n        subTitle:''\n      },\n      updateTitle: \"Are you sure you want to update?\",\n      updateSubTitle : \"You will be able to edit again\"\n    };\n  }\n\n  componentDidMount() {\n\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n      });\n    }\n\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${user.message.email}`).then((response) => {\n            console.log(response.data.quizzes);\n            if((response.data.quizzes).length ){\n                this.setState({\n                  allQuizzes: response.data.quizzes,\n                  displayQuizzes: true\n                });\n                // console.log(response.data.quizzes)\n            }\n            else{  \n                this.setState({\n                  allQuizzes: null,\n                  displayQuizzes: false\n                });\n            }\n          })\n          .catch(function (err) {\n              this.setState({\n                errorMessage: err.response.data.message|| err.response.data.message[0].error,\n              });\n          });\n\n          this.setState({\n            menuOptions : [\n              {\n                title: \"Back\",\n                icon : <ArrowBackIcon fontsize=\"large\"/>,\n                onclick : this.backToQuizzes\n              },\n              {\n                title: \"Edit\",\n                icon : <EditIcon fontsize=\"large\"/>,\n                onclick : this.editQuiz\n              },\n              {\n                title: \"Delete\",\n                icon : <DeleteForeverIcon fontsize=\"large\"/>,\n                onclick : ()=>this.setConfirmDialog(\"delete\",\"Are you sure you want to Delete this Quiz?\", \"Question will be deleted permanently but no with Students Records\", this.deleteQuiz)\n              }\n            ]\n          })\n  }\n\n  createQuiz = () => {\n    this.setState({\n      laststate: this.state.displayQuizzes,\n      displayQuizzes : null,\n      displayCreate : true,\n      displayQuiz: false,\n\n    })\n  }\n\n  backToQuizzes = () => {\n    this.setState({\n      displayQuizzes: this.state.laststate,\n      displayCreate: false,\n      displayQuiz: false,\n      edit: false\n\n    })\n  }\n\n  test(e){\n    alert(\"test\")\n  }\n\n  getQuiz = (quiz_idd) => {\n    SearchService.searchQuiz(\n      quiz_idd,\n    ).then(\n      response => {\n        console.log(response.data.created_by);\n        console.log()\n        this.setState({\n          displayQuiz: true,\n          laststate: this.state.displayQuizzes,\n          currentQuiz: response.data,\n          toggle: response.data.allow,\n          displayQuizzes : null,\n          displayCreate: false,\n        })\n      })\n      .catch(\n      error => {\n        console.log(error.response);\n        const resMessage =\n          (error.response && error.response.data && error.response.data.message) \n          || error.message || error.toString();\n        this.setState({\n          message: resMessage,\n          successful: false\n        })\n      }\n    );\n  }\n\n  setConfirmDialog = (type ,title, subtitle, onconfirm) => {\n        this.setState({\n          confirmDialog: {\n            isOpen: true,\n            title: title,\n            subTitle: subtitle,\n            onConfirm: onconfirm,\n            onDiscard: ()=>this.discard(type)\n          }\n        })\n  }\n\n  discard = (type) => {\n    if(type===\"update\" || type === \"delete\"){\n      this.setState({\n        confirmDialog: {\n          isOpen: false,\n          title: '',\n          subTitle: \"\",\n          onConfirm: null,\n          onDiscard: null\n        }\n      })\n    }\n    else if(type===\"toggle\"){\n      this.setState({\n        confirmDialog: {\n          isOpen: false,\n          title: '',\n          subTitle: \"\",\n          onConfirm: null,\n          onDiscard: null\n        },\n         toggle: !this.state.toggle\n      })\n    }\n  }\n\n\n  handleToggle = (event) =>{\n    this.setState({\n      toggle: event.target.checked\n    })\n    let title;\n    let message;\n    if(event.target.checked){\n      title = \"Allow Students to take Quiz?\";\n      message = \"Students Can Take Quiz now\"\n    }\n    else{\n      title = \"Do you want to Close Quiz?\"\n      message = \"Students Cannot Take Quiz now\"\n    }\n    this.setState({\n      confirmDialog: {\n        isOpen: true,\n        title: title,\n        subTitle: this.state.subTitle,\n        onConfirm: () => this.allowQuiz(message),\n        onDiscard: ()=> this.discard(\"toggle\")\n      }\n    })\n\n  }\n\n  allowQuiz = (message) => {\n    let allow = this.state.toggle\n    console.log(allow)\n    const quiz_id = this.state.currentQuiz.quiz_id;\n    axios.post(`https://neuroeducation-feedback.herokuapp.com/api/allowQuiz/${quiz_id}` , {\n      allow\n    })\n    .then((response) => {\n      console.log(response.data);\n      let success;\n      if(allow){\n        success = allow\n      }\n      else{\n        success=allow\n      }\n      this.setState({\n        message: message,\n        open:true,\n        successful:success,\n        toggle: allow\n      })\n    })\n    .catch(function (err) {\n        // this.setState({\n        //   toggle: !this.state.toggle\n        // });\n        console.log(err.response.data.message|| err.response);\n    });\n    \n    this.setState({\n      confirmDialog: {\n        isOpen: false,\n        title: '',\n        subTitle: \"\",\n        onConfirm: null,\n        onDiscard: null\n      }\n    })\n  }\n\n  updateQuiz = (event) =>{\n    event.preventDefault();\n    let updated_questions = [];\n\n    for(let i=1;i<=5;i++){\n      if(document.getElementById('Q'+i) === null){\n        break\n      }\n      var id = document.getElementById('Q'+i).value;\n\n      let expArr = [];\n      for(let j=1;j<=20;j++){\n        let alphabet = String.fromCharCode(96 + (j));\n        let expId = 'Q'+i+'E'+alphabet;\n\n        if(document.getElementById(expId) === null){\n          break\n        }\n        else{\n        var exp = document.getElementById(expId).value;\n        expArr.push({\n          options_id : alphabet,\n          options_text : exp\n        })}\n      }\n      updated_questions.push({question_id:i, question_title: id, question_options : expArr})\n    }\n\n    console.log(updated_questions)\n    const quiz_id = document.getElementById(\"quiz_id\").value;\n    console.log(quiz_id)\n    axios.post(`https://neuroeducation-feedback.herokuapp.com/api/updateQuiz/${quiz_id}` , {\n      updated_questions\n    })\n    .then((response) => {\n      console.log(response.data);\n      this.setState({\n        message: \"Quiz Updated\",\n        open: true,\n        successful:true\n      })\n    })\n    .catch(function (err) {\n        console.log(err.response.data.message|| err.response);\n        this.setState({\n          message: \"Quiz Not Updated\",\n          open:true,\n          successful: false\n        })\n    });\n    \n    this.setState({\n      confirmDialog: {\n        isOpen: false,\n        title: '',\n        subTitle: \"\",\n        onConfirm: null,\n        onDiscard: null\n      }\n    })\n  }\n\n  deleteQuiz=()=> {\n        const id = this.state.currentQuiz.quiz_id;\n        const email = this.state.currentQuiz.created_by;\n        axios.delete(`https://neuroeducation-feedback.herokuapp.com/api/delete/${id}/${email}`)\n        .then((res) => {\n            console.log(res)\n            this.setState({\n              open: true,\n              message: \"Quiz Deleted\",\n              danger: true,\n              successful:null,\n              allQuizzes : this.state.allQuizzes.filter((question) => question.quiz_id !== id)\n            })\n            // setallQuizzes(allQuizzes.filter((question) => question._id !== id))\n        })\n        .catch(err => {\n            console.log(err); \n            this.setState({\n              message: \"Quiz Not Deleted... Please Try Again\",\n              open:true,\n              successful: false\n            })\n        });\n        this.setState({\n          confirmDialog: {\n            isOpen: false,\n            title: '',\n            subTitle: \"\",\n            onConfirm: null,\n            onDiscard: null\n          }\n        })\n\n        this.backToQuizzes()\n    // this.setState({\n    //   open: true,\n    //   message: \"Not Functional Yet\",\n    //   danger: true,\n    //   successful:null\n    // })\n  }\n\n  editQuiz=()=>{\n    this.setState({\n      edit: true,\n      displayQuiz: false\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  handleQuestionChange(indexQuestion, question){\n    let questions = [...this.state.questions];\n    questions[indexQuestion].question_title = question;\n    questions[indexQuestion].question_id = indexQuestion+1;\n    this.setState({\n      questions\n    });\n  }\n\n  handleExplanationChange(indexQuestion, indexExplanation, explanation){\n    let questions = [...this.state.questions];\n    questions[indexQuestion].question_options[indexExplanation].options_text = explanation;\n    \n    let alphabet = String.fromCharCode(96 + (indexExplanation+1));\n    questions[indexQuestion].question_options[indexExplanation].options_id = alphabet;\n    \n    this.setState({\n      questions\n    })\n  }\n\n  onChangeTitle(e){\n    let title = e.target.value;\n    this.setState({\n      title\n    });\n  }\n\n  onClickAddQuestion(){\n    this.setState(\n      prevState => ({questions : [...prevState.questions,        \n        {\n        question_title: '',\n        question_options: []\n      }]})\n    );\n  }\n\n  handleAddExplanationClick(indexQuestion){\n    let questions = [...this.state.questions];\n    questions[indexQuestion].question_options.push({options_text : ''});\n    this.setState({\n      questions\n    })\n  }\n\n  handleRemoveExplanationClick(indexQuestion, indexExplanation){\n    let questions = [...this.state.questions];\n    questions[indexQuestion].question_options.splice(indexExplanation, 1);\n    this.setState({\n      questions\n    });\n  }\n\n  onClickDelQuestion(indexQuestion){\n    let questions = [...this.state.questions];\n    questions.splice(indexQuestion, 1);\n    this.setState({\n      questions\n    });\n  }\n\n  handleSubmit(){\n\n    const { currentUser} = this.state;\n\n    PostForm.submit(this.state.title, currentUser.message.email, this.state.questions).then(\n      (response) => {\n        // this.props.history.push({\n        //   pathname: \"/postSubmitForm\",\n        //   state:{quizMdp: response.quizMdp}\n        // })\n        // window.location.reload();\n       console.log(response);\n        this.setState({\n          message: 'Quiz submitted',\n          submitted: true,\n          quizMdp:response.quizMdp\n        });\n      },\n      error => {\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        this.setState({\n          message: resMessage,\n          questions: [\n            {\n              question_title: '',\n              question_options: []\n            }\n          ]\n        });\n      }\n    );\n  }\n\n  createQuestionUI(){\n\n    return(this.state.questions.map((element, indexQuestion) => \n      <div className=\"questionContainer\">\n        <div className=\"container\" key={indexQuestion}>\n          <MyForm \n            onQuestionChange = {this.handleQuestionChange.bind(this, indexQuestion)}\n            onTitleChange = {this.handleTitleChange}\n            onExplanationChange = {this.handleExplanationChange.bind(this, indexQuestion)}\n            onAddExplanationClick = {this.handleAddExplanationClick.bind(this, indexQuestion)}\n            onRemoveExplanationClick = {this.handleRemoveExplanationClick.bind(this, indexQuestion)}\n            explanations = {this.state.questions[indexQuestion].question_options}\n            delete = {this.onClickDelQuestion.bind(this, indexQuestion)}\n          />\n          {/* <div className=\"delQuestion\">\n            <StyledButtonDelQuestion\n              variant = \"contained\" onClick = {this.onClickDelQuestion.bind(this, indexQuestion)}>Supprimer cette question\n            </StyledButtonDelQuestion>\n          </div> */}\n        </div>\n      </div>\n      )\n    )\n  }\n\n  // Pourrait être utile plus tard donc je met de coté (deprecated)\n  // componentDidMount() {\n  //   UserService.getAdminBoard().then(\n  //     response => {\n  //       this.setState({\n  //         content: response.data\n  //       });\n  //     },\n  //     error => {\n  //       this.setState({\n  //         content:\n  //           (error.response &&\n  //             error.response.data &&\n  //             error.response.data.message) ||\n  //           error.message ||\n  //           error.toString()\n  //       });\n  //     }\n  //   );\n  // }\n\n  render() {\n\n    const title = this.state.title;\n    const currentUser = this.state.currentUser;\n    const allQuizzes = this.state.allQuizzes;\n    const displayQuizzes = this.state.displayQuizzes;\n    const displayCreate = this.state.displayCreate;\n    const displayQuiz = this.state.displayQuiz;\n    const currentQuiz = this.state.currentQuiz\n\n\n\n\n    // redirect to post/SubmitForm\n    if(this.state.submitted===true){\n      return <Redirect to={{ pathname: \"/postSubmitForm\", state: { quizMdp: this.state.quizMdp } }} />\n    }\n\n    \n\n\n\n    return (\n      <div className=\"mainTeacherForm\">\n\n        <Snackbar anchorOrigin={{ vertical :'top', horizontal: 'center' }}open={this.state.open} autoHideDuration={6000} onClose={()=>this.handleClose()}>\n          <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\n            {this.state.message}\n          </Alert>\n        </Snackbar>\n\n        {\n          this.state.confirmDialog.isOpen && \n          <ConfirmDialogue\n          confirmDialog={this.state.confirmDialog}\n          setConfirmDialog={this.state.confirmDialog}\n          />\n        }\n\n        {(displayQuizzes===false || displayQuizzes) && \n          <div className=\"\">\n            {(allQuizzes && displayQuizzes) && (\n                <div >\n                    <SnackbarContent \n                    style={{backgroundColor: \"white\", position:\"sticky\", top: \"0\", \"z-index\": \"999\"}}\n                    message=\"\" \n                    action={<button className=\"btnn\" \n                    onClick={this.createQuiz}>Créer un nouveau Quiz</button>} \n                    />\n                    <div >      \n                      <div className=\"col-xs-12 col-sm-12 col-md-12\">\n                        <Title data={'Quizs Créé par : ' + currentUser.message.firstname + \" \"+ currentUser.message.lastname} />\n                        <div className=\"row\" >\n                            {allQuizzes && allQuizzes.map((quiz, index) => (\n                                <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"  onClick= {()=>this.getQuiz(quiz.quiz_id)}> \n                                    {/* <NoteCard note={quiz.quiz_id}  handleDelete={\"no delete\"} color={'#4257b2'}/> */}\n\n                                    <Card elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\n                                        <CardHeader\n                                              avatar={\n                                                  (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\n                                                      {quiz.quiz_id[0].toUpperCase()}\n                                                  </Avatar>)\n                                          }\n                                              // action={ handleDelete===\"no delete\" ? (\"\") :\n                                              //     (<IconButton style={{color: \"#4257b2\"}}>\n                                              //         <DeleteOutlined />\n                                              //     </IconButton>)\n                                              // }\n                                              title={quiz.quiz_id}\n                                              // subheader={note}\n                                        />\n                                        <CardContent>\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                                {quiz.quiz_id}\n                                            </Typography>\n                                        </CardContent>\n                                    </Card>\n\n                                </div> \n                            ))}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n                        <List>\n                        {allQuizzes && allQuizzes.map((quiz, index) => (\n                            <ListItem button  onClick= {()=>this.getQuiz(quiz.quiz_id)}>\n                                <ListItemIcon>\n                                    <BookOutlined />\n                                </ListItemIcon>\n                                <ListItemText primary={\n                                    <h4>\n                                    {quiz.quiz_id} \n                                    </h4>\n                                }/>\n                            </ListItem>\n                        ))}\n                        </List>\n                    </div> */}\n                </div>\n            )}\n            {(displayQuizzes===false) && (\n              <div>\n                  <h4>{'Quizs Créé par : '}</h4>\n                  <h4> {currentUser.message.firstname+\" \"+currentUser.message.lastname}</h4>\n                  <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n                      <h4>Vous n'avez pas créé de quiz</h4>\n                  </div>\n              </div>\n            )}\n            {/* <button className=\"btnn\" onClick={this.createQuiz}>Créer un nouveau Quiz</button> */}\n          </div>}\n\n        {(displayQuiz || this.state.edit) && currentQuiz &&\n          <div className=\"container-questions\">\n            <MenuOption options = {this.state.menuOptions}></MenuOption>\n            <Tooltip title=\"Back to list\">\n              <IconButton aria-label=\"back\" style={{color:'#4257b2'}} onClick={this.backToQuizzes}>\n                <ArrowBackIcon fontsize=\"large\"/>\n              </IconButton>\n            </Tooltip>\n            {/* <button className=\"btnn\"  onClick={this.backToQuizzes}><ArrowBackIcon fontsize=\"large\"/></button>  */}\n\n            {/* <button className=\"btnn\"  onClick={this.deleteQuiz}><DeleteForeverIcon fontsize=\"large\"/></button>  */}\n            {/* <button className=\"btnn\"  onClick={this.editQuiz}>Edit Quiz</button> */}\n            <p>\n                {currentQuiz.quiz + ' est actuellement ' + (this.state.toggle ? (\"permis\") : (\"interdit\")) +\"à prendre\"}             \n                <Switch\n                checked={this.state.toggle}\n                onChange={this.handleToggle}\n                name=\"switch\"\n                inputProps={{\"aria-label\":\"test switch\"}}\n                style={{color:\"#4257b2\"}}\n                color=\"primary\"\n                />\n            </p>\n            \n            {(currentQuiz && this.state.edit) && (\n              <div  > \n    \n                <Form id=\"myForm\">\n                  <div className=\"container\">\n                    <div className=\"form-group\">\n                      <center><h5 >{currentQuiz.quiz}</h5><br/></center>\n\n                      <Input\n                              type=\"text\"\n                              className=\"form-control\"\n                              name=\"quiz_id\"\n                              id=\"quiz_id\"\n                              value = {currentQuiz.quiz_id}\n                              readOnly\n                          /> \n                      {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\n                        <div key={questions.question_id}>\n                          <label htmlFor={'Q'+questions.question_id}><strong>{'Question : '+questions.question_id}</strong></label>\n                          <Input\n                              type=\"text\"\n                              className=\"form-control\"\n                              name={'Q'+questions.question_id}\n                              id={'Q'+questions.question_id}\n                              value = {questions.question_title}\n                              // onChange = {this.onChangeTitle}\n                              validations = {[required]}\n                              autoComplete = \"off\"\n                          /> \n\n                          {questions.question_options && questions.question_options.map((options, index) => ( \n                            <div>\n                            <label htmlFor={'Q'+questions.question_id+'E'+options.options_id}><strong>{'Explanation : '+options.options_id}</strong></label>\n                            <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name={'Q'+questions.question_id+'E'+options.options_id}\n                            id={'Q'+questions.question_id+'E'+options.options_id}\n                            value = {options.options_text}\n                            // onChange = {this.onChangeTitle}\n                            validations = {[required]}\n                            autoComplete = \"off\"\n                            />\n                            </div>\n                          ))}                  \n                        </div>\n                      ))}\n                    </div>\n                  </div>   \n                </Form> \n                <button className=\"btnn\" onClick={()=>this.setConfirmDialog(\"update\",\"Do you want to Edit this Quiz?\", \"You can edit again\", this.updateQuiz)}>Update</button>   \n              </div>\n              \n              )}\n\n              <div >\n                {(currentQuiz && displayQuiz) && (\n                  <div  > \n                    <center><h4>{currentQuiz.quiz}</h4><br/></center>\n                    {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\n                      <div key={questions.question_id}>\n                        <p><strong>{questions.question_id}{'. '}{questions.question_title}</strong></p>    \n                      \n                          <div>\n                            {questions.question_options && questions.question_options.map((options, index) => ( \n                              <div>\n                                <label>\n                                  <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\n                                </label>\n                              </div>\n                            ))}\n                          </div>\n                        \n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n          </div>\n        }\n\n\n        <div>\n          {displayCreate && <div>\n            <div style={{width:\"100%\",   display: \"inline-flex\", \"justify-content\": \"center\"}}>\n            <button  id=\"backButton\" onClick={this.backToQuizzes}><ArrowBackIcon fontsize=\"large\"/></button> \n\n            <SnackbarContent \n            style={{ width : \"100%\" ,fontWeight:\"bold\", fontSize:\"1.2rem\", color: \"#4257b2\" ,backgroundColor: \"white\", position:\"sticky\", top: \"0\", \"z-index\": \"999\"}}\n            message=\"Création de nouvelles questions\" \n            action={\n              <button\n               className=\"btnn\" variant = \"contained\" onClick = {this.handleSubmit}>Valider\n              </button>\n            } \n            />\n            </div> \n            {/* <div className=\"container\">\n              <header className=\"jumbotron\">\n                <h3>Création de nouvelles questions</h3>\n              </header>\n            </div> */}\n\n            <Form>\n              <div className=\"container\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"form-title\"><strong>Titre du formulaire</strong></label>\n                    <Input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"form-title\"\n                      value = {title}\n                      onChange = {this.onChangeTitle}\n                      validations = {[required]}\n                      autoComplete = \"off\"\n                    />\n                </div>\n              </div>\n\n\n              {this.createQuestionUI()}\n\n\n              <div className=\"container\">\n                <br></br>\n                <SnackbarContent \n                style={{backgroundColor: \"white\"}}\n                message=\"\" \n                action={<button\n                 className=\"btnn\" type=\"button\" onClick = {this.onClickAddQuestion}>Ajouter une question\n              </button>} \n                />\n                {/* <StyledButtonAddQuestion\n                    variant = \"contained\" onClick = {this.onClickAddQuestion}>Ajouter une question\n                </StyledButtonAddQuestion>\n                <br></br><br></br>\n                <StyledButtonSubmit\n                  variant = \"contained\" onClick = {this.handleSubmit}>Valider\n                </StyledButtonSubmit> */}\n              </div>\n            </Form>\n\n            { this.state.message && \n              <div className=\"container\">\n                <div className=\"itsanerror\"><h3>Une erreur est survenu lors de l'envoi du formulaire</h3></div>\n              </div>\n            }\n          </div>}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nexport default class PostSubmitForm extends Component {\n    render(){\n        if(this.props.location.state === undefined){\n            // console.log(this.props.location); \n            return <Redirect to={{pathname:'/home'}}/>\n        }\n        return(\n            <div>\n                <div className=\"container\">\n                    <header className=\"jumbotron\">\n                        <div className=\"success\">\n                            <h3>Formulaire envoyé avec succès !</h3>\n                            <br></br>\n                            <h5>Voici le code du quizz à partager aux élèves :</h5>\n                            <p className=\"quizMdp\">{\" \" + this.props.location.state.quizMdp}</p>\n                        </div>\n                    </header>\n                </div>\n            </div>\n        );\n    }\n}","import { Bar, HorizontalBar } from 'react-chartjs-2';\n\n\nconst BarChart = ( props ) => {\n\n    const names = props.explanationArray;\n    const explanationLabels = props.explanationLabels;\n    const explanationValues = props.explanationValues;\n    const barData = props.barData;\n    \n\n    return (\n        <div>\n            {(barData === \"Bar\") ? (\n                        <Bar\n                        data={{\n                            labels: explanationLabels,\n                            datasets: [{\n                                data: explanationValues,\n                                backgroundColor: [\n                                    'rgba(255, 99, 132, 1)',\n                                    'rgba(54, 162, 235, 1)',\n                                    'rgba(255, 206, 86, 1)',\n                                    'rgba(75, 192, 192, 1)',\n                                    'rgba(153, 102, 255, 1)',\n                                    'rgba(255, 159, 64, 1)'\n                                ]\n                            }]\n                        }}\n                        options={{\n                            maintainAspectRatio: false,\n                            scales: {\n                                yAxes: [{\n                                    ticks: {\n                                        beginAtZero: true\n                                    }\n                                }]\n                            },\n                            legend: {\n                                display: false\n                            },\n                            tooltips: {\n                                callbacks: {\n                                    label: function(item, data){\n                                        return names[item.index];\n                                    },\n                                    title: function(item, data){\n                                        return;\n                                    }\n                                },\n                                displayColors: false\n                            }\n                        }}\n                    />\n            ): (\n                <HorizontalBar\n                data={{\n                    labels: explanationLabels,\n                    datasets: [{\n                        data: explanationValues,\n                        backgroundColor: [\n                            'rgba(255, 99, 132, 1)',\n                            'rgba(54, 162, 235, 1)',\n                            'rgba(255, 206, 86, 1)',\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(153, 102, 255, 1)',\n                            'rgba(255, 159, 64, 1)'\n                        ]\n                    }]\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }]\n                    },\n                    legend: {\n                        display: false\n                    },\n                    tooltips: {\n                        callbacks: {\n                            label: function(item, data){\n                                return names[item.index];\n                            },\n                            title: function(item, data){\n                                return;\n                            }\n                        },\n                        displayColors: false\n                    }\n                }}\n            />\n            )}\n    \n        </div>\n    );\n}\n \nexport default BarChart;","import { Doughnut, Pie } from 'react-chartjs-2';\n\n\nconst DoughnutChart = ({ labels, answerValues, pieData }) => {\n    return ( \n        <div>\n            {(pieData === \"Doughnut\") ? (\n                <Doughnut\n                    data={{\n                        labels: labels,\n                        datasets: [{\n                            data: answerValues,\n                            backgroundColor: [\n                                'rgba(255, 99, 132, 1)',\n                                'rgba(54, 162, 235, 1)',\n                                'rgba(255, 206, 86, 1)',\n                                'rgba(75, 192, 192, 1)',\n                            ]\n                        }]\n                    }}\n                    options={{\n                        maintainAspectRatio: false\n                    }}\n                />\n            ):(\n                <Pie\n                    data={{\n                        labels: labels,\n                        datasets: [{\n                            data: answerValues,\n                            backgroundColor: [\n                                'rgba(255, 99, 132, 1)',\n                                'rgba(54, 162, 235, 1)',\n                                'rgba(255, 206, 86, 1)',\n                                'rgba(75, 192, 192, 1)',\n                            ]\n                        }]\n                    }}\n                    options={{\n                        maintainAspectRatio: false\n                    }}\n                />\n            )}\n            \n        </div>\n     );\n}\n\nexport default DoughnutChart;","import React, {useState} from 'react'\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport IconButton from '@material-ui/core/IconButton';\nimport NoteCard from \"./NoteCard\";\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport Tooltip from '@material-ui/core/Tooltip'; \nimport EqualizerIcon from '@material-ui/icons/Equalizer';\n\n\n\n\n\nconst FlippyItems = ({frontSide, backSide}) => {\n    return (\n        <Flippy\n        // onmouseover={onMouseOver}\n        className=\"col-xs-12 col-sm-12 col-md-4 col-lg-3\"\n        flipOnHover={true} // default false\n        flipOnClick={false} // default false\n        flipDirection=\"horizontal\" // horizontal or vertical\n        // ref={(r) => this.flippy = r} // to use toggle method like this.flippy.toggle()\n        // if you pass isFlipped prop component will be controlled component.\n        // and other props, which will go to div\n        style={{ minWidth: '260px', height: '150px', marginBottom : \"25px\", marginRight : \"25px\"}} /// these are optional style, it is not necessary\n      >\n        <FrontSide\n          style={{\n            // backgroundColor: '#41669d',\n            padding: 0,\n            margin:0\n          }}\n        >\n          {frontSide}\n        </FrontSide>\n        <BackSide\n          style={{ \n            backgroundColor: '#4257b2',\n            padding: 2,\n            margin:0}}\n        >\n        <div> \n          {backSide}  \n        </div> \n        </BackSide>\n      </Flippy>\n    )\n}\n\nexport default FlippyItems\n","import {useState, useEffect} from 'react';\nimport Axios from 'axios';\n// import {FaTimes} from 'react-icons/fa'\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport SwapHorizRounded from '@material-ui/icons/SwapHorizRounded';import BarChart from './BarChart';\nimport { Container, List, ListItem, ListItemText} from '@material-ui/core';\nimport DoughnutChart from './DoughnutChart';\nimport BookOutlined from '@material-ui/icons/BookOutlined';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport NoteCard from \"./NoteCard\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport SearchService from \"../services/search.service\";\nimport { Avatar, Typography } from '@material-ui/core';\nimport {Title} from './Title';\n\n\n\nimport FlippyItems from './Flippy';\n\n\n\nconst AllAnswers = () => {\n    const [allAnswers, setallAnswers] = useState([]);\n    const [currentQuiz, setcurrentQuiz] = useState(null);\n    const [array, setarray] = useState(null);\n    const [answersArray, setanswersArray] = useState();\n    const [explanationsArray, setexplanationsArray] = useState()\n    const [currentStudent, setcurrentStudent] = useState(null)\n    const [explanationStats, setexplanationStats] = useState(null)\n    const [showSpinner, setShowSpinner] = useState(true);\n    const [allQuestions, setAllQuestions] = useState([]);\n    const [allExplanations, setAllExplanations] = useState([]);\n    const [pieData, setPieData] = useState(\"Doughnut\");\n    const [barData, setBarData] = useState(\"Bar\");\n    const [pieTitle, setPieTitle] = useState(\"Graphique en anneau\");\n    const [barTitle, setBarTitle] = useState(\"Diagramme à bandes\");\n    const [displayAllQuizzes, setdisplayAllQuizzes] = useState(true);\n    const [displayStudentList, setdisplayStudentList] = useState(false);\n    const [displayStats, setdisplayStats] = useState(false)\n    const [actualQuiz, setactualQuiz] = useState(null)\n\n\n    // FIND ALL ANSWERED QUESTIONS ON PAGE LOAD\n    useEffect(() => {\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllAnswered').then((response) => {\n          console.log(response.data);\n          setallAnswers(response.data);\n          setShowSpinner(false);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }, []);\n\n    //ALTERNATE BETWEEN PIE AND DOUGHNUT CHART\n\n    const handlePieChartChange = () => {\n        if(pieData === \"Doughnut\"){\n            setPieData(\"Pie\")\n            setPieTitle(\"Diagramme circulaire\")\n        }\n        if(pieData === \"Pie\"){\n            setPieData(\"Doughnut\")\n            setPieTitle(\"Graphique en anneau\")\n        }\n    }\n    const handleBarChartChange = () => {\n        if(barData === \"Bar\"){\n            setBarData(\"Horizontal Bar\")\n            setBarTitle(\"Graphique à barres horizontales\")\n        }\n        if(barData === \"Horizontal Bar\"){\n            setBarData(\"Bar\")\n            setBarTitle(\"Diagramme à bandes\")\n        }\n    }\n\n    // SET SELECTED(CLICKED) QUIZ\n    const setActiveQuiz = (quiz, index, quiz_id) => {\n        console.log(quiz_id)\n        setcurrentQuiz(quiz);\n        getStats(quiz_id);\n        setcurrentStudent(null);\n        setexplanationStats(null);\n        setarray(null);\n\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${quiz_id}`)\n        .then(response => {\n            setAllQuestions(response.data.questions);\n            console.log(response.data.questions);\n        })\n        .catch(err => {\n            console.log(\"An error occurred\", err.response);\n        })\n\n\n        // GET ACTUAL QUESTIONS FROM DATABASE\n        SearchService.searchQuiz(\n            quiz.quiz_id,\n        ).then(\n            response => {\n            console.log(response.data);\n            //   setsuccessful(true);\n            setactualQuiz(response.data);\n            })\n            .catch(\n            error => {\n            console.log(error.response);\n            const resMessage =\n                (error.response && error.response.data && error.response.data.message) \n                || error.message || error.toString();\n\n            //   setmessage(resMessage);\n            //   setsuccessful(false);\n            }\n        );\n    }; \n\n    // RETRIEVE GROUPPED DATA FROM THE DATABASE BY SELECTED QUIZ ID \n    const getStats = (quiz_id) => {\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/groupStats/${quiz_id}`)\n        .then(response => {\n            if(response){\n            // SET GROUPPED ANSWERS \"FOR EACH STUDENT\" ARRAY\n            setanswersArray(response.data[0]._id.answer);\n            console.log(response.data[0]._id.answer)\n\n            // SET GROUPPED EXPLANATIONS \"FOR EACH STUDENT\" ARRAY\n            setexplanationsArray(response.data[0]._id.explanation);\n            console.log(response.data[0]._id.explanation)\n            }\n        })\n        .catch()\n    }\n\n    // SET SELECTED(CLICKED) STUDENT ARRAY\n    const setActiveStudent = (student) => {\n        console.log(student)\n        setcurrentStudent(student);\n    }\n\n// HANDLE STUDENT LIST\n    const handleStudentList = () => {\n        setdisplayAllQuizzes(false)\n        setdisplayStudentList(true)\n        setdisplayStats(false)\n    }\n\n    const backToQuizzes = () => {\n        setdisplayAllQuizzes(true)\n        setdisplayStudentList(false)\n        setdisplayStats(false)\n        setcurrentQuiz(null)\n        setcurrentStudent(null);\n        setexplanationStats(null);\n        setarray(null);\n    }\n\n    // MERGE ALL ANSWERS BY QUESTION NUMBER AND SET COUNT AND STATS\n    const stats = () => {\n        // MERGE ALL ANSWERS INTO AN ARRAY (arrAns)\n        const arrayAns = answersArray[0].map(function(value, index) {\n            const mergeAllStudentsByIndex = [value];\n            if(value){\n                for(let i=1; i<answersArray.length; i++){\n                    mergeAllStudentsByIndex.push(answersArray[i][index])\n                }\n            }\n            console.log(mergeAllStudentsByIndex);\n            return mergeAllStudentsByIndex;\n        });\n        console.log(arrayAns);\n\n         // MERGE ALL EXPLANATIONS INTO AN ARRAY (arrExp)\n        const arrayExp = explanationsArray[0].map(function(explanation, index) {\n            const mergeAllExplanation = [explanation];\n            if(explanation){\n                for(let i =1; i< explanationsArray.length; i++){\n                    mergeAllExplanation.push(explanationsArray[i][index])\n                }\n            }\n\n            return mergeAllExplanation;\n        });\n        console.log(arrayExp)\n        \n        // COUNT NUMBER OF OCCURRENCE OF AN ANSWER(\"Plutot Oui\", \"Non\"... etc) FOR EACH QUESTION\n        const countAnswers = arrayAns.map((answers, index) => {\n            console.log(array)\n            let all = {\n                \"Oui\" : 0,\n                \"Plutot Oui\" : 0,\n                \"Plutot Non\" : 0,\n                \"Non\": 0,\n            };\n            for(const answer of answers){\n                all = {...all,  [answer] : answers.filter((a) => {return a === answer}).length}\n            }\n            return all;\n        })\n        // SET COUNT AS A STATE\n        setarray(countAnswers)\n\n        // GET EXPLANATIONS OF ALL QUESTIONS FOR THE CHART DISPLAY \n        const labelsArray = allQuestions.map((value, index) => {\n            const myArray = value.question_options.map((value, index) => {\n                return value.options_text;\n            })\n            return myArray\n        })\n\n        setAllExplanations(labelsArray);\n        console.log(labelsArray);\n\n        // COUNT NUMBER OF OCCURRENCE OF AN EXPLANATION(\"a\", \"b\", \"c\"... etc) FOR EACH QUESTION\n        const countExplanations = arrayExp.map((array,index) => {\n            //return arr.filter((a) => {return a === \"a\"}).length\n            console.log(array)\n            let all = {\n                a : 0,\n                b : 0,\n                c : 0,\n                d : 0,\n                e : 0\n            }\n            for(const letter of array){\n                all = {...all,  [letter] : array.filter((a) => {return a === letter}).length}\n            }\n\n            return all;\n        })\n        // SET COUNT AS A STATE\n        setexplanationStats(countExplanations);\n        setdisplayStats(true)\n        setdisplayStudentList(false)\n        setdisplayAllQuizzes(false)    \n    }\n\n    // RETRIEVE INTEGERS(VALUES) FOR EXPLANATIONS\n    const getExplanationValues = (explanation, keys) => {\n        let values = [];\n        keys.forEach(key => {\n            values.push(explanation[key])\n        })\n        return values;\n    }\n    // RETRIEVE INTEGERS(VALUES) FOR Y, MY, MN, N QUESTIONS\n    const getAnswerValues = (answer, keys) => {\n        let values = [];\n        keys.forEach(key => {\n            values.push(answer[key])\n        })\n        return values;\n    }\n\n    //RETRIEVE KEYS(LABELS) FOR CHART DATA\n    const getLabels = object => {\n        return Object.keys(object);\n    }\n\n    // const disp = () => {\n    //     console.log(array);\n    //     console.log(explanationStats)\n    // }\n\n\n\n    return (\n        <div className=\"container-questions\">\n            {showSpinner && <div class=\"spinner\">\n                <div></div>\n                <div></div>\n            </div>\n            }\n            {!showSpinner &&  displayAllQuizzes && (<div  style={{borderRadius: \"10px\"}}>\n                <div >      \n                    <div className=\"col-xs-12 col-sm-12 col-md-12\">\n                        <Title data=\"Liste de toutes les réponses\" />\n                    <div className=\"row\" >\n                        {allAnswers && allAnswers.map((quiz, index) => (\n                            <FlippyItems     \n                                frontSide={\n                                    <div key={index}  > \n                                        <Card \n                                        elevation={1} \n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}\n                                        onMouseOver={() => setActiveQuiz(quiz, index, quiz.quiz_id)}\n                                        >\n                                            <CardHeader\n                                                avatar={\n                                                    (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\n                                                        {quiz.quiz_id[0].toUpperCase()}\n                                                    </Avatar>)\n                                                }\n                                                title={quiz.quiz_id}\n                                                // subheader={note}\n                                            />\n                                            <CardContent>\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                                    {(quiz.quiz_title).substr(0,27) + \"...\"}\n                                                </Typography>\n                                            </CardContent>\n                                        </Card>\n\n                                </div> \n                                }\n                            // handleStudentList = {()=>handleStudentList()}\n                            // stats={()=>stats()}\n                            // index={index}\n                            // quiz={quiz}\n                                backSide={\n                                    <div key={index}  > \n                                        <Card elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\n                                            <CardHeader\n                                                avatar={\n                                                    (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\n                                                        {quiz.quiz_id[0].toUpperCase()}\n                                                    </Avatar>)\n                                                }\n                                                title={(quiz.quiz_title)}\n                                                // subheader={note}\n                                            />\n                                            <CardContent>\n                                                <div style={{float:\"right\", color:\"#4257b2\"}}> \n                                                    <Tooltip title=\"Cliquez pour les statistiques\">\n                                                        <IconButton  onClick={stats} style={{float:\"right\", color:\"#4257b2\"}}>\n                                                            <EqualizerIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                    <Tooltip title=\"Liste des étudiants\">\n                                                        <IconButton  onClick={handleStudentList} style={{float:\"right\", color:\"#4257b2\"}}>\n                                                            <FormatListNumberedIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n\n                                                </div>\n                                            </CardContent>\n                                        </Card>\n                                </div> \n                                }\n                            />\n                        ))}\n                    </div>\n                    </div>\n                </div>\n                {/* <List>\n                    {allAnswers && allAnswers.map((quiz, index) => (\n                        <ListItem button onClick= {() => setActiveQuiz(quiz, index, quiz.quiz_id)} >\n                            <ListItemIcon>\n                                <BookOutlined />\n                            </ListItemIcon>\n                            <ListItemText primary={\n                                 <h4> \n                                     {quiz.quiz_title} {''} \n                                 </h4>\n                            } />\n                        </ListItem>\n                    ))}\n                </List> */}\n            </div>)}\n\n            <div>\n                {currentQuiz && (displayStudentList || displayStats) ? (\n                    <div>\n                        <IconButton  onClick={()=>backToQuizzes()} style={{float:\"left\", color:\"#4257b2\"}}>\n                        <ArrowBackIcon />\n                        </IconButton>\n                        <center><Title data={'Vous avez sélectionné le quiz : '+ currentQuiz.quiz_id} /></center>\n                        \n                        { displayStudentList && <div >\n                            <h4>{'Liste des étudiants : '}</h4>\n                            {currentQuiz.quiz_answers && currentQuiz.quiz_answers.map((students, index) => (\n                                <div>\n                                    <h4 onClick={() => setActiveStudent(students)}>{students.student_id}</h4>\n                                </div>\n                            ))}\n                        </div>}\n\n                        <div>\n                            {currentStudent && (\n                                <div>\n                                    <h4>{'Affichage des réponses sur  : '}{currentStudent.student_id}</h4>\n                                    {currentStudent && currentStudent.student_answers.map((answers, index) => (\n                                        <div> \n                                            <h4>{answers.question_answer_id}{' .'}{answers.answer}</h4>\n                                            <h4>{'Explication : '}{answers.explanation}</h4>\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                        <div style={{marginBottom: \"20px\"}}>\n\n                            {/* <button className=\"btnn\" onClick={stats}>Cliquez pour les statistiques</button> */}\n                        </div>\n                        <Container>\n                            {array && displayStats && (\n                                <div>\n                                    <Grid container spacing={3}>\n                                        {array && array.map((answer, index) => (\n                                            <Grid item sm={12} md={6} lg={4} >\n                                                <Card elevation={2}>\n                                                    <CardHeader\n                                                        action={\n                                                            <IconButton onClick={handlePieChartChange}>\n                                                                <SwapHorizRounded/>\n                                                            </IconButton>\n                                                        }\n                                                        title={\"\"}\n                                                        subheader={actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)} \n                                                    />\n                                                    <CardContent>\n                                                        <DoughnutChart\n                                                        pieData={pieData}\n                                                        labels={getLabels(answer)}\n                                                        answerValues={getAnswerValues(answer, getLabels(answer))} />\n                                                    </CardContent>\n                                                </Card>\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </div>\n                                                        \n                                ) }\n\n                            {explanationStats && (\n                                <div>\n                                        <Grid container spacing={3} >\n                                            {explanationStats && explanationStats.map((explanation, index) => (\n                                                <Grid item sm={12} md={6} lg={6}>\n                                                    <Card elevation={2}>\n                                                        <CardHeader\n                                                        action={\n                                                            <IconButton onClick={handleBarChartChange}>\n                                                                <SwapHorizRounded/>\n                                                            </IconButton>\n                                                        } \n                                                        title={\"\"}\n                                                        subheader={actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)}\n                                                        />\n                                                        <CardContent>\n                                                            <BarChart\n                                                                barData={barData} \n                                                                explanationArray={allExplanations[index]}\n                                                                explanationLabels={getLabels(explanation)}\n                                                                explanationValues={getExplanationValues(explanation, getLabels(explanation))} \n                                                            />\n                                                        </CardContent>\n                                                    </Card>\n                                                </Grid>\n                                            ))}\n                                        </Grid>\n                                </div>         \n                                )}\n                        </Container>    \n                    </div>\n                ) : (<Title data=\"Veuillez sélectionner un quiz pour afficher les réponses\" noUnderline={true} subHeader={true} />)}\n            </div>   \n        </div>\n    )\n}\n\nexport default AllAnswers;","import {useState, useEffect} from 'react';\nimport Axios from 'axios';\n// import {FaTimes} from 'react-icons/fa'\nimport { List, ListItem, ListItemText, Button, ListItemIcon } from '@material-ui/core';\nimport BookOutlined from '@material-ui/icons/BookOutlined';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Avatar, Typography } from '@material-ui/core';\n\nimport FlippyItems from './Flippy';\n\n\nimport NoteCard from \"./NoteCard\";\nimport Flippy from 'react-flippy/dist/Flippy';\nimport {Title} from './Title';\n\n\nconst AllQuestions = () => {\n    const [allQuizzes, setallQuizzes] = useState([]);\n    const [currentQuiz, setcurrentQuiz] = useState(null);\n    const [radioOptions, setradioOptions] = useState({});\n    const [checkedItems, setCheckedItems] = useState([]); \n    const [displayQuiz, setdisplayQuiz] = useState(false);\n    const [displayQuizzes, setdisplayQuizzes] = useState(true)\n\n    // const [currentUser] = useState(AuthService.getCurrentUser());\n    const [showSpinner, setShowSpinner] = useState(true);\n\n    // LOAD ALL QUIZZES FROM DATABASE ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\n    useEffect(() => {\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllQ').then((response) => {\n          console.log(response.data);\n          setallQuizzes(response.data) \n          setShowSpinner(false);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n    }, []);\n\n    // SET SELECTED(CLICKED) QUIZ\n    const setActiveQuiz = (quiz, index) => {\n        console.log(quiz)\n        setcurrentQuiz(quiz);\n        setdisplayQuizzes(false);\n        setdisplayQuiz(true);\n        \n    };\n\n    const backToQuizzes = () => {\n        setdisplayQuizzes(true);\n        setdisplayQuiz(false);\n    }\n\n    // RETURN CHECKED VALUE(true or false)\n    const checkRadioButton = (question_id, label) => {\n        if (!radioOptions[question_id]) {\n            return false;\n        }\n        return radioOptions[question_id] === label;\n    }\n\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\n    const setradio = (id , answer) => {\n        let checkedArray = checkedItems.map(x => {return {...x}})\n        const find_question = checkedArray.find(a => a.question_answer_id === id);\n        console.log(find_question)\n        if(find_question) {\n            checkedArray.find(a => a.question_answer_id === id).answer = answer;\n            setradioOptions((state) => {\n                console.log(state);\n                return {\n                    ...state,\n                    [id] : answer\n                }\n            });\n            setCheckedItems(checkedArray);\n        }\n        else{\n        setradioOptions((state) => {\n            console.log(state);\n            return {\n                ...state,\n                [id] : answer\n            }\n        });\n\n        setCheckedItems([\n            ...checkedItems,\n             {\n                question_answer_id : id,\n                answer: answer,\n                explanation: 'no explanation'\n            }\n        ]);}\n    }\n\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\n        let checkedArray = checkedItems.map(x => {return {...x}})\n        const find_question = checkedArray.find(a => a.question_answer_id === question_id);\n        console.log(find_question)\n        if(find_question) {\n            checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\n            setCheckedItems(checkedArray);\n        }\n        \n    }\n\n    // SUBMIT ANSWERS TO THE BACKEND  // DISABLED BECAUSE ADMIN MUST NOT SUBMIT\n    // const submitAnswers = () =>{\n    //     setmessage('');\n    //     setsuccessful(false);\n    //     const answers = {\n    //         quiz_id : currentQuiz.quiz_id,\n    //         quiz_title : currentQuiz.quiz,\n    //         quiz_answers : {\n    //             student_id : currentUser.message.email,\n    //             student_answers : checkedItems\n    //         }\n    //     }\n    //     console.log(\"current: \", currentQuiz);\n\n    //     console.log(\"Radio Answer: \", radioOptions);\n    //     console.log(\"CheckedItems: \", checkedItems);\n    //     console.log(\"Final: \", answers);\n    //     Axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\n    //         answers\n    //       }).then((res) => {\n    //             console.log(res);\n    //             if(res){\n    //                 //   window.location.reload(false);\n    //                 setmessage('You submitted Quiz as Admin or Teacher... Please Delete from the answers page else Stats will be affected');\n    //                 setsuccessful(true);\n    //                 setCheckedItems([]);\n    //                 setradioOptions({});\n\n    //             }\n    //       }).catch(error => {\n    //             console.log(error);\n    //             const errMessage =\n    //             (error.response.data.message[0].password || (error.response &&\n    //               error.response.data &&\n    //               error.response.data.message)) ||\n    //             error.message ||\n    //             error.toString();\n    //             console.log(errMessage);\n    //           setmessage(errMessage);\n    //             setsuccessful(false);            \n    //       });\n\n\n    // }\n\n\n\n    //DELETE SLECTED QUIZ WITH THE QUIZ ID FROM DAATABASE\n    // const onDelete = (id) => {\n    //     Axios.delete(`https://neuroeducation-feedback.herokuapp.com/api/delete/${id}`)\n    //     .then((res) => {\n    //         console.log(res)\n    //         setallQuizzes(allQuizzes.filter((question) => question._id !== id))\n    //     })\n    //     .catch(err => {\n    //         console.log(err); \n    //     });\n    // }; \n\n\n    return (\n        <div >\n            {/* html for spinner */}\n            {showSpinner && <div class=\"spinner\">\n                <div></div>\n                <div></div>\n            </div>\n            }\n            {!showSpinner && displayQuizzes && (<div  style={{borderRadius: \"10px\", marginTop: \"10px\"}}>\n                <List>\n                    {/* <h4></h4> */}\n                    <div >      \n                      <div className=\"col-xs-12 col-sm-12 col-md-12\">\n                          <Title data='Liste de quiz' />\n                        <div className=\"row\" >\n                            {displayQuizzes && allQuizzes && allQuizzes.map((quiz, index) => (\n                                <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\" onClick= {() => setActiveQuiz(quiz, index)} style={{paddingTop: \"10px\"}}> \n                                    {/* <NoteCard note={quiz.quiz_id}  handleDelete={\"no delete\"} color={'#4257b2'}/> */}\n                                    <FlippyItems\n                                    frontSide={\n                                        <Card \n                                        elevation={1} \n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\n                                            <CardHeader\n                                                  avatar={\n                                                      (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\n                                                          {quiz.quiz_id[0].toUpperCase()}\n                                                      </Avatar>)\n                                              }\n        \n                                                  title={quiz.quiz_id}\n                                                  // subheader={note}\n                                            />\n                                            <CardContent>\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                                    {(quiz.quiz).substr(0,27) + \"...\"}\n                                                </Typography>\n                                            </CardContent>\n                                        </Card> \n                                    }\n                                    backSide={\n                                        <Card \n                                        elevation={1} \n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\n                                            <CardHeader\n                                                  avatar={\n                                                      (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\n                                                          {quiz.quiz_id[0].toUpperCase()}\n                                                      </Avatar>)\n                                              }\n        \n                                                  title={quiz.quiz_id}\n                                                  // subheader={note}\n                                            />\n                                            <CardContent>\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                                    {(quiz.quiz).substr(0,27) + \"...\"}\n                                                </Typography>\n                                            </CardContent>\n                                        </Card> \n                                    }\n                                    />\n\n                                </div> \n                            ))}\n                        </div>\n                      </div>\n                    </div>\n                    {/* { displayQuizzes && allQuizzes && allQuizzes.map((quiz, index) => (\n                        <ListItem button onClick= {() => setActiveQuiz(quiz, index)} >\n                            <ListItemIcon>\n                                <BookOutlined />\n                            </ListItemIcon>\n                            <ListItemText primary={\n                                <h4> \n                                    {quiz.quiz} {''} \n                                </h4>\n                            } />\n                        </ListItem>\n                    ))} */}\n                </List>\n            </div>)}\n\n            <div>\n                {(displayQuiz && currentQuiz ) && (\n                    <div className=\"container-questions\">\n                        <Button onClick={()=> backToQuizzes()}><ArrowBackIcon fontsize=\"large\" style={{color: \"#4257b2\"}}/></Button> \n                        <center><h4>{currentQuiz.quiz}</h4><br/></center>\n                        {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\n                            <div key={questions.question_id}>\n                                <p><strong>{questions.question_id}{'. '}{questions.question_title}</strong></p>    \n                                <div>\n                                    <input \n                                        type=\"radio\" \n                                        value=\"Oui\" \n                                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \n                                    /> Oui\n                                    <input \n                                        type=\"radio\" \n                                        value=\"Plutot Oui\"  \n                                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \n                                    /> Plutot Oui\n                                    <input \n                                        type=\"radio\" \n                                        value=\"Plutot Non\"  \n                                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\n                                    /> Plutot Non\n                                    <input \n                                        type=\"radio\" \n                                        value=\"Non\" \n                                        checked={checkRadioButton(questions.question_id, \"Non\")}  \n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\n                                    /> Non\n                                </div>\n                                {radioOptions[questions.question_id] === \"Plutot Non\"\n                                || radioOptions[questions.question_id] === \"Plutot Oui\"\n                                || radioOptions[questions.question_id] === \"Non\" ? (\n                                    <div>\n                                        {questions.question_options && questions.question_options.map((options, index) => ( \n                                            <div>\n                                                <label>\n                                                    <input type=\"checkbox\" value={options.options_id} \n                                                    checked={checkedItems[options.option_text]}  \n                                                    onChange={(e) => \n                                                        setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\n                                                    }\n                                                    />\n                                                    <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\n                                                </label>\n                                            </div>\n                                        ))}\n                                    </div>\n                                ) : (<span>Aucune explication requise</span>)}\n                            </div>\n                        ))}\n                    </div>\n                ) }\n            </div>\n            {/* <Button disableElevation variant=\"contained\" onClick={submitAnswers}>Soumettre les réponses</Button> */}\n\n        </div>\n    )\n}\n\nexport default AllQuestions\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport TextField from '@material-ui/core/TextField';\n\n\nimport AuthService from \"../services/auth.service\";\nimport FormCard from './formCard'\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Ce champ est obligatoire !\n            </div>\n        );\n    }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Adresse email non valide.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 50) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\n      </div>\n    );\n  }\n};\n\n\nexport default class AdminRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\n    this.onChangeLastname = this.onChangeLastname.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\n\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      admin: false,\n      teacher: false,\n      roles : [],\n      successful: false,\n      message: \"\",\n      noRoleError: false,\n      mdpTmp: \"\",\n    };\n  }\n\n  onChangeFirstname(e) {\n    this.setState({\n      firstname: e.target.value\n    });\n  }\n  onChangeLastname(e) {\n    this.setState({\n      lastname: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangeCheckbox(e) {\n    let target = e.target;\n    let value = target.checked;\n    let name = target.name;\n    this.setState({\n        [name]: value,\n        noRoleError: false\n    })\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (!this.state.admin && !this.state.teacher) {\n      return (this.setState({\n        noRoleError: true\n      }))\n    }\n    else {\n      let roles = this.state.roles;\n      if (this.state.admin) {\n        roles.push(\"ROLE_ADMIN\");\n      }\n      if (this.state.teacher) {\n        roles.push(\"ROLE_TEACHER\")\n      }\n      this.setState({\n        roles\n      })\n    }\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.adminRegister(\n        this.state.firstname,\n        this.state.lastname,\n        this.state.email,\n        this.state.roles,\n      ).then(\n        response => {\n          this.setState({\n            message: \"Compte créé avec succès\",\n            successful: true,\n            mdpTmp: response.data.mdpTmp\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n                <TextField\n                    onChange={this.onChangeFirstname}\n                    // className={classes.field}\n                    // label=\"Note Title\"\n                    variant=\"outlined\"\n                    fullWidth\n                    required //just adds the asterix\n                    // error={titleError} //this prop just adds a 'red styling' to the TextField to indicate an error, it is set to either true or false\n                />\n        \n\n        <FormCard/>\n\n        <div className=\"card card-container\">\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Prenom</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.firstname}\n                    onChange={this.onChangeFirstname}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Nom</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.lastname}\n                    onChange={this.onChangeLastname}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"form-check\">\n                    <Input\n                      type=\"checkbox\"\n                      className=\"form-check-input\"\n                      name=\"teacher\"\n                      checked={this.state.teacher}\n                      onChange={this.onChangeCheckbox}\n                    />\n                    <label className=\"form-check-label\">\n                    Professeur\n                    </label>\n                  </div>\n                  <div className=\"form-check\">\n                    <Input\n                      type=\"checkbox\"\n                      className=\"form-check-input\"\n                      name=\"admin\"\n                      checked={this.state.admin}\n                      onChange={this.onChangeCheckbox}\n                    />\n                    <label className=\"form-check-label\">\n                    Administrateur\n                    </label>\n                  </div>\n\n                  {this.state.noRoleError && \n                    <div className=\"container\">\n                      <div className=\"itsanerror\">Vous devez sélectionner au moins un rôle</div>\n                    </div>\n                  }\n                </div>\n\n                <div className=\"form-group\">\n                  <button  className=\"btnn\">Créer le compte</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n\n                  {this.state.mdpTmp && (\n                    <div>\n                      <br></br><br></br>\n                      Votre mot de passe temporaire est :\n                      {\" \" + this.state.mdpTmp}\n                      <br></br><br></br>\n                      Vous pourrez le modifier en vous connectant à votre profil\n                    </div>\n                  )}\n                  \n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport AuthService from \"../services/auth.service\";\n\nconst ProtectedRoute =({ component: Component, role, ...rest })=> {\n        const currentUser = AuthService.getCurrentUser()\n        let isAuthenticated = '';\n        let isAuthorized = false;\n\n        if(currentUser){\n            isAuthenticated = currentUser.token;\n\n            role.map(roles => {\n                if(currentUser.message.roles.includes(roles)){\n                    isAuthorized = true;\n                } \n                return isAuthorized\n            });\n        }\n\n        return (isAuthenticated && (isAuthorized))? (\n            <Component />\n        ) : (\n            <div>\n            <Redirect to={{ pathname: '/home' }} />\n            </div>\n        );\n}\n\nexport default ProtectedRoute;","\nimport { Line } from 'react-chartjs-2';\n\n\nconst LineChart = ({ labels, data }) => {\n    return ( \n        <div>\n            <Line\n                data={{\n                    labels: labels,\n                    datasets: [{\n                        data: data,\n                        borderColor: 'hsl(205, 78%, 60%)'\n                    }]\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    legend: {\n                        display: false\n                    },\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }]\n                    },\n                    tooltips: {\n                        callbacks: {\n                            label: (item, datax) => {\n                                let string = \"\"\n                                switch(data[item.index]){\n                                    case 4:\n                                        string = \"Oui\"\n                                        break\n                                    case 3:\n                                        string = \"Plutot Oui\"\n                                        break\n                                    case 2: \n                                        string = \"Plutot Non\"\n                                        break\n                                    default:\n                                        string = \"Non\"\n                                        break\n                                }\n                                return string\n                            }\n                        }\n                    }\n                }}\n            />\n        </div>\n     );\n}\n \nexport default LineChart;\n","//CREATE LABELS FOR LINE CHART \nconst LineLabels = (integer) => { //integer is == groupArray.length\n    let array = []\n    switch(integer){\n        case 1:\n            array = [\"1er quiz\"];\n            break;\n        case 2:\n            array = [\"1er quiz\", \"2e quiz\"];\n            break;\n        case 3:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\"];\n            break;\n        case 4:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\"];\n            break;\n        case 5:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\"];\n            break;\n        case 6:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\"];\n            break;\n        case 7:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\"];\n            break;\n        case 8:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\"];\n            break;\n        case 9:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\"];\n            break;\n        case 10:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\"];\n            break;\n        case 11:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\"];\n            break;\n        case 12:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\"];\n            break;\n        case 13:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\"];\n            break;\n        case 14:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\"];\n            break;\n        default:\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\", \"15e quiz\"];\n            break;\n    }\n    return array;\n  }\n\n  export default LineLabels;\n\n","import React from 'react';\nimport '../paginate.css';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\nimport { List, ListItem, ListItemText, ListItemAvatar, Avatar, Button, IconButton } from '@material-ui/core';\nimport { useState } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nexport const Paginate = ({allStudents, getAllQuizzes, allQuizzes, displayQuizzes, setActiveQuiz, evolution}) => {\n    const [start, setStart] = useState(0)\n    const [end, setEnd] = useState(10)\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n\n    const prevStudent = () => {\n        setStart((old) => {\n            let newStart = old - 10\n            if(newStart < 0){\n                return allStudents.length - 10\n            }\n            else{\n                return newStart\n            }\n        })\n        setEnd((old) => {\n            let newEnd = old - 10\n            if((start - 10) < 0){\n                return allStudents.length\n            }\n            else{\n                return newEnd\n            }\n        })\n    }\n    const nextStudent = () => {\n        setStart((old) => {\n            let newStart = old + 10\n            if(newStart >= allStudents.length){\n                return 0\n            }\n            else{\n                return newStart\n            }\n        })\n        setEnd((old) => {\n            let newEnd = old + 10\n            if((start + 10) >= allStudents.length) {\n                return 10\n            }\n            else{\n                return newEnd\n            }\n        })\n    }\n\n\n    return (\n        // {(allQuizzes && displayQuizzes) &00p0& (\n        //     <div >\n        //         <h4>{'Questionnaires auxquels ont répondu : '}</h4>\n        //         <h4> {currentStudent}</h4>\n        //         <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n        //             <List>\n        //             {allQuizzes && allQuizzes.map((quiz, index) => (\n        //                 <ListItem button onClick= {() => setActiveQuiz(quiz, index)}>\n        //                     <ListItemIcon>\n        //                         <BookOutlined />\n        //                     </ListItemIcon>\n        //                     <ListItemText primary={\n        //                         <h4>\n        //                         {quiz.quiz_id} \n        //                         </h4>\n        //                     }/>\n        //                 </ListItem>\n        //             ))}\n        //             </List>\n        //         </div>\n        //     </div>\n        // ) }\n        \n\n        <div>\n            {allStudents && allStudents.slice(start, end).map((student, index) => (\n                <Accordion expanded={expanded === `panel${index + 0}`} onChange={handleChange(`panel${index + 0}`)} onClick={()=> getAllQuizzes(student.email,student.firstname +' ' +student.lastname )}>\n                    <AccordionSummary\n                        aria-controls=\"panel2a-content\"\n                        id=\"panel2a-header\"\n                        expandIcon={<ExpandMore style={{color: \"#4257b2\"}} />}\n                    >\n                        <Avatar style={{fontSize: \"0.8rem\", backgroundColor: \"#4257b2\"}}>\n                            {(student.firstname[0] +' ' + student.lastname[0]).toUpperCase()}\n                        </Avatar>\n                        <Typography  style={{marginLeft: \"15px\"}} variant=\"h6\">{student.firstname +' ' +student.lastname}</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        {(allQuizzes && displayQuizzes) && (\n                            <div style={{display: \"flex\"}}>\n                                {allQuizzes && allQuizzes.map((quiz, index) => (\n                                    <Tooltip title=\"show evolution\">\n                                        <Chip  style={{color:\"#fff\", marginLeft: \"5px\", backgroundColor: \"hsl(205, 78%, 60%)\"}} label={quiz.quiz_id} onMouseOver= {() => setActiveQuiz(quiz, index)} onClick={()=> evolution()}/>\n                                    </Tooltip>\n                                ))}\n                            </div>\n                        )}\n                        {(displayQuizzes === false) && (\n                            <Typography>Cet étudiant n'a répondu à aucun quiz</Typography>\n                        )}\n                    </AccordionDetails>\n                </Accordion>\n                // <ListItem key={student.email} button onClick={() => getAllQuizzes(student.email,student.firstname +' ' +student.lastname)}>\n                //     <ListItemAvatar>\n                //         \n                //     </ListItemAvatar>\n                //     <ListItemText primary={<h4>{student.firstname +' ' +student.lastname}</h4>}/>\n                // </ListItem>\n            ))}\n            <div className=\"button-container\">\n                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\"}} startIcon={ <FaChevronLeft />} className=\"prev-btn\" onClick={prevStudent}>\n                    Précédent\n                </Button>\n                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\"}} endIcon={<FaChevronRight />} className=\"next-btn\" onClick={nextStudent}>\n                    Suivant\n                </Button>\n            </div>\n        </div>\n    )\n}","import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport { Avatar, Card, CardContent, CardHeader, Grid, IconButton, List, ListItem, ListItemAvatar, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\nimport BookOutlined from '@material-ui/icons/BookOutlined';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport LineChart from './LineChart';\nimport LineLabels from './LineLabels';\nimport SearchService from \"../services/search.service\";\nimport {Paginate} from './Paginate';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\n\n\n\nconst AllStudents = () => {\n    const [allStudents, setallStudents] = useState([]);\n    const [allQuizzes, setallQuizzes] = useState(null)\n    // const [message, setmessage] = useState('');\n    const [errorMessage, seterrorMessage] = useState('')\n    // const [successful, setsuccessful] = useState(false);\n    const [displayQuizzes, setdisplayQuizzes] = useState(null);\n    const [displayActiveQuiz, setdisplayActiveQuiz] = useState(false)\n    const [displayEvolution, setdisplayEvolution] = useState(false);\n    const [displayMain, setdisplayMain] = useState(true);\n    const [currentStudent, setcurrentStudent] = useState(null);\n    const [currentQuiz, setcurrentQuiz] = useState(null);\n    const [showSpinner, setShowSpinner] = useState(true);\n    const [lineArray, setLineArray] = useState([]);\n    const [displayLineChart, setDisplayLineChart] = useState(false);\n    const [actualQuiz, setactualQuiz] = useState([]);\n\n    useEffect(() => {\n        axios.get( \"https://neuroeducation-feedback.herokuapp.com/api/findAllStudents\")\n        .then(res => {\n            console.log(res.data);\n            setallStudents(res.data);\n            setShowSpinner(false);\n        })\n        .catch(error => {\n            const resMessage =\n            (error.response && error.response.data && error.response.data.message) \n            || error.message || error.toString();\n  \n            seterrorMessage(resMessage);\n        });\n\n    }, [])\n\n    const getAllQuizzes = (student_id, name) => {\n        setcurrentQuiz(null);\n        setallQuizzes([]);\n        setdisplayQuizzes(null) \n        axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\n            console.log(response.data.quizzes);\n            if((response.data.quizzes).length ){\n                setallQuizzes(response.data.quizzes)\n                setdisplayQuizzes(true); \n            }\n            else{\n                setallQuizzes(null)\n                setdisplayQuizzes(false)  \n            }\n            setActiveStudent(name);\n          })\n          .catch(function (err) {\n              seterrorMessage(err.response.data.message|| err.response.data.message[0].error);\n          });\n    }\n\n\n\n\n\n      // SET SELECTED(CLICKED) QUIZ\n  const setActiveQuiz = (quiz, index) => {\n    console.log(quiz);\n    setdisplayActiveQuiz(true);\n    setcurrentQuiz(quiz);\n    let tempLineArray = [];\n    quiz.quiz_answers.forEach((quiz, index) => {\n        tempLineArray.push(getAllAns(quiz))\n    })\n    setLineArray(tempLineArray)\n\n    \n    // setdisplayQuizzes(null);\n\n// GET ACTUAL QUESTIONS FROM DATABASE\nSearchService.searchQuiz(\n    quiz.quiz_id,\n  ).then(\n    response => {\n      console.log(response.data);\n    //   setsuccessful(true);\n      setactualQuiz(response.data);\n    })\n    .catch(\n    error => {\n      console.log(error.response);\n      const resMessage =\n        (error.response && error.response.data && error.response.data.message) \n        || error.message || error.toString();\n\n    //   setmessage(resMessage);\n    //   setsuccessful(false);\n    }\n  );\n  };\n\n  const setActiveStudent = (name) => {\n    console.log(name)\n    setcurrentStudent(name);\n    // setcurrentQuiz(quiz);\n    // setcurrentIndex(index)\n  };\n\n  const backToAllQuizzes = () => {\n    setdisplayQuizzes(true);\n    setdisplayActiveQuiz(false);\n  }\n\n  const evolution = () => {\n    if(displayMain===true && displayEvolution===false){\n        setdisplayMain(false); \n        setdisplayEvolution(true);\n        setDisplayLineChart(true);\n    } \n    else if(displayMain===false && displayEvolution===true){\n        setdisplayMain(true); \n        setdisplayEvolution(false);\n        setDisplayLineChart(false);\n    } \n\n\n  }\n  // CREATE ARRAY CONTAINING ANSWERS OF EACH ATTEMPT\n  const getAllAns = quiz => {\n    let array = []\n    quiz.student_answers.forEach(answers=> {\n        switch(answers.answer){\n            case \"Non\":\n                array.push(1)\n                break\n            case \"Plutot Non\":\n                array.push(2)\n                break\n            case \"Plutot Oui\":\n                array.push(3)\n                break\n            default:\n                array.push(4)\n                break\n        }\n    })\n    return array\n  }\n\n//   import {useHistory} from 'react'\n//   const history = useHistory()\n\n//   const myClickFunction = () => {\n//       history.push('/go-to-somewhere')\n//   }\n\n  //GENERATE DATA VALUES FOR LINE CHART \n  const getLineData = (groupArray, index) => {\n    let dataArray = []\n    groupArray.forEach((item) => {\n        dataArray.push(item[index])\n    })\n    return dataArray\n  }\n\n \n \n\n    return (\n    \n        <div className=\"container-questions\">\n            {errorMessage ? (\n                <div className=\"form-group\">\n                    <div\n                    className={ \"alert alert-danger\"}\n                    role=\"alert\"\n                    >\n                    {errorMessage}\n                    </div>\n                </div>\n            ):(\n                <div>\n                    {displayMain  && <div className=\"row\">\n                        <div className=\"col-xs-12 col-sm-12 col-md-12\">\n                            <Typography\n                                style={{textAlign: \"center\", color:\"#4257b2\"}}\n                                variant=\"h5\"\n                            >\n                                {'Liste des étudiants '}\n                                <div className=\"underline\"></div>\n                            </Typography>\n                           \n                            {showSpinner && (<div class=\"spinner\">\n                                <div></div>\n                                <div></div>\n                            </div>)}\n                            {!showSpinner && (<div  class=\"quiz\" style={{borderRadius: \"10px\"}}>\n                                    {/* <List>\n                                        {allStudents && allStudents.map((student,index) =>(\n                                            <ListItem button onClick={()=> getAllQuizzes(student.email,student.firstname +' ' +student.lastname )}>\n                                                <ListItemAvatar>\n                                                    <Avatar>\n                                                    {(student.firstname[0] +' ' +student.lastname[0]).toUpperCase()}\n                                                    </Avatar>\n                                                </ListItemAvatar>\n                                                <ListItemText primary={<h4>{student.firstname +' ' +student.lastname}</h4>} />\n                                            </ListItem>\n                                        ))}\n                                    </List> */}\n                                    <Paginate \n                                        allStudents={allStudents}\n                                        getAllQuizzes={getAllQuizzes}\n                                        allQuizzes={allQuizzes}\n                                        displayQuizzes={displayQuizzes}\n                                        setActiveQuiz={setActiveQuiz}\n                                        evolution={evolution}\n                                    />\n                                </div>)}\n\n                        </div>\n                        {/* <div className=\"col-xs-12 col-sm-12 col-md-6\">   */}\n                            {/* {(allQuizzes && displayQuizzes) && (\n                                <div >\n                                    <h4>{'Questionnaires auxquels ont répondu : '}</h4>\n                                    <h4> {currentStudent}</h4>\n                                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n                                        <List>\n                                        {allQuizzes && allQuizzes.map((quiz, index) => (\n                                            <ListItem button onClick= {() => setActiveQuiz(quiz, index)}>\n                                                <ListItemIcon>\n                                                    <BookOutlined />\n                                                </ListItemIcon>\n                                                <ListItemText primary={\n                                                    <h4>\n                                                    {quiz.quiz_id} \n                                                    </h4>\n                                                }/>\n                                            </ListItem>\n                                        ))}\n                                        </List>\n                                    </div>\n                                </div>\n                            ) } */}\n                            {/* {(displayQuizzes===false) && (\n                                <div>\n                                    <h4>{'Questionnaires auxquels ont répondu : '}</h4>\n                                    <h4> {currentStudent}</h4>\n                                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n                                        <h4>Cet étudiant n'a répondu à aucun quiz</h4>\n                                    </div>\n                                </div>\n                            \n                            )} */}\n                            {/* <div > */}\n                            {/* {(currentQuiz && displayActiveQuiz) && \n                                <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n                                    <ListItem button>\n                                        <ListItemIcon>\n                                            <BookOutlined />\n                                        </ListItemIcon>\n                                        <ListItemText primary={\n                                            <h4>\n                                            {currentQuiz.quiz_id} \n                                            </h4>\n                                        }/>\n                                    </ListItem>\n                                    <h4>{currentStudent+' has taken this quiz '+ (currentQuiz.quiz_answers.length) +' times'}</h4>\n                                    <button className=\"btnn\" onClick={()=> backToAllQuizzes()}>Back</button>\n                                    <button className=\"btnn\" onClick={()=> evolution()}>{'View Answers & Evolution'}</button>\n                                </div>\n                            } */}\n                                \n\n                        {/* </div> \n                        </div> */}\n\n            \n                    </div>\n                    }\n                    <div>                        \n                        {/* <div className=\"row\">\n                            \n                            {(currentQuiz && displayEvolution) && currentQuiz.quiz_answers.map((quiz, index)=>(                            \n                                <div className=\"col-xs-12 col-sm-12 col-md-6\">\n                                    <div className={`quiz`} style={{borderRadius: \"10px\"}}>\n                                        <h4>{'Attempt number ' + (index+1)}</h4>\n                                        {quiz.student_answers.map((answers, idx)=>(\n                                            <div>\n                                            <h4>{'Question '+answers.question_answer_id}</h4>\n                                            <h4>{'answer: ' +answers.answer +' explanation: ' +answers.explanation}</h4>\n                                            </div>\n                                        ))}\n                                    </div>    \n                                </div>  \n                            ))}\n                        </div> */}\n\n                        {displayLineChart && (\n                            <div>\n                             <IconButton  onClick={()=>evolution()} style={{float:\"left\", color:\"#4257b2\"}}>\n                                <ArrowBackIcon />\n                            </IconButton>\n                            <Grid container spacing={3}>\n                                {(lineArray.length && displayLineChart) && lineArray[0].map((attempt, index) => (\n                                    <Grid item md={6} sm={12} lg={4} >\n                                        <Card elevation={2}>\n                                            <CardHeader\n                                                action={\n                                                    <IconButton>\n                                                        <MoreVert />\n                                                    </IconButton>\n                                                }\n                                                title={<Typography style={{fontSize: \"1rem\"}} color=\"textSecondary\" variant=\"h6\" component=\"p\">{actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)}</Typography>}\n                                                subheader={<div style={{fontSize: \"0.8rem\"}}>Oui-4 Plutot Oui-3 Plutot Non-2 Non-1</div>}\n                                            />\n                                            <CardContent>\n                                                <LineChart labels={LineLabels(lineArray.length)} data={getLineData(lineArray, index)} />\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                            </div>\n                           \n                        )}\n                    </div>    \n                </div>)}\n        </div>\n    )\n}\n\nexport default AllStudents\n","import {useState, useEffect} from 'react'\nimport AuthService from \"../services/auth.service\";\n\n\nconst VerifyAccount = ({match: { params }} ) => {\n    const [message, setmessage] = useState('');\n    const [successful, setsuccessful] = useState(false)\n\n    useEffect(() => {\n        AuthService.verifyAccount(params.token)\n        .then(response=>{\n            setmessage(response.data.message);\n            setsuccessful(true);\n        })\n        .catch(error=>{\n            console.log(error)\n            setmessage(error.response.data.message|| error.response.data);\n            setsuccessful(false);\n        })\n    }, [params.token])\n\n\n    return (\n        <div>\n            {message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {message}\n                </div>\n              </div>\n            )}\n        </div>\n    )\n}\n\nexport default VerifyAccount\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\"\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 140,\n    },\n  });\n\nconst AdminDashboard = () => {\n    let history = useHistory(); \n    const classes = useStyles();\n\n\n    const routeChange = (path, item) =>{\n    let newPath = path;\n    if(item===\"DATABASE\"){\n        return window.location.href = newPath;\n    }\n    history.push(newPath);\n  }\n\n  const childRoute = route =>{\n    if(route===\"USER\"){\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/User'\n    }\n    else if(route===\"QUIZZES\"){\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/Quizzes'\n    }\n    else if(route===\"HISTORY\"){\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/history'\n    }\n  }\n\n  const dashboardArray = [\n      {\n        title: \"ADD ACCOUNT\",\n        path: '/adminRegister',\n        children: [],\n        message: \"Add a new Admin or Teacher into the Database.\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <SupervisorAccountIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n    },\n    {\n        title: \"EVOLUTION \",\n        path: '/students',\n        children: [],\n        message: \"As an admin or teacher, view all students progress with a few clicks\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <TrackChangesIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n    },\n    {\n        title: \"ALL QUIZZES\",\n        path: '/questions',\n        children: [],\n        message: \"A list of all quizzes in the database. View all with a few clicks\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <AssignmentIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n    },    \n    {\n        title: \"ALL ANSWERS\",\n        path: '/answers',\n        children: [],\n        message: \"A history of all student answers in the database. View all with a few clicks\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <RecentActorsIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n    },\n    // {\n    //     title: \"DASHBOARD\",\n    //     path: '/dashboard',\n    //     children: [],\n    //     message: \"A link to the admin dashboard where you can see everything\",\n    //     actions : {\n    //         one: \"Share\",\n    //         two: \"Learn More\"\n    //     },\n    //     icon: <DashboardIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n    // },\n    {\n        title: \"DATABASE\",\n        path: 'https://neuroeducation-feedback.herokuapp.com/admin/',\n        children: ['USER', 'QUIZZES', 'HISTORY'],\n        message: \"This is a special page for the Admin. For Managing Database.\",\n        actions : {\n            one: \"Share\",\n            two: \"Learn More\"\n        },\n        icon: <StorageIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n    },\n  ]\n\n  return (\n    <>\n        <div className=\"col-xs-12 col-sm-12 col-md-12\" style={{paddingTop: \"60px\"}}>\n            <div className=\"row\">\n                {dashboardArray && dashboardArray.map(item => (\n                    <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"> \n                        <Card className={classes.root} style={{height:200, padding: \"20px\", \"margin-bottom\": \"10px\"}}>\n                            <CardActionArea>\n                                {/* <CardMedia\n                                className={classes.media}\n                                image=\"/static/images/cards/contemplative-reptile.jpg\"\n                                title=\"Contemplative Reptile\"\n                                /> */}\n                                <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" >\n                                    {/* <div className=\"row\" >\n                                        hii\n                                    {Parser(item.icon)}\n                                    </div> */}\n                                    <Typography variant=\"h6\" style={{color:\"#4257b2\"}}>{item.title} <div className=\"underlinee\"></div></Typography>\n                                    {item.icon}\n                                    {/* <StorageIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" /> */}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                {item.message}\n                                </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                            <CardActions>\n                                {item.title=== \"DATABASE\" ? (\"\") : \n                                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\"}} onClick={()=>routeChange(item.path, item.title)}>\n                                GO TO\n                                </Button>\n                                }\n\n                                {item.children && item.children.map(child=> (\n                                    <Button \n                                    size=\"small\" \n                                    style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\", width: \"45%\"}} \n                                    onClick={()=>childRoute(child)}>\n                                        {child}\n                                    </Button>\n                                    // <button className=\"btnn\" onClick={()=>childRoute(child)} style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\", width: \"45%\"}}>{child}</button>\n\n                                 ))\n                                }\n                            </CardActions>\n                        </Card>\n                    </div>\n                ))\n   }\n            </div>\n        </div>\n    </>\n  );\n};\n\nexport default AdminDashboard;\n","import React, {useEffect} from 'react';\nimport { Link} from \"react-router-dom\";\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\n// import HomeIcon from '@material-ui/icons/Home';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function TemporaryDrawer(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  useEffect(() => {\n      console.log(props)\n  }, [props])\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n      // style={{background:\"#e6e6d5\"}}\n    >\n\n    <List style={{\"paddingTop\": \"30px\", background: \"#4257b2\"}}>\n        <ListItem button key={\"home\"} style={{color: 'white'}}>\n            <ListItemIcon> <MenuIcon style={{color: 'white'}}fontsize=\"large\"/></ListItemIcon>\n            <ListItemText primary={\"MENU\"} />   \n          </ListItem>\n \n      </List>\n      <List >\n        {props.lists && (props.lists).map((text, index) => (\n         <Link to={text.link} style={{color: '#4257b2', textDecoration: 'none'}}>   \n          <ListItem button key={text.title}>\n            <ListItemIcon>{text.icon}</ListItemIcon>\n            <ListItemText primary={text.title} />   \n          </ListItem>\n         </Link> \n        ))}\n      </List>\n      {/* <Divider /> */}\n      <List style={{position: \"absolute\",bottom: 0}}>\n        {props.actions.map((text, index) => (\n         <Link to={text.link} onClick={text.onclick} style={{color: '#4257b2', textDecoration: 'none'}}>   \n            <ListItem button key={text.title}>\n                <ListItemIcon>{text.icon}</ListItemIcon>\n                <ListItemText primary={text.title} />   \n            </ListItem>\n        </Link>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div >\n      {['left'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)}><MenuIcon style={{color:\"white\",  float:\"left\"}} fontSize=\"large\"></MenuIcon></Button>\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)} style={{background:\"#e6e6d5\"}}>\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Component } from \"react\";\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n// import axios from 'axios';\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Home2 from \"./components/home2.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\nimport PostSubmitForm from \"./components/postSubmitForm.component\";\nimport AllAnswers from \"./components/all-answers.component\";\nimport AllQuestions from './components/allquestions.component';\nimport AdminRegister from \"./components/admin-register.component\";\nimport { Button } from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport ProtectedRoute from \"./components/protected-routes.component\";\nimport AllStudents from \"./components/all-students.component\";\nimport VerifyAccount from \"./components/verify-account.component\";\nimport AdminDashboard from \"./components/Admin/admin-dashboard\";\nimport TemporaryDrawer from \"./components/navbar\";\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nconst theme = createMuiTheme({\n  palette:{\n    primary: {\n      main: \"#DCDCDC\"\n    }\n  }\n})\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showAdminBoard: false,\n      showTeacherBoard: false,\n      currentUser: undefined,\n      admin:[\"ROLE_ADMIN\"],\n      adminTeacher:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\"],\n      allUsers:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\" , \"ROLE_STUDENT\"],\n      studentAdmin: [\"ROLE_STUDENT\", \"ROLE_ADMIN\"]\n    };\n  }\n\n  componentDidMount() {\n\n    \n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showAdminBoard: user.message.roles.includes(\"ROLE_ADMIN\"),\n        showTeacherBoard: user.message.roles.includes(\"ROLE_TEACHER\"),\n        navList : [\n        // {\n        //   title : \"Accueil\",\n        //   link : '/home'\n        // },\n        (user && !user.message.roles.includes(\"ROLE_TEACHER\")) && {\n          title : \"Utilisateur\",\n          link : '/user',\n          icon: <FindInPageIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n        },\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\") ) && {\n          title : \"Ajouter un Quiz\",\n          link : '/addQuiz',\n          icon: <AddBoxIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n        },\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {\n          title : \"Page Questions\",\n          link : '/questions',\n          icon: <SupervisorAccountIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n        },\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {            \n          title : \"Page Reponses\",\n          link : '/answers',\n          icon: <AssignmentIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n        },\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {            \n          title : \"Page Etudiants\",\n          link : '/students',\n          icon: <RecentActorsIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n        },\n        user.message.roles.includes(\"ROLE_ADMIN\")  && {\n          title : \"Admin Dashboard\",\n          link : '/dashboard',\n          icon: <DashboardIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n        }\n\n        \n      ],\n      actions : [user &&  {\n          title : (user.message.firstname),\n          link : '/profile',\n          onclick : '',\n          icon: <AccountCircleIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n        },\n        user &&  {\n          title : \"Deconnecion\",\n          link : '/home',\n          onclick : this.logOut,\n          icon: <ExitToAppIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\n        }\n      ]\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n    this.setState({\n      currentUser: undefined,\n      showAdminBoard: false,\n      showTeacherBoard: false\n    })\n    if (!this.state.currentUser) {  \n      return <Redirect to=\"/home\" />;\n    }\n  }\n\n  render() {\n    //  const { currentUser, showAdminBoard, showTeacherBoard, admin, adminTeacher, allUsers, student, navList } = this.state;\n    const { currentUser, admin, adminTeacher, allUsers, studentAdmin, navList } = this.state;\n\n    return (\n      <ThemeProvider theme={theme}>\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark \" style={{background:'#4257b2'}}>\n            \n            {currentUser && \n              <TemporaryDrawer lists = {navList} actions={this.state.actions}></TemporaryDrawer>\n              }\n\n            <Link to={\"/\"} className=\"navbar-brand\">\n              Outsmarted\n            </Link>\n            \n            {/* <div className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/home\"} className=\"nav-link\">\n                  <Button color=\"primary\">Accueil</Button>\n                </Link>\n              </li>\n\n              {(showAdminBoard || showTeacherBoard) && (\n                <div>\n                  <li className=\"nav-item\">\n                    <Link to={\"/admin\"} className=\"nav-link\">\n                      <Button color=\"primary\">Ajouter un quiz</Button>\n                    </Link>\n                  </li>\n                </div> \n              )}\n\n              {showAdminBoard && (\n                <li className=\"nav-item\">\n                  <Link to={\"/adminRegister\"} className=\"nav-link\">\n                    <Button color=\"primary\">Ajouter un compte</Button>\n                  </Link>\n                </li>\n              )}\n\n              {(showAdminBoard || showTeacherBoard) && (\n                <div>\n                  <li className=\"nav-item\">\n                    <Link to={\"/questions\"} className=\"nav-link\">\n                      <Button color=\"primary\">Page Questions</Button>\n                    </Link>\n                  </li>\n                </div> \n              )}\n\n              {(showAdminBoard || showTeacherBoard) && (\n                <div>\n                  <li className=\"nav-item\">\n                    <Link to={\"/answers\"} className=\"nav-link\">\n                      <Button color=\"primary\">Page Réponses</Button>\n                    </Link>\n                  </li>\n                </div> \n              )}\n\n              {(showAdminBoard || showTeacherBoard) && (\n                <div>\n                  <li className=\"nav-item\">\n                    <Link to={\"/students\"} className=\"nav-link\">\n                      <Button color=\"primary\">Page Etudiants</Button>\n                    </Link>\n                  </li>\n                </div> \n              )}\n\n                {(currentUser && !showTeacherBoard) && (\n                <li className=\"nav-item\">\n                  <Link to={\"/user\"} className=\"nav-link\">\n                    <Button color=\"primary\">Répondre à un quiz</Button>\n                  </Link>\n                </li>\n                )}\n\n                {showAdminBoard  && (\n                <li className=\"nav-item\">\n                  <Link to={\"/dashboard\"} className=\"nav-link\">\n                    <Button color=\"primary\">TEST</Button>\n                  </Link>\n                </li>\n                )}\n            </div> */}\n\n            {currentUser ? (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/profile\"} className=\"nav-link\">\n                    <Button color=\"primary\" style={{textTransform: \"none\"}}><AccountCircleIcon style={{color:\"white\",  float:\"right\"}} fontSize=\"large\" />{currentUser.message.firstname}</Button>\n                  </Link>\n                </li>\n                {/* <li className=\"nav-item\">\n                  <Link to={\"/home\"} className=\"nav-link\" onClick={this.logOut}>\n                    <Button color=\"primary\">Déconnexion</Button>\n                  </Link>\n                </li> */}\n              </div>\n            ) : (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/login\"} className=\"nav-link\">\n                    <Button color=\"primary\" style={{textTransform: \"none\"}}>Se Connecter</Button>\n                  </Link>\n                </li>\n                \n\n                <li className=\"nav-item\">\n                  <Link to={\"/register\"} className=\"nav-link\">\n                    <Button color=\"primary\" style={{textTransform: \"none\", font:\"Robotto\"}}>Créer un Compte</Button>\n                  </Link>\n                </li>\n              </div>\n            )}\n\n            </nav>\n\n            <div className=\"container pt-3\">\n              <Switch>\n                <Route exact path=\"/\" component={Home2} />\n                <Route exact path=\"/home\" component={Home2} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/verifyAccount/:token\" component={VerifyAccount} />\n                <Route exact path=\"/postSubmitForm\" component={PostSubmitForm}/>\n                <ProtectedRoute exact path=\"/adminRegister\" component={AdminRegister} role={admin}/>\n                <ProtectedRoute exact path=\"/profile\" component={Profile} role={allUsers}/>\n                <ProtectedRoute exact path=\"/user\" component={BoardUser} role={studentAdmin}/>\n                <ProtectedRoute exact path=\"/questions\" component={AllQuestions} role={adminTeacher}/>\n                <ProtectedRoute exact path=\"/answers\" component={AllAnswers} role={adminTeacher}/>\n                <ProtectedRoute exact path=\"/students\" component={AllStudents} role={allUsers}/>\n                <ProtectedRoute exact path=\"/addQuiz\" component={BoardAdmin} role={adminTeacher}/>\n                <ProtectedRoute exact path=\"/dashboard\" component={AdminDashboard} role={admin}/>\n                <ProtectedRoute  component={Home} />\n              </Switch>\n            </div>\n          \n\n        </div>\n      </ThemeProvider>\n    );\n\n  }\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// serviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}