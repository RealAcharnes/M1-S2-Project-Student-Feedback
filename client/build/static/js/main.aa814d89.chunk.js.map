{"version":3,"sources":["services/auth.service.js","components/formCard.js","components/login.component.js","components/register.component.js","components/home.component.js","components/home2.component.js","components/formCard2.js","components/modifyPassword.component.js","components/profile.component.js","services/search.service.js","components/Title.js","components/LineLabels.js","components/LineChart.js","components/Flippy.js","components/board-user.component.js","services/admin-submit-form.js","components/confirm-dialogue.js","components/menu.js","components/board-admin.component.js","components/postSubmitForm.component.js","components/BarChart.js","components/DoughnutChart.js","components/all-answers.component.js","components/allquestions.component.js","components/admin-register.component.js","components/protected-routes.component.js","components/Paginate.js","components/all-students.component.js","components/verify-account.component.js","components/Admin/admin-dashboard.jsx","components/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","email","password","axios","post","then","response","data","token","localStorage","setItem","JSON","stringify","removeItem","firstname","lastname","password_confirmation","roles","old_password","parse","getItem","useStyles","makeStyles","theme","root","display","details","flexDirection","content","flex","cover","width","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","FormCard","float","useTheme","Card","style","backgroundImage","maxWidth","margin","marginTop","backgroundColor","minWidth","Alert","props","elevation","variant","Login","handleClose","setState","open","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","e","this","target","value","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","className","onSubmit","ref","c","padding","paddingTop","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","successful","htmlFor","color","type","size","onChange","required","fullWidth","marginBottom","disabled","onClick","pathname","border","Component","isEmail","vlastname","vfirstname","vpassword","vpasswordConfirmation","Register","handleRegister","onChangeFirstname","onChangeLastname","onChangePasswordConfirmation","register","clear","name","validations","Home","Home2","title","description","textAlign","borderRadius","src","alt","FormCard2","maxHeight","ModifyPassword","useState","oldPw","setOldPw","newPw","setNewPw","confirmNewPw","setConfirmNewPw","setmessage","setsuccessful","currentUser","currentuser","errors","seterrors","setopen","ApplyModifications","validate","changePassword","res","catch","errMessage","console","log","id","class","placeholder","marginRight","Profile","getCurrentUser","get","answers","Title","noUnderline","subHeader","Typography","LineLabels","integer","array","LineChart","labels","datasets","borderColor","options","maintainAspectRatio","legend","scales","yAxes","ticks","beginAtZero","tooltips","callbacks","label","item","datax","string","index","FlippyItems","frontSide","backSide","flipOnHover","flipOnClick","flipDirection","field","BoardUser","search","setsearch","errorMessage","seterrorMessage","currentQuiz","setcurrentQuiz","radioOptions","setradioOptions","checkedItems","setCheckedItems","allQuizzes","setallQuizzes","displayAllAnswered","setdisplayAllAnswered","setvalidate","lineArray","setLineArray","actualQuiz","setactualQuiz","displayMain","setdisplayMain","displayLineChart","setDisplayLineChart","displayCurrentQuiz","setdisplayCurrentQuiz","evolution","goBack","getLineData","groupArray","dataArray","forEach","useEffect","student_id","quizzes","err","checkRadioButton","question_id","setradio","answer","checkedArray","map","x","find","a","question_answer_id","explanation","role","SearchService","searchQuiz","quiz","Flippy","onMouseOver","tempLineArray","quiz_answers","student_answers","getAllAns","quiz_id","setActiveQuiz","CardHeader","avatar","Avatar","toUpperCase","CardContent","Tooltip","IconButton","questions","indexx","fontSize","question_title","checked","question_options","options_id","option_text","setCheckbox","options_text","timestamp","Date","now","formatedTimestamp","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","quiz_title","time_submitted","Grid","container","attempt","md","sm","lg","component","subheader","created_by","ConfirmDialogue","confirmDialog","Dialog","isOpen","DialogTitle","DialogContent","subTitle","DialogActions","onDiscard","onConfirm","MenuOption","React","anchorEl","setAnchorEl","Boolean","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","PaperProps","ITEM_HEIGHT","option","MenuItem","selected","onclick","icon","withStyles","background","boxShadow","textTransform","Button","MyForm","onChangeQuestion","onClickAddExplanation","explanations","delete","onQuestionChange","indexExplanation","onExplanationChange","onRemoveExplanationClick","onAddExplanationClick","element","onChangeExplanation","onClickRemoveExplanation","question","deleteQuiz","autoComplete","createExplanationUI","BoardAdmin","createQuiz","laststate","displayQuizzes","displayCreate","displayQuiz","backToQuizzes","edit","getQuiz","quiz_idd","toggle","allow","setConfirmDialog","subtitle","onconfirm","discard","handleToggle","allowQuiz","success","updateQuiz","updated_questions","i","document","getElementById","expArr","j","alphabet","String","fromCharCode","expId","exp","danger","filter","editQuiz","onClickAddQuestion","onChangeTitle","handleSubmit","test","undefined","submitted","quizMdp","updateTitle","updateSubTitle","user","menuOptions","fontsize","alert","indexQuestion","prevState","splice","PostForm","submit","handleQuestionChange","onTitleChange","handleTitleChange","handleExplanationChange","handleAddExplanationClick","handleRemoveExplanationClick","onClickDelQuestion","to","SnackbarContent","position","top","action","Switch","inputProps","readOnly","fontWeight","createQuestionUI","PostSubmitForm","BarChart","names","explanationArray","explanationLabels","explanationValues","barData","displayColors","DoughnutChart","answerValues","pieData","AllAnswers","allAnswers","setallAnswers","setarray","answersArray","setanswersArray","explanationsArray","setexplanationsArray","currentStudent","setcurrentStudent","explanationStats","setexplanationStats","showSpinner","setShowSpinner","allQuestions","setAllQuestions","allExplanations","setAllExplanations","setPieData","setBarData","setPieTitle","setBarTitle","displayAllQuizzes","setdisplayAllQuizzes","displayStudentList","setdisplayStudentList","displayStats","setdisplayStats","Axios","handlePieChartChange","handleBarChartChange","getStats","_id","handleStudentList","stats","arrayAns","mergeAllStudentsByIndex","arrayExp","mergeAllExplanation","countAnswers","all","labelsArray","countExplanations","b","d","letter","getExplanationValues","keys","values","key","getAnswerValues","getLabels","object","Object","substr","students","Container","AllQuestions","setdisplayQuiz","setdisplayQuizzes","vusername","AdminRegister","onChangeCheckbox","admin","teacher","noRoleError","mdpTmp","adminRegister","ProtectedRoute","isAuthenticated","isAuthorized","includes","Paginate","allStudents","getAllQuizzes","start","setStart","end","setEnd","expanded","setExpanded","slice","student","Accordion","panel","isExpanded","AccordionSummary","expandIcon","marginLeft","AccordionDetails","Chip","startIcon","old","newStart","newEnd","endIcon","AllStudents","setallStudents","setdisplayActiveQuiz","displayEvolution","setdisplayEvolution","setActiveStudent","VerifyAccount","params","match","useHistory","verifyAccount","media","AdminDashboard","classes","dashboardArray","path","children","actions","one","two","CardActionArea","gutterBottom","CardActions","newPath","href","routeChange","child","route","list","fullList","TemporaryDrawer","left","bottom","right","toggleDrawer","anchor","clsx","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","lists","text","link","textDecoration","Fragment","Drawer","createMuiTheme","palette","main","App","logOut","showAdminBoard","showTeacherBoard","adminTeacher","allUsers","studentAdmin","navList","logout","ThemeProvider","font","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.aa814d89.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n// const API_URL = \"http://localhost:5050/api/\";\r\n\r\nclass AuthService {\r\n  login(email, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        email,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(firstname, lastname, email, password, password_confirmation) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      firstname, \r\n      lastname, \r\n      email, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  verifyAccount(token) {\r\n    return axios.post(API_URL + \"verifyAccount\", {\r\n      token\r\n    });\r\n  }\r\n\r\n  adminRegister(firstname, lastname, email, roles) {\r\n    return axios\r\n    .post(API_URL + \"signup\", {\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      roles\r\n    });\r\n  }\r\n\r\n  changePassword(email, old_password, password, password_confirmation) {\r\n    return axios\r\n    .post(API_URL + \"changePassword\", {\r\n      email, \r\n      old_password, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n}));\r\n\r\nexport default function FormCard({content, float}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card style={{  width: \"100%\", backgroundImage: `url(${\"/blueBG.png\"})`, maxWidth:\"890px\",  margin: \"auto\", marginTop:\"70px\"}}\r\n    >\r\n      <div style={{backgroundColor: \"white\", height: \"100%\",  maxWidth:\"480px\", minWidth:\"300px\", float: float}}>\r\n            {content}\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\nimport FormCard from './formCard'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.email, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage,\r\n            open: true\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        \r\n\r\n\r\n        <div >\r\n            \r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n\r\n            <FormCard\r\n              content={\r\n            <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"70px\", paddingBottom:\"60px\"}}>\r\n              {this.state.message && (\r\n                // <div className=\"form-group\">\r\n                //   <div className=\"alert alert-danger\" role=\"alert\">\r\n                //     {this.state.message}\r\n                //   </div>\r\n                // </div>\r\n                <Snackbar anchorOrigin={{ vertical :'center', horizontal: 'center' }}open={this.state.open} autoHideDuration={6000} onClose={()=>this.handleClose()}>\r\n                  <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\r\n                    {this.state.message}\r\n                  </Alert>\r\n                </Snackbar>\r\n              )}\r\n              <h2 style={{marginTop: \"30px\"}}>Bienvenue sur la page de connexion</h2>\r\n              <p>C'est génial que tu sois de retour</p>\r\n\r\n              <div style={{marginTop: \"50px\"}}>\r\n                <label htmlFor=\"email\" style={{marginTop: \"30px\", color:\"black\"}}><strong>Email de l'utilisateur</strong></label>\r\n                <input\r\n                      type=\"email\"\r\n                      size=\"small\"\r\n                      onChange={this.onChangeEmail}\r\n                      value={this.state.email}\r\n                      variant=\"outlined\"\r\n                      className=\"form-control\"\r\n                      required \r\n                  />\r\n                <label htmlFor=\"password\" style={{marginTop: \"30px\", color:\"black\"}}><strong>Mot de passe</strong></label>\r\n                <input\r\n                      type=\"password\"\r\n                      size=\"small\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      required \r\n                      className=\"form-control\" \r\n                  />\r\n                </div>  \r\n                <div>\r\n                <span style={{width: \"100%\", float:\"right\", marginTop: \"30px\", marginBottom: \"30px\"}}>Mot de passe oublié ?</span>\r\n                </div>\r\n                <div style={{marginTop: \"15px\", width: \"100%\"}}>\r\n                  <button \r\n                  className=\"btnn\" style={{\"font-size\" : \"12px\", width: \"45%\"}}\r\n                  disabled={this.state.loading}\r\n                  >\r\n                    {this.state.loading && (\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                    )}\r\n                    SE CONNECTER\r\n                    </button>\r\n                  <button\r\n                  onClick={() =>  this.props.history.push({\r\n                       pathname: \"/register\",\r\n                     })}\r\n                  className=\"btnn\" \r\n                  style={{\"font-size\" : \"12px\", backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\", width: \"45%\"}}>CREER EN COMPTE</button>\r\n                </div>\r\n            </div>\r\n              }\r\n              float=\"left\"\r\n            />\r\n\r\n            </div>\r\n\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport FormCard from './formCard'\r\nimport AuthService from \"../services/auth.service\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n      return (\r\n        <Alert  severity={\"warning\"}>\r\n        Ce champ est obligatoire !\r\n        </Alert>\r\n      );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <Alert  severity={\"warning\"}>\r\n      Adresse email non valide.\r\n      </Alert>\r\n    );\r\n  }\r\n};\r\n\r\nconst vlastname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <Alert  severity={\"warning\"}>\r\n      Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </Alert>\r\n    );\r\n  }\r\n};\r\n\r\nconst vfirstname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <Alert  severity={\"warning\"}>\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.    \r\n      </Alert>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 50) {\r\n    return (\r\n      <Alert  severity={\"warning\"}>\r\n      Le mot de passe doit contenir entre 6 et 50 charactères.\r\n      </Alert>\r\n    );\r\n  }\r\n};\r\nconst vpasswordConfirmation = value => {\r\n  if (value.length < 6 || value.length > 50) {\r\n    return (\r\n      <Alert  severity={\"warning\"}>\r\n      Le mot de passe doit contenir entre 6 et 50 charactères.\r\n      </Alert>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangePasswordConfirmation = this.onChangePasswordConfirmation.bind(this);\r\n\r\n    this.state = {\r\n      lastname: \"\",\r\n      firstname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      successful: false,\r\n      message: \"\",\r\n      open: false\r\n    };\r\n  }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePasswordConfirmation(e) {\r\n    this.setState({\r\n      password_confirmation: e.target.value\r\n    });\r\n  }\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.password_confirmation,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true,\r\n            open: true\r\n          });\r\n\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage,\r\n            open : true\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div >\r\n        {this.state.message && (\r\n          <div>\r\n            <Snackbar anchorOrigin={{ vertical :'center', horizontal: 'center' }}open={this.state.open} autoHideDuration={600000} onClose={()=>this.handleClose()}>\r\n            <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\r\n              {this.state.message}\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          <FormCard\r\n          content={\r\n            <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"50px\", paddingBottom:\"60px\", clear: \"both\" }}>\r\n                <p>{this.state.message}</p>\r\n            </div>\r\n          }\r\n          />\r\n          </div>\r\n        )}\r\n\r\n          <Form\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n\r\n              <FormCard\r\n                  content={\r\n                <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"50px\", paddingBottom:\"60px\", clear: \"both\" }}>\r\n                  {this.state.message && (\r\n                      <Snackbar anchorOrigin={{ vertical :'center', horizontal: 'center' }}open={this.state.open} autoHideDuration={600000} onClose={()=>this.handleClose()}>\r\n                      <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\r\n                        {this.state.message}\r\n                      </Alert>\r\n                    </Snackbar>\r\n                  )}\r\n                  <h2>Bienvenue sur la page d'inscription</h2>\r\n\r\n                  <div style={{marginTop: \"20px\"}}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"firstname\" style={{marginTop: \"20px\", color:\"black\"}}><strong>Prenom</strong></label>\r\n                      <Input\r\n                          type=\"text\"\r\n                          size=\"small\"\r\n                          name=\"firstname\"\r\n                          value={this.state.firstname}\r\n                          onChange={this.onChangeFirstname}\r\n                          validations={[required, vfirstname]}\r\n                          className=\"form-control\"\r\n                          required \r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">  \r\n                      <label htmlFor=\"lastname\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Nom</strong></label>\r\n                      <Input\r\n                            type=\"text\"\r\n                            size=\"small\"\r\n                            name=\"lastname\"\r\n                            value={this.state.lastname}\r\n                            onChange={this.onChangeLastname}\r\n                            validations={[required, vlastname]}\r\n                            className=\"form-control\"\r\n                            required \r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">    \r\n                      <label htmlFor=\"email\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Email</strong></label>\r\n                      <Input\r\n                            type=\"email\"\r\n                            size=\"small\"\r\n                            name=\"email\"\r\n                            onChange={this.onChangeEmail}\r\n                            value={this.state.email}\r\n                            className=\"form-control\"\r\n                            required \r\n                            validations={[required, email]}\r\n                      />\r\n                    </div> \r\n\r\n                    <div className=\"form-group\">    \r\n                      <label htmlFor=\"password\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Mot de passe</strong></label>\r\n                      <Input\r\n                            type=\"password\"\r\n                            size=\"small\"\r\n                            name=\"password\"\r\n                            value={this.state.password}\r\n                            onChange={this.onChangePassword}\r\n                            validations={[required, vpassword]}\r\n                            className=\"form-control\"\r\n                            required  \r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">    \r\n                      <label htmlFor=\"password_confirmation\" style={{marginTop: \"10px\", color:\"black\"}}><strong> Confirmer Mot de passe</strong></label>\r\n                      <Input\r\n                            type=\"password\"\r\n                            size=\"small\"\r\n                            name=\"password_confirmation\"\r\n                            value={this.state.password_confirmation}\r\n                            onChange={this.onChangePasswordConfirmation}\r\n                            validations={[required, vpasswordConfirmation]}\r\n                            className=\"form-control\"\r\n                            required  \r\n                      />\r\n                    </div>\r\n\r\n                  </div>  \r\n\r\n                  <div style={{marginTop: \"15px\", width: \"100%\"}} className=\"form-group\">\r\n                    <button\r\n                    onClick={() =>  this.props.history.push({\r\n                      pathname: \"/login\",\r\n                    })} \r\n                    className=\"btnn\" style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\",\"font-size\" : \"12px\", width: \"44%\"}}\r\n                    disabled={this.state.loading}\r\n                    >\r\n                      {this.state.loading && (\r\n                      <span className=\"spinner-border spinner-border-sm\"></span>\r\n                      )}\r\n                      SE CONNECTER\r\n                      </button> \r\n                    <button \r\n                    className=\"btnn\" \r\n                    style={{\"font-size\" : \"12px\", width: \"45%\"}} \r\n                    onClick={this.handleRegister}\r\n                    >\r\n                      CREER EN COMPTE\r\n                      </button>\r\n                  </div>\r\n                </div>\r\n                  }\r\n                  float=\"right\"\r\n                />\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // UserService.getPublicContent().then(\r\n    //   response => {\r\n    //     this.setState({\r\n    //       content: response.data.body\r\n    //     });\r\n    //   },\r\n    //   error => {\r\n    //     this.setState({\r\n    //       content:\r\n    //         (error.response && error.response.data) ||\r\n    //         error.message ||\r\n    //         error.toString()\r\n    //     });\r\n    //   }\r\n    // );\r\n    this.setState({\r\n      content: \"Bienvenue dans votre application de Neuroéducation\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      title: \"Bienvenue dans votre application de Neuroéducation\",\r\n      description: \"Cette application permet aux élèves de prendre conscience de leurs stratégies de réussite et des potentielles origines de leurs erreurs\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <header className=\"jumbotron\">\r\n                    <h3>{this.state.title}</h3>\r\n                </header>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h5>{this.state.description}</h5>\r\n                <div style={{textAlign: \"center\", marginTop: \"20px\"}}>\r\n                  <img style={{height: \"500px\", width: \"500px\", borderRadius: \"10px\"}} src=\"/brain-storming.png\" alt=\"students brainstorming\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n}));\r\n\r\nexport default function FormCard2({content, float}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card style={{ height: \"850px\", maxHeight:\"900\", width: \"100%\", backgroundImage: `url(${\"/blueBG.png\"})`, maxWidth:\"890px\",  margin: \"auto\", marginTop:\"70px\"}}\r\n    >\r\n      <div style={{backgroundColor: \"white\",height: \"100%\",  minWidth:\"300px\", maxWidth:\"600px\", maxHeight:\"770px\" , width: \"100%\",  margin:\"auto\", marginTop: \"40px\",}}>\r\n            {content}\r\n      </div>\r\n    </Card>\r\n  );\r\n}","import {useState} from \"react\";\r\n// import CheckButton from \"react-validation/build/button\";\r\nimport FormCard2 from './formCard2'\r\nimport AuthService from '../services/auth.service'\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n\r\nconst ModifyPassword = (props) =>{\r\n    const [oldPw, setOldPw] = useState('')\r\n    const [newPw, setNewPw] = useState('')\r\n    const [confirmNewPw, setConfirmNewPw] = useState('')\r\n    const [message, setmessage] = useState('');\r\n    const [successful, setsuccessful] = useState(false);\r\n    const [email] = useState(props.email)\r\n    const currentUser = props.currentuser;\r\n    const [errors, seterrors] = useState(null);\r\n    const [open, setopen] = useState(false)\r\n\r\n\r\n    const validate = (email, newPw, confirmNewPw) => {\r\n        if(newPw !== confirmNewPw){\r\n            seterrors(['Nouveau mot de passe non conforme' ])\r\n        }\r\n        if(email===\"\" || email=== null){\r\n          seterrors([...errors, 'Veuillez vous reconnecter' ])\r\n        }\r\n        else{\r\n          seterrors(null)  \r\n        }\r\n    }\r\n\r\n    const ApplyModifications = (e) => {\r\n      e.preventDefault();\r\n      seterrors(null)  \r\n      setmessage('');\r\n      setsuccessful(false);\r\n\r\n      validate(newPw, confirmNewPw);\r\n\r\n      if(errors){\r\n        setmessage(errors.toString())\r\n        setopen(true)\r\n      }\r\n      else{\r\n        AuthService.changePassword(email, oldPw, newPw, confirmNewPw)\r\n        .then((res) => {\r\n          setmessage(\"Mot de passe modifié avec succès\");\r\n          setsuccessful(true);\r\n          setopen(true)\r\n        })\r\n        .catch((error) =>{\r\n          const errMessage =\r\n            (error.response.data.message[0].password || (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message)) ||\r\n            error.message ||\r\n            error.toString();\r\n            console.log(errMessage);\r\n          setmessage(errMessage);\r\n          setsuccessful(false);\r\n          setopen(true)\r\n        })\r\n      }\r\n    }\r\n\r\n    const handleClose = () => {\r\n      setopen(false)\r\n    }\r\n    \r\n\r\n\r\n\r\nreturn (\r\n    <div >\r\n        <form\r\n          onSubmit={(e) => ApplyModifications(e)}\r\n        >\r\n          <FormCard2\r\n          content={\r\n            <div  className=\"formCardContent\">\r\n              <Snackbar anchorOrigin={{ vertical :'center', horizontal: 'center' }}open={open} autoHideDuration={6000} onClose={()=>handleClose()}>\r\n                <Alert onClose={()=>handleClose()} severity={successful ? \"success\" : \"warning\" }>\r\n                  {message}\r\n                </Alert>\r\n              </Snackbar>\r\n              <header className=\"jumbotron\">\r\n                <h3>\r\n                    Profile : <strong>{currentUser.message.firstname}{' '}{currentUser.message.lastname}</strong> \r\n                </h3>\r\n              </header>\r\n\r\n              <div \r\n              className=\"row2\" \r\n              style={{margin: \"20px\", marginTop: \"20px\", width : \"80%\",marginBottom:\"10px\"}}\r\n              >\r\n                <h5>Informations sur le compte</h5>\r\n                </div>  \r\n                <div \r\n                className=\"row1\" \r\n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                  <label style={{width: \"40%\"}}>Prenom</label>\r\n                  <input \r\n                  type=\"text\" \r\n                  id=\"firstname\" \r\n                  class=\"input-field\" \r\n                  disabled \r\n                  style={{width: \"60%\"}}\r\n                  value={currentUser.message.firstname}\r\n                  />    \r\n                </div>\r\n\r\n                <div \r\n                className=\"row1\" \r\n                style={{margin: \"20px\", marginTop: \"10px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                  <label style={{width: \"40%\"}}>Nom</label>\r\n                  <input \r\n                  type=\"text\" \r\n                  id=\"lastname\" \r\n                  class=\"input-field\" \r\n                  disabled \r\n                  style={{width: \"60%\"}}\r\n                  value={currentUser.message.lastname}\r\n                  />    \r\n                </div>\r\n                <div \r\n                className=\"row1\" \r\n                style={{margin: \"20px\", marginTop: \"10px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                  <label style={{width: \"40%\"}}>Email</label>\r\n                  <input \r\n                  type=\"email\" \r\n                  id=\"email\" \r\n                  class=\"input-field\" \r\n                  disabled \r\n                  style={{width: \"60%\"}}\r\n                  value={currentUser.message.email}\r\n                  />    \r\n                </div>\r\n\r\n                <div \r\n                className=\"row2\" \r\n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                <h5>Changement de mot de passe</h5>\r\n                </div> \r\n\r\n                <div \r\n                className=\"row1\" \r\n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                  <label style={{width: \"40%\"}}>Ancien mot de passe</label>\r\n                  <input \r\n                  type=\"password\" \r\n                  name=\"oldPw\" \r\n                  value={oldPw} \r\n                  placeholder=\"******\" \r\n                  onChange={(e) => setOldPw(e.target.value)} \r\n                  class=\"input-field\" \r\n                  style={{width: \"60%\"}}\r\n                  required\r\n                  />    \r\n                </div>\r\n\r\n                <div \r\n                className=\"row1\" \r\n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                  <label style={{width: \"40%\"}}> Nouveau mot de passe </label>\r\n                  <input \r\n                  type=\"password\" \r\n                  name=\"newPw\" \r\n                  value={newPw} \r\n                  placeholder=\"******\" \r\n                  onChange={(e) => setNewPw(e.target.value)} \r\n                  class=\"input-field\" \r\n                  style={{width: \"60%\"}}\r\n                  required\r\n                  />    \r\n                </div>\r\n\r\n                <div \r\n                className=\"row1\" \r\n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                  <label style={{width: \"40%\"}}>Confirmer mot de passe</label>\r\n                  <input \r\n                  type=\"password\" \r\n                  name=\"confirmNewPw\" \r\n                  value={confirmNewPw} \r\n                  placeholder=\"******\" \r\n                  onChange={(e) => setConfirmNewPw(e.target.value)} \r\n                  class=\"input-field\" \r\n                  style={{width: \"60%\"}}\r\n                  required\r\n                  />    \r\n                </div>\r\n\r\n                <center>\r\n                <button\r\n                className=\"btnn\" \r\n                style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\",\"font-size\" : \"12px\", float:\"right\", marginRight: \"40px\"}}\r\n                >\r\n                Confirmer\r\n                </button>  \r\n                </center>      \r\n\r\n\r\n            </div>\r\n          }\r\n          />\r\n        </form>  \r\n    </div>\r\n);\r\n}\r\n\r\n\r\n\r\nexport default ModifyPassword;\r\n","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport ModifyPassword from \"./modifyPassword.component\";\r\nimport FormCard2 from './formCard2'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser()\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <ModifyPassword currentuser={currentUser} email={currentUser.message.email}/>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n// const API_URL = \"http://localhost:5050/api/${id}\";\r\n\r\n\r\nclass SearchService {\r\n\r\n  searchQuiz(id) {\r\n    return axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${id}`, {\r\n      \r\n    });\r\n  }\r\n\r\n  submitAnswers(answers){\r\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n        answers\r\n      })\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new SearchService();\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport const Title = ({data, noUnderline, subHeader}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Typography\r\n                style={{textAlign: \"center\", color:\"#4257b2\", marginTop: \"20px\", marginBottom: \"20px\"}}\r\n                variant={subHeader ? \"h6\": \"h5\"}\r\n            >\r\n                {data}\r\n                <div className={noUnderline ? \"\": \"underline\"}></div>\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n","//CREATE LABELS FOR LINE CHART \r\nconst LineLabels = (integer) => { //integer is == groupArray.length\r\n    let array = []\r\n    switch(integer){\r\n        case 1:\r\n            array = [\"1er quiz\"];\r\n            break;\r\n        case 2:\r\n            array = [\"1er quiz\", \"2e quiz\"];\r\n            break;\r\n        case 3:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\"];\r\n            break;\r\n        case 4:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\"];\r\n            break;\r\n        case 5:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\"];\r\n            break;\r\n        case 6:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\"];\r\n            break;\r\n        case 7:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\"];\r\n            break;\r\n        case 8:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\"];\r\n            break;\r\n        case 9:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\"];\r\n            break;\r\n        case 10:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\"];\r\n            break;\r\n        case 11:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\"];\r\n            break;\r\n        case 12:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\"];\r\n            break;\r\n        case 13:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\"];\r\n            break;\r\n        case 14:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\"];\r\n            break;\r\n        default:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\", \"15e quiz\"];\r\n            break;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  export default LineLabels;\r\n\r\n","\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nconst LineChart = ({ labels, data }) => {\r\n    return ( \r\n        <div>\r\n            <Line\r\n                data={{\r\n                    labels: labels,\r\n                    datasets: [{\r\n                        data: data,\r\n                        borderColor: 'hsl(205, 78%, 60%)'\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    },\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            label: (item, datax) => {\r\n                                let string = \"\"\r\n                                switch(data[item.index]){\r\n                                    case 4:\r\n                                        string = \"Oui\"\r\n                                        break\r\n                                    case 3:\r\n                                        string = \"Plutot Oui\"\r\n                                        break\r\n                                    case 2: \r\n                                        string = \"Plutot Non\"\r\n                                        break\r\n                                    default:\r\n                                        string = \"Non\"\r\n                                        break\r\n                                }\r\n                                return string\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LineChart;\r\n","import React, {useState} from 'react'\r\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NoteCard from \"./NoteCard\";\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport Tooltip from '@material-ui/core/Tooltip'; \r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\n\r\n\r\n\r\n\r\nconst FlippyItems = ({frontSide, backSide}) => {\r\n    return (\r\n        <Flippy\r\n        // onmouseover={onMouseOver}\r\n        className=\"col-xs-12 col-sm-12 col-md-4 col-lg-3\"\r\n        flipOnHover={true} // default false\r\n        flipOnClick={false} // default false\r\n        flipDirection=\"horizontal\" // horizontal or vertical\r\n        // ref={(r) => this.flippy = r} // to use toggle method like this.flippy.toggle()\r\n        // if you pass isFlipped prop component will be controlled component.\r\n        // and other props, which will go to div\r\n        style={{ minWidth: '260px', height: '150px', marginBottom : \"25px\", marginRight : \"25px\"}} /// these are optional style, it is not necessary\r\n      >\r\n        <FrontSide\r\n          style={{\r\n            // backgroundColor: '#41669d',\r\n            padding: 0,\r\n            margin:0\r\n          }}\r\n        >\r\n          {frontSide}\r\n        </FrontSide>\r\n        <BackSide\r\n          style={{ \r\n            backgroundColor: '#4257b2',\r\n            padding: 2,\r\n            margin:0}}\r\n        >\r\n        <div> \r\n          {backSide}  \r\n        </div> \r\n        </BackSide>\r\n      </Flippy>\r\n    )\r\n}\r\n\r\nexport default FlippyItems\r\n","import React from \"react\";\r\nimport SearchService from \"../services/search.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\nimport {Title} from './Title';\r\nimport LineLabels from './LineLabels';\r\nimport LineChart from './LineChart';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport FlippyItems from './Flippy';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>({ //makeStyles returns to us a hook, the hook subsequently gives us the object. NB: react hooks must begin with the word 'use'\r\n  field: {\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n      display: 'block'\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst BoardUser = () => {\r\n  const [search, setsearch] = useState('');\r\n  const [successful, setsuccessful] = useState(false);\r\n  const [message, setmessage] = useState('');\r\n  const [errorMessage, seterrorMessage] = useState('');\r\n  // const [errors, seterrors] = useState([])\r\n  const [currentQuiz, setcurrentQuiz] = useState(null);\r\n  const [radioOptions, setradioOptions] = useState({})\r\n  const [checkedItems, setCheckedItems] = useState([]); \r\n  const [currentUser] = useState(AuthService.getCurrentUser()) ;\r\n  const [allQuizzes, setallQuizzes] = useState([]);\r\n  const [displayAllAnswered, setdisplayAllAnswered] = useState(false);\r\n  const [validate, setvalidate] = useState(false)\r\n  const [lineArray, setLineArray] = useState([]);\r\n  const [actualQuiz, setactualQuiz] = useState([]);\r\n  const [displayMain, setdisplayMain] = useState(true);\r\n  const [displayLineChart, setDisplayLineChart] = useState(false);\r\n  const [displayCurrentQuiz, setdisplayCurrentQuiz] = useState(false);\r\n\r\n  \r\n\r\n  const evolution = () => {\r\n    setdisplayMain(false);\r\n    setDisplayLineChart(true);\r\n    setdisplayCurrentQuiz(false);\r\n  }\r\n  const goBack = () => {\r\n    setdisplayMain(true);\r\n    setdisplayAllAnswered(true);\r\n    setDisplayLineChart(false);\r\n    setdisplayCurrentQuiz(false);\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  // CREATE ARRAY CONTAINING ANSWERS OF EACH ATTEMPT\r\n  const getAllAns = quiz => {\r\n    let array = []\r\n    quiz.student_answers.forEach(answers=> {\r\n        switch(answers.answer){\r\n            case \"Non\":\r\n                array.push(1)\r\n                break\r\n            case \"Plutot Non\":\r\n                array.push(2)\r\n                break\r\n            case \"Plutot Oui\":\r\n                array.push(3)\r\n                break\r\n            default:\r\n                array.push(4)\r\n                break\r\n        }\r\n    })\r\n    return array\r\n  }\r\n\r\n  //GENERATE DATA VALUES FOR LINE CHART \r\n  const getLineData = (groupArray, index) => {\r\n    let dataArray = []\r\n    groupArray.forEach((item) => {\r\n        dataArray.push(item[index])\r\n    })\r\n    return dataArray\r\n  }\r\n\r\n  //SET ACTIVE QUIZ\r\n  const setActiveQuiz = (quiz, index) => {\r\n    let tempLineArray = [];\r\n    quiz.quiz_answers.forEach((quiz, index) => {\r\n        tempLineArray.push(getAllAns(quiz))\r\n    })\r\n    setLineArray(tempLineArray)\r\n\r\n    \r\n    // setdisplayQuizzes(null);\r\n\r\n    // GET ACTUAL QUESTIONS FROM DATABASE\r\n    SearchService.searchQuiz(\r\n        quiz.quiz_id,\r\n      ).then(\r\n        response => {\r\n          setactualQuiz(response.data);\r\n        })\r\n        .catch(\r\n        error => {\r\n          const resMessage =\r\n            (error.response && error.response.data && error.response.data.message) \r\n            || error.message || error.toString();\r\n        }\r\n      );\r\n      };\r\n\r\n\r\n  // LOAD ALL QUIZZES ANSWERED BY CURRENT STUDENT FROM DATABASE \r\n  //ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n  useEffect(() => {\r\n    const student_id = currentUser.message.email;\r\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\r\n      setallQuizzes(response.data.quizzes) \r\n    })\r\n    .catch(function (err) {\r\n        seterrorMessage(err.response);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  const onChangeSearch = (e) =>{\r\n    setsearch(e.target.value)\r\n  }\r\n\r\n  // RETURN CHECKED VALUE(true or false)\r\n  const checkRadioButton = (question_id, label) => {\r\n      if (!radioOptions[question_id]) {\r\n          return false;\r\n      }\r\n      return radioOptions[question_id] === label;\r\n  }\r\n\r\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n    const setradio = (id , answer) => {\r\n      let checkedArray = checkedItems.map(x => {return {...x}})\r\n      const find_question = checkedArray.find(a => a.question_answer_id === id);\r\n      if(find_question) {\r\n          checkedArray.find(a => a.question_answer_id === id).answer = answer;\r\n          setradioOptions((state) => {\r\n              return {\r\n                  ...state,\r\n                  [id] : answer\r\n              }\r\n          });\r\n          setCheckedItems(checkedArray);\r\n      }\r\n      else{\r\n      setradioOptions((state) => {\r\n          return {\r\n              ...state,\r\n              [id] : answer\r\n          }\r\n      });\r\n\r\n      setCheckedItems([\r\n          ...checkedItems,\r\n           {\r\n              question_answer_id : id,\r\n              answer: answer,\r\n              explanation: 'no explanation'\r\n          }\r\n      ]);}\r\n  }\r\n\r\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n      let checkedArray = checkedItems.map(x => {return {...x}})\r\n      const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n      if(find_question) {\r\n          checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n          setCheckedItems(checkedArray);\r\n      }\r\n      \r\n  }\r\n\r\n  // SUBMIT ANSWERS TO THE BACKEND\r\n  const submitAnswers = () =>{\r\n    const timestamp = Date.now();\r\n    const formatedTimestamp = new Intl.DateTimeFormat('en-US', {year: 'numeric',\r\n                              month: '2-digit',day: '2-digit', hour: '2-digit', \r\n                              minute: '2-digit', second: '2-digit'}).format(timestamp);\r\n    const answers = {\r\n        quiz_id : currentQuiz.quiz_id,\r\n        quiz_title : currentQuiz.quiz,\r\n        quiz_answers : {\r\n            student_id : currentUser.message.email,\r\n            student_answers : checkedItems,\r\n            time_submitted : formatedTimestamp,\r\n        }\r\n    }\r\n\r\n\r\n    if((currentQuiz.questions).length !== (answers.quiz_answers.student_answers).length){\r\n      setvalidate(true);\r\n      return setvalidate(true);\r\n    }\r\n\r\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api//history', {\r\n        answers\r\n      }).then((res) => {\r\n          if(res){\r\n              //   window.location.reload(false);\r\n              setcurrentQuiz(null);\r\n              setCheckedItems([]);\r\n              setradioOptions({});\r\n              setallQuizzes([...allQuizzes, answers])\r\n              setmessage('Answers Submitted');\r\n              setsuccessful(true);\r\n              setdisplayAllAnswered(true);\r\n              \r\n          }\r\n      }).catch(err => {\r\n          setcurrentQuiz(null)  \r\n          setsuccessful(false);\r\n          setmessage(err.response.data.message|| err.response.data.message[0].error);\r\n                 \r\n      });\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setvalidate(false)\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    setmessage(\"\");\r\n    setsuccessful(false);\r\n\r\n    // this.form.validateAll();\r\n\r\n    {SearchService.searchQuiz(\r\n      search,\r\n    ).then(\r\n      response => {\r\n        setdisplayAllAnswered(false);\r\n        setsuccessful(true);\r\n        setcurrentQuiz(response.data);\r\n        setdisplayCurrentQuiz(true);\r\n      })\r\n      .catch(\r\n      error => {\r\n        console.log(error.response);\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) \r\n          || error.message || error.toString();\r\n\r\n        setmessage(resMessage);\r\n        setsuccessful(false);\r\n      }\r\n    );}\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {displayMain && (\r\n            <div >\r\n            <div >\r\n              {errorMessage && (\r\n                <div className=\"form-group\">\r\n                  <div\r\n                    className={\"alert alert-danger\"}\r\n                    role=\"alert\"\r\n                  >\r\n                    {errorMessage}\r\n                  </div>\r\n                </div>\r\n              )}\r\n      \r\n              {(!successful || displayAllAnswered)  && (\r\n                <div>\r\n                  <div style={{\"margin-top\" :\"50px\"}}>\r\n                    {message && (\r\n                      <div className=\"form-group\">\r\n                        <div\r\n                          className={\r\n                            successful\r\n                              ? \"alert alert-success\"\r\n                              : \"alert alert-danger\"\r\n                          }\r\n                          role=\"alert\"\r\n                        >\r\n                          {message}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    <form id =\"form\" >\r\n                      <input\r\n                          onChange={onChangeSearch}\r\n                          id=\"commonSearchTerm\"\r\n                          class=\"input-field\" \r\n                          placeholder=\"Entrez un code de quiz valide...\"\r\n                          required \r\n                      />\r\n                      <button id=\"searchButton\" class=\"input-field\" onClick={handleSearch}>Rechercher</button>\r\n                    </form>\r\n                  </div>\r\n      \r\n                  {(displayAllAnswered || !successful )  && allQuizzes && (\r\n                    <div >      \r\n                      <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                        <center>\r\n                          <Title data={'Quiz déjà répondus'} />\r\n                        </center>\r\n                        <div className=\"row\" >\r\n                            {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"> \r\n                                    {/* <Card className=\"card\" elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}} onMouseOver={() => setActiveQuiz(quiz, index)} onClick={evolution} >\r\n                                      <CardHeader\r\n                                            avatar={\r\n                                                (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                    {quiz.quiz_id[0].toUpperCase()}\r\n                                                </Avatar>)\r\n                                        }\r\n                                            title={quiz.quiz_id}\r\n                                      />\r\n                                      <CardContent>\r\n                                          <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                              {quiz.quiz_id}\r\n                                          </Typography>\r\n                                      </CardContent>\r\n                                    </Card> */}\r\n\r\n                                  <FlippyItems     \r\n                                frontSide={\r\n                                    <div key={index}  > \r\n                                        <Card \r\n                                        elevation={1} \r\n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}\r\n                                        onMouseOver={() => setActiveQuiz(quiz, index)}\r\n                                        >\r\n                                            <CardHeader\r\n                                                avatar={\r\n                                                    (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                        {quiz.quiz_id[0].toUpperCase()}\r\n                                                    </Avatar>)\r\n                                                }\r\n                                                title={quiz.quiz_id}\r\n                                                // subheader={note}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                {quiz.quiz_id}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Card>\r\n\r\n                                </div> \r\n                                }\r\n                                backSide={\r\n                                    <div key={index}  > \r\n                                        <Card elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\r\n                                            <CardHeader\r\n                                                avatar={\r\n                                                    (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                        {quiz.quiz_id[0].toUpperCase()}\r\n                                                    </Avatar>)\r\n                                                }\r\n                                                title={quiz.quiz_id}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <div style={{float:\"right\", color:\"#4257b2\"}}> \r\n                                                    <Tooltip title=\"Cliquez pour les statistiques\">\r\n                                                        <IconButton  onClick={evolution} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                                                            <EqualizerIcon />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </div>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                </div> \r\n                                }\r\n                            />\r\n\r\n                                </div> \r\n                            ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>  \r\n                  )}\r\n                </div>\r\n              )}\r\n              </div>\r\n            </div>\r\n      )}\r\n\r\n\r\n      <div >\r\n        {(displayCurrentQuiz && currentQuiz) && (\r\n          <div className=\"container-questions\">\r\n            <IconButton  onClick={()=>goBack()} style={{float:\"left\", color:\"#4257b2\"}}>\r\n                <ArrowBackIcon />\r\n            </IconButton> \r\n            { validate &&\r\n                <Snackbar anchorOrigin={{ vertical :'top', horizontal: 'center' }}open={validate} autoHideDuration={6000} onClose={()=>handleClose()}>\r\n                <Alert onClose={()=>handleClose()} severity=\"error\">\r\n                  {'Please answer all questions'}\r\n                </Alert>\r\n            </Snackbar>\r\n            }\r\n            <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n            {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n              <div key={questions.question_id}>\r\n                <span style={{fontSize:\"20px\"}}>{questions.question_id}{'. '}{questions.question_title}</span>    \r\n                <div>\r\n                    <input \r\n                        className=\"input\"\r\n                        type=\"radio\" \r\n                        value=\"Oui\" \r\n                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                    /> Oui\r\n                    <input \r\n                        className=\"input\"\r\n                        type=\"radio\" \r\n                        value=\"Plutot Oui\"  \r\n                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                    /> Plutot Oui\r\n                    <input\r\n                        className=\"input\" \r\n                        type=\"radio\" \r\n                        value=\"Plutot Non\"  \r\n                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                    /> Plutot Non\r\n                    <input\r\n                        className=\"input\" \r\n                        type=\"radio\" \r\n                        value=\"Non\" \r\n                        checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                    /> Non\r\n                </div>\r\n\r\n                {radioOptions[questions.question_id] === \"Plutot Non\"\r\n                || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n                || radioOptions[questions.question_id] === \"Non\" ? (\r\n                  <div>\r\n                    {questions.question_options && questions.question_options.map((options, index) => ( \r\n                      <div>\r\n                        <label>\r\n                          <input type=\"checkbox\" value={options.options_id} \r\n                          checked={checkedItems[options.option_text]}  \r\n                          onChange={(e) => \r\n                              setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                          }\r\n                          />\r\n                          <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                        </label>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ) : (<span>No Explanation Needed</span>)}\r\n              </div>\r\n            ))}\r\n            <div className=\"form-group\">\r\n              <button className=\"btnn\" onClick={submitAnswers}>Submit Answers</button>\r\n            </div>\r\n          </div>\r\n            )\r\n          }\r\n      </div>\r\n      {displayLineChart && (\r\n        <div>\r\n          <IconButton  onClick={()=>goBack()} style={{float:\"left\", color:\"#4257b2\"}}>\r\n            <ArrowBackIcon />\r\n        </IconButton>\r\n        <Grid container spacing={3}>\r\n            {(lineArray.length && displayLineChart) && lineArray[0].map((attempt, index) => (\r\n                <Grid item md={6} sm={12} lg={4} >\r\n                    <Card elevation={2}>\r\n                        <CardHeader\r\n                            title={<Typography style={{fontSize: \"1rem\"}} color=\"textSecondary\" variant=\"h6\" component=\"p\">{actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)}</Typography>}\r\n                            subheader={<div style={{fontSize: \"0.8rem\"}}>Oui-4 Plutot Oui-3 Plutot Non-2 Non-1</div>}\r\n                        />\r\n                        <CardContent>\r\n                            <LineChart labels={LineLabels(lineArray.length)} data={getLineData(lineArray, index)} />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n        </div>\r\n        \r\n      )}\r\n  </div>\r\n  );\r\n}\r\n\r\n  export default BoardUser","import axios from \"axios\";\r\n\r\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\r\n\r\nclass PostForm {\r\n    submit(title, created_by, questions) {\r\n        return axios\r\n            .post(API_URL + \"submit\", {\r\n                title,\r\n                created_by,\r\n                questions\r\n            })\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport default new PostForm();\r\n","import { Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@material-ui/core'\r\nimport {React} from 'react'\r\n\r\nconst ConfirmDialogue = (props) => {\r\n    const {confirmDialog} = props;\r\n    return (\r\n        <div>\r\n            <Dialog open={confirmDialog.isOpen}>\r\n                <DialogTitle >\r\n                    \r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Typography variant=\"h6\">\r\n                        {confirmDialog.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                        {confirmDialog.subTitle}\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <button className=\"btnn\" onClick={confirmDialog.onDiscard}>No</button>\r\n                    <button className=\"btnn\" onClick={confirmDialog.onConfirm}>Yes</button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmDialogue\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nconst ITEM_HEIGHT = 48; \r\n\r\nexport default function MenuOption(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n        style={{float:\"right\",color: '#4257b2'}}\r\n      >\r\n        <MoreVertIcon />\r\n        <span>Options</span>\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: '20ch',\r\n            color: '#4257b2'\r\n          },\r\n        }}\r\n      >\r\n        {props.options && props.options.map((option) => (\r\n          <MenuItem key={option.title} selected={option === 'Pyxis'} onClick={option.onclick} >\r\n            {option.icon}{option.title}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { Button, Snackbar, Switch } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PostForm from \"../services/admin-submit-form\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport SearchService from \"../services/search.service\";\r\nimport ConfirmDialogue from \"./confirm-dialogue\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport MenuOption from \"./menu\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport NoteCard from \"./NoteCard\";\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport { TextField } from \"@material-ui/core\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport {Title} from './Title';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n// Here is 5 constants related to the visual of our custom button\r\nconst StyledButtonAddExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonAddQuestion = withStyles({\r\n  root: {\r\n    background: '#4257b2',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF8700 30%, #FF1E1E 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelQuestion = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF1D1D 30%, #4C4C4C 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonSubmit = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #11FF00 30%, #00FF82 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass MyForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.onChangeQuestion = this.onChangeQuestion.bind(this);\r\n    this.onClickAddExplanation = this.onClickAddExplanation.bind(this);\r\n    this.state = {\r\n      explanations: false,\r\n      delete : this.props.delete\r\n    };\r\n  }\r\n\r\n  onChangeQuestion(e){\r\n    this.props.onQuestionChange(e.target.value);\r\n  }\r\n\r\n  onChangeExplanation(indexExplanation, e){\r\n    this.props.onExplanationChange(indexExplanation, e.target.value)\r\n  }\r\n\r\n  onClickRemoveExplanation(indexExplanation){\r\n    this.props.onRemoveExplanationClick(indexExplanation);\r\n  }\r\n\r\n  onClickAddExplanation(){\r\n    this.props.onAddExplanationClick();\r\n    this.setState({\r\n      explanations: true\r\n    });\r\n  }\r\n\r\n  \r\n  createExplanationUI(){\r\n    return(\r\n      <div>\r\n          {this.props.explanations ?(this.props.explanations.map((element, indexExplanation) =>\r\n            <div>\r\n              <div key={indexExplanation} className=\"form-group\">\r\n                <label htmlFor=\"explanation\">Explication</label>\r\n                  <form id =\"formExp\" >\r\n                    <input\r\n                        onChange={this.onChangeExplanation.bind(this, indexExplanation)}\r\n                        id=\"inputExp\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        required \r\n                        size=\"small\"\r\n                        style={{height: \"50\"}}\r\n                    />\r\n                    <Tooltip title=\"Supprimer cette explication\">\r\n                    <button type= \"button\" id=\"buttonExp\" onClick={this.onClickRemoveExplanation.bind(this, indexExplanation)}> <DeleteForeverIcon style={{color:\"red\"}}/> </button>\r\n                    </Tooltip>\r\n                  </form>\r\n              </div>\r\n            </div>\r\n            )) : (<h3>No Explanation props</h3>)\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const question = this.state.question;\r\n    const deleteQuiz = this.state.delete;\r\n\r\n    return (\r\n      <div>\r\n        <Form >\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"question\" style={{paddingTop: \"10px\"}}>\r\n              <span>\r\n              <strong >Question</strong>\r\n              <Tooltip title=\"Supprimer cette question\">\r\n                <IconButton className=\"deleteQuestion\" onClick={deleteQuiz} style={{float:\"right\"}}>\r\n                    <DeleteForeverIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              </span>\r\n\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"question\"\r\n              value = {question}\r\n              onChange = {this.onChangeQuestion}\r\n              validations = {[required]}\r\n              autoComplete = \"off\"\r\n            />\r\n          </div>\r\n          {\r\n            this.state.explanations &&\r\n              this.createExplanationUI()\r\n          }\r\n          \r\n          <Tooltip title=\"Adjouter une explication\">\r\n            <IconButton  onClick={this.onClickAddExplanation} style={{color: \"#4257b2\", float:\"left\", marginBottom: \"15px\"}}>\r\n              <QueueIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <br/><br/>\r\n        </Form>\r\n\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClickAddQuestion = this.onClickAddQuestion.bind(this);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.allowQuiz = this.allowQuiz.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n    this.getQuiz = this.getQuiz.bind(this);\r\n    this.test = this.test.bind(this)\r\n\r\n    this.state = {\r\n      title: '',\r\n      created_by: '',\r\n      questions: [\r\n        {\r\n          question_id: '',\r\n          question_title: '',\r\n          question_options: []\r\n        }\r\n      ],\r\n      message: '',\r\n      currentUser: undefined,\r\n      submitted: false,\r\n      quizMdp:'',\r\n      allQuizzes: null,\r\n      displayQuizzes: null,\r\n      errorMessage: '',\r\n      laststate: null,\r\n      confirmDialog: {\r\n        isOpen:false,\r\n        title:'',\r\n        subTitle:''\r\n      },\r\n      updateTitle: \"Are you sure you want to update?\",\r\n      updateSubTitle : \"You will be able to edit again\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n      });\r\n    }\r\n\r\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${user.message.email}`).then((response) => {\r\n            if((response.data.quizzes).length ){\r\n                this.setState({\r\n                  allQuizzes: response.data.quizzes,\r\n                  displayQuizzes: true\r\n                });\r\n            }\r\n            else{  \r\n                this.setState({\r\n                  allQuizzes: null,\r\n                  displayQuizzes: false\r\n                });\r\n            }\r\n          })\r\n          .catch(function (err) {\r\n              this.setState({\r\n                errorMessage: err.response.data.message|| err.response.data.message[0].error,\r\n              });\r\n          });\r\n\r\n          this.setState({\r\n            menuOptions : [\r\n              {\r\n                title: \"Back\",\r\n                icon : <ArrowBackIcon fontsize=\"large\"/>,\r\n                onclick : this.backToQuizzes\r\n              },\r\n              {\r\n                title: \"Edit\",\r\n                icon : <EditIcon fontsize=\"large\"/>,\r\n                onclick : this.editQuiz\r\n              },\r\n              {\r\n                title: \"Delete\",\r\n                icon : <DeleteForeverIcon fontsize=\"large\"/>,\r\n                onclick : ()=>this.setConfirmDialog(\"delete\",\"Are you sure you want to Delete this Quiz?\", \"Question will be deleted permanently but no with Students Records\", this.deleteQuiz)\r\n              }\r\n            ]\r\n          })\r\n  }\r\n\r\n  createQuiz = () => {\r\n    this.setState({\r\n      laststate: this.state.displayQuizzes,\r\n      displayQuizzes : null,\r\n      displayCreate : true,\r\n      displayQuiz: false,\r\n\r\n    })\r\n  }\r\n\r\n  backToQuizzes = () => {\r\n    this.setState({\r\n      displayQuizzes: this.state.laststate,\r\n      displayCreate: false,\r\n      displayQuiz: false,\r\n      edit: false\r\n\r\n    })\r\n  }\r\n\r\n  test(e){\r\n    alert(\"test\")\r\n  }\r\n\r\n  getQuiz = (quiz_idd) => {\r\n    SearchService.searchQuiz(\r\n      quiz_idd,\r\n    ).then(\r\n      response => {\r\n        this.setState({\r\n          displayQuiz: true,\r\n          laststate: this.state.displayQuizzes,\r\n          currentQuiz: response.data,\r\n          toggle: response.data.allow,\r\n          displayQuizzes : null,\r\n          displayCreate: false,\r\n        })\r\n      })\r\n      .catch(\r\n      error => {\r\n        console.log(error.response);\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) \r\n          || error.message || error.toString();\r\n        this.setState({\r\n          message: resMessage,\r\n          successful: false\r\n        })\r\n      }\r\n    );\r\n  }\r\n\r\n  setConfirmDialog = (type ,title, subtitle, onconfirm) => {\r\n        this.setState({\r\n          confirmDialog: {\r\n            isOpen: true,\r\n            title: title,\r\n            subTitle: subtitle,\r\n            onConfirm: onconfirm,\r\n            onDiscard: ()=>this.discard(type)\r\n          }\r\n        })\r\n  }\r\n\r\n  discard = (type) => {\r\n    if(type===\"update\" || type === \"delete\"){\r\n      this.setState({\r\n        confirmDialog: {\r\n          isOpen: false,\r\n          title: '',\r\n          subTitle: \"\",\r\n          onConfirm: null,\r\n          onDiscard: null\r\n        }\r\n      })\r\n    }\r\n    else if(type===\"toggle\"){\r\n      this.setState({\r\n        confirmDialog: {\r\n          isOpen: false,\r\n          title: '',\r\n          subTitle: \"\",\r\n          onConfirm: null,\r\n          onDiscard: null\r\n        },\r\n         toggle: !this.state.toggle\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleToggle = (event) =>{\r\n    this.setState({\r\n      toggle: event.target.checked\r\n    })\r\n    let title;\r\n    let message;\r\n    if(event.target.checked){\r\n      title = \"Allow Students to take Quiz?\";\r\n      message = \"Students Can Take Quiz now\"\r\n    }\r\n    else{\r\n      title = \"Do you want to Close Quiz?\"\r\n      message = \"Students Cannot Take Quiz now\"\r\n    }\r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: true,\r\n        title: title,\r\n        subTitle: this.state.subTitle,\r\n        onConfirm: () => this.allowQuiz(message),\r\n        onDiscard: ()=> this.discard(\"toggle\")\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  allowQuiz = (message) => {\r\n    let allow = this.state.toggle\r\n    const quiz_id = this.state.currentQuiz.quiz_id;\r\n    axios.post(`https://neuroeducation-feedback.herokuapp.com/api/allowQuiz/${quiz_id}` , {\r\n      allow\r\n    })\r\n    .then((response) => {\r\n      let success;\r\n      if(allow){\r\n        success = allow\r\n      }\r\n      else{\r\n        success=false;\r\n      }\r\n      this.setState({\r\n        message: message,\r\n        open:true,\r\n        successful:success,\r\n        toggle: allow\r\n      })\r\n    })\r\n    .catch(function (err) {\r\n        console.log(err.response.data.message|| err.response);\r\n    });\r\n    \r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: false,\r\n        title: '',\r\n        subTitle: \"\",\r\n        onConfirm: null,\r\n        onDiscard: null\r\n      }\r\n    })\r\n  }\r\n\r\n  updateQuiz = (event) =>{\r\n    event.preventDefault();\r\n    let updated_questions = [];\r\n\r\n    for(let i=1;i<=5;i++){\r\n      if(document.getElementById('Q'+i) === null){\r\n        break\r\n      }\r\n      var id = document.getElementById('Q'+i).value;\r\n\r\n      let expArr = [];\r\n      for(let j=1;j<=20;j++){\r\n        let alphabet = String.fromCharCode(96 + (j));\r\n        let expId = 'Q'+i+'E'+alphabet;\r\n\r\n        if(document.getElementById(expId) === null){\r\n          break\r\n        }\r\n        else{\r\n        var exp = document.getElementById(expId).value;\r\n        expArr.push({\r\n          options_id : alphabet,\r\n          options_text : exp\r\n        })}\r\n      }\r\n      updated_questions.push({question_id:i, question_title: id, question_options : expArr})\r\n    }\r\n\r\n    const quiz_id = document.getElementById(\"quiz_id\").value;\r\n    axios.post(`https://neuroeducation-feedback.herokuapp.com/api/updateQuiz/${quiz_id}` , {\r\n      updated_questions\r\n    })\r\n    .then((response) => {\r\n      this.setState({\r\n        message: \"Quiz Updated\",\r\n        open: true,\r\n        successful:true\r\n      })\r\n    })\r\n    .catch(function (err) {\r\n        console.log(err.response.data.message|| err.response);\r\n        this.setState({\r\n          message: \"Quiz Not Updated\",\r\n          open:true,\r\n          successful: false\r\n        })\r\n    });\r\n    \r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: false,\r\n        title: '',\r\n        subTitle: \"\",\r\n        onConfirm: null,\r\n        onDiscard: null\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteQuiz=()=> {\r\n        const id = this.state.currentQuiz.quiz_id;\r\n        const email = this.state.currentQuiz.created_by;\r\n        axios.delete(`https://neuroeducation-feedback.herokuapp.com/api/delete/${id}/${email}`)\r\n        .then((res) => {\r\n            this.setState({\r\n              open: true,\r\n              message: \"Quiz Deleted\",\r\n              danger: true,\r\n              successful:null,\r\n              allQuizzes : this.state.allQuizzes.filter((question) => question.quiz_id !== id)\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err); \r\n            this.setState({\r\n              message: \"Quiz Not Deleted... Please Try Again\",\r\n              open:true,\r\n              successful: false\r\n            })\r\n        });\r\n        this.setState({\r\n          confirmDialog: {\r\n            isOpen: false,\r\n            title: '',\r\n            subTitle: \"\",\r\n            onConfirm: null,\r\n            onDiscard: null\r\n          }\r\n        })\r\n\r\n        this.backToQuizzes()\r\n  }\r\n\r\n  editQuiz=()=>{\r\n    this.setState({\r\n      edit: true,\r\n      displayQuiz: false\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n\r\n  handleQuestionChange(indexQuestion, question){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_title = question;\r\n    questions[indexQuestion].question_id = indexQuestion+1;\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleExplanationChange(indexQuestion, indexExplanation, explanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options[indexExplanation].options_text = explanation;\r\n    \r\n    let alphabet = String.fromCharCode(96 + (indexExplanation+1));\r\n    questions[indexQuestion].question_options[indexExplanation].options_id = alphabet;\r\n    \r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  onChangeTitle(e){\r\n    let title = e.target.value;\r\n    this.setState({\r\n      title\r\n    });\r\n  }\r\n\r\n  onClickAddQuestion(){\r\n    this.setState(\r\n      prevState => ({questions : [...prevState.questions,        \r\n        {\r\n        question_title: '',\r\n        question_options: []\r\n      }]})\r\n    );\r\n  }\r\n\r\n  handleAddExplanationClick(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.push({options_text : ''});\r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  handleRemoveExplanationClick(indexQuestion, indexExplanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.splice(indexExplanation, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  onClickDelQuestion(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions.splice(indexQuestion, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleSubmit(){\r\n\r\n    const { currentUser} = this.state;\r\n\r\n    PostForm.submit(this.state.title, currentUser.message.email, this.state.questions).then(\r\n      (response) => {\r\n        this.setState({\r\n          message: 'Quiz submitted',\r\n          submitted: true,\r\n          quizMdp:response.quizMdp\r\n        });\r\n      },\r\n      error => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        this.setState({\r\n          message: resMessage,\r\n          questions: [\r\n            {\r\n              question_title: '',\r\n              question_options: []\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  createQuestionUI(){\r\n\r\n    return(this.state.questions.map((element, indexQuestion) => \r\n      <div className=\"questionContainer\">\r\n        <div className=\"container\" key={indexQuestion}>\r\n          <MyForm \r\n            onQuestionChange = {this.handleQuestionChange.bind(this, indexQuestion)}\r\n            onTitleChange = {this.handleTitleChange}\r\n            onExplanationChange = {this.handleExplanationChange.bind(this, indexQuestion)}\r\n            onAddExplanationClick = {this.handleAddExplanationClick.bind(this, indexQuestion)}\r\n            onRemoveExplanationClick = {this.handleRemoveExplanationClick.bind(this, indexQuestion)}\r\n            explanations = {this.state.questions[indexQuestion].question_options}\r\n            delete = {this.onClickDelQuestion.bind(this, indexQuestion)}\r\n          />\r\n          {/* <div className=\"delQuestion\">\r\n            <StyledButtonDelQuestion\r\n              variant = \"contained\" onClick = {this.onClickDelQuestion.bind(this, indexQuestion)}>Supprimer cette question\r\n            </StyledButtonDelQuestion>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  // Pourrait être utile plus tard donc je met de coté (deprecated)\r\n  // componentDidMount() {\r\n  //   UserService.getAdminBoard().then(\r\n  //     response => {\r\n  //       this.setState({\r\n  //         content: response.data\r\n  //       });\r\n  //     },\r\n  //     error => {\r\n  //       this.setState({\r\n  //         content:\r\n  //           (error.response &&\r\n  //             error.response.data &&\r\n  //             error.response.data.message) ||\r\n  //           error.message ||\r\n  //           error.toString()\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n\r\n    const title = this.state.title;\r\n    const currentUser = this.state.currentUser;\r\n    const allQuizzes = this.state.allQuizzes;\r\n    const displayQuizzes = this.state.displayQuizzes;\r\n    const displayCreate = this.state.displayCreate;\r\n    const displayQuiz = this.state.displayQuiz;\r\n    const currentQuiz = this.state.currentQuiz\r\n\r\n\r\n\r\n\r\n    // redirect to post/SubmitForm\r\n    if(this.state.submitted===true){\r\n      return <Redirect to={{ pathname: \"/postSubmitForm\", state: { quizMdp: this.state.quizMdp } }} />\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n      <div className=\"mainTeacherForm\">\r\n\r\n        <Snackbar anchorOrigin={{ vertical :'top', horizontal: 'center' }}open={this.state.open} autoHideDuration={6000} onClose={()=>this.handleClose()}>\r\n          <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        {\r\n          this.state.confirmDialog.isOpen && \r\n          <ConfirmDialogue\r\n          confirmDialog={this.state.confirmDialog}\r\n          setConfirmDialog={this.state.confirmDialog}\r\n          />\r\n        }\r\n\r\n        {(displayQuizzes===false || displayQuizzes) && \r\n          <div className=\"\">\r\n            {(allQuizzes && displayQuizzes) && (\r\n                <div >\r\n                    <SnackbarContent \r\n                    style={{backgroundColor: \"white\", position:\"sticky\", top: \"0\", \"z-index\": \"999\"}}\r\n                    message=\"\" \r\n                    action={<button className=\"btnn\" \r\n                    onClick={this.createQuiz}>Créer un nouveau Quiz</button>} \r\n                    />\r\n                    <div >      \r\n                      <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                        <Title data={'Quizs Créé par : ' + currentUser.message.firstname + \" \"+ currentUser.message.lastname} />\r\n                        <div className=\"row\" >\r\n                            {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"  onClick= {()=>this.getQuiz(quiz.quiz_id)}> \r\n                                    <Card className=\"card\" elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\r\n                                        <CardHeader\r\n                                              avatar={\r\n                                                  (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                      {quiz.quiz_id[0].toUpperCase()}\r\n                                                  </Avatar>)\r\n                                          }\r\n                                              title={quiz.quiz_id}\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                {quiz.quiz_id}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </Card>\r\n\r\n                                </div> \r\n                            ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )}\r\n            {(displayQuizzes===false) && (\r\n              <div>\r\n                  <h4>{'Quizs Créé par : '}</h4>\r\n                  <h4> {currentUser.message.firstname+\" \"+currentUser.message.lastname}</h4>\r\n                  <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                      <h4>Vous n'avez pas créé de quiz</h4>\r\n                  </div>\r\n              </div>\r\n            )}\r\n            {/* <button className=\"btnn\" onClick={this.createQuiz}>Créer un nouveau Quiz</button> */}\r\n          </div>}\r\n\r\n        {(displayQuiz || this.state.edit) && currentQuiz &&\r\n          <div className=\"container-questions\">\r\n            <MenuOption options = {this.state.menuOptions}></MenuOption>\r\n            <Tooltip title=\"Back to list\">\r\n              <IconButton aria-label=\"back\" style={{color:'#4257b2'}} onClick={this.backToQuizzes}>\r\n                <ArrowBackIcon fontsize=\"large\"/>\r\n              </IconButton>\r\n            </Tooltip>\r\n            {/* <button className=\"btnn\"  onClick={this.backToQuizzes}><ArrowBackIcon fontsize=\"large\"/></button>  */}\r\n\r\n            {/* <button className=\"btnn\"  onClick={this.deleteQuiz}><DeleteForeverIcon fontsize=\"large\"/></button>  */}\r\n            {/* <button className=\"btnn\"  onClick={this.editQuiz}>Edit Quiz</button> */}\r\n            <p>\r\n                {currentQuiz.quiz + ' est actuellement ' + (this.state.toggle ? (\"permis\") : (\"interdit\")) +\"à prendre\"}             \r\n                <Switch\r\n                checked={this.state.toggle}\r\n                onChange={this.handleToggle}\r\n                name=\"switch\"\r\n                inputProps={{\"aria-label\":\"test switch\"}}\r\n                style={{color:\"#4257b2\"}}\r\n                color=\"primary\"\r\n                />\r\n            </p>\r\n            \r\n            {(currentQuiz && this.state.edit) && (\r\n              <div  > \r\n    \r\n                <Form id=\"myForm\">\r\n                  <div className=\"container\">\r\n                    <div className=\"form-group\">\r\n                      <center><h5 >{currentQuiz.quiz}</h5><br/></center>\r\n\r\n                      <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name=\"quiz_id\"\r\n                              id=\"quiz_id\"\r\n                              value = {currentQuiz.quiz_id}\r\n                              readOnly\r\n                          /> \r\n                      {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                        <div key={questions.question_id}>\r\n                          <label htmlFor={'Q'+questions.question_id}><strong>{'Question : '+questions.question_id}</strong></label>\r\n                          <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name={'Q'+questions.question_id}\r\n                              id={'Q'+questions.question_id}\r\n                              value = {questions.question_title}\r\n                              // onChange = {this.onChangeTitle}\r\n                              validations = {[required]}\r\n                              autoComplete = \"off\"\r\n                          /> \r\n\r\n                          {questions.question_options && questions.question_options.map((options, index) => ( \r\n                            <div>\r\n                            <label htmlFor={'Q'+questions.question_id+'E'+options.options_id}><strong>{'Explanation : '+options.options_id}</strong></label>\r\n                            <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name={'Q'+questions.question_id+'E'+options.options_id}\r\n                            id={'Q'+questions.question_id+'E'+options.options_id}\r\n                            value = {options.options_text}\r\n                            // onChange = {this.onChangeTitle}\r\n                            validations = {[required]}\r\n                            autoComplete = \"off\"\r\n                            />\r\n                            </div>\r\n                          ))}                  \r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>   \r\n                </Form> \r\n                <button className=\"btnn\" onClick={()=>this.setConfirmDialog(\"update\",\"Do you want to Edit this Quiz?\", \"You can edit again\", this.updateQuiz)}>Update</button>   \r\n              </div>\r\n              \r\n              )}\r\n\r\n              <div >\r\n                {(currentQuiz && displayQuiz) && (\r\n                  <div  > \r\n                    <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n                    {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                      <div key={questions.question_id}>\r\n                        <p><strong>{questions.question_id}{'. '}{questions.question_title}</strong></p>    \r\n                      \r\n                          <div>\r\n                            {questions.question_options && questions.question_options.map((options, index) => ( \r\n                              <div>\r\n                                <label>\r\n                                  <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                                </label>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        \r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n          </div>\r\n        }\r\n\r\n\r\n        <div>\r\n          {displayCreate && <div>\r\n            <div style={{width:\"100%\",   display: \"inline-flex\", \"justify-content\": \"center\"}}>\r\n            <button  id=\"backButton\" onClick={this.backToQuizzes}><ArrowBackIcon fontsize=\"large\"/></button> \r\n\r\n            <SnackbarContent \r\n            style={{ width : \"100%\" ,fontWeight:\"bold\", fontSize:\"1.2rem\", color: \"#4257b2\" ,backgroundColor: \"white\", position:\"sticky\", top: \"0\", \"z-index\": \"999\"}}\r\n            message=\"Création de nouvelles questions\" \r\n            action={\r\n              <button\r\n               className=\"btnn\" variant = \"contained\" onClick = {this.handleSubmit}>Valider\r\n              </button>\r\n            } \r\n            />\r\n            </div> \r\n            {/* <div className=\"container\">\r\n              <header className=\"jumbotron\">\r\n                <h3>Création de nouvelles questions</h3>\r\n              </header>\r\n            </div> */}\r\n\r\n            <Form>\r\n              <div className=\"container\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"form-title\"><strong>Titre du formulaire</strong></label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"form-title\"\r\n                      value = {title}\r\n                      onChange = {this.onChangeTitle}\r\n                      validations = {[required]}\r\n                      autoComplete = \"off\"\r\n                    />\r\n                </div>\r\n              </div>\r\n\r\n\r\n              {this.createQuestionUI()}\r\n\r\n\r\n              <div className=\"container\">\r\n                <br></br>\r\n                <SnackbarContent \r\n                style={{backgroundColor: \"white\"}}\r\n                message=\"\" \r\n                action={<button\r\n                 className=\"btnn\" type=\"button\" onClick = {this.onClickAddQuestion}>Ajouter une question\r\n              </button>} \r\n                />\r\n                {/* <StyledButtonAddQuestion\r\n                    variant = \"contained\" onClick = {this.onClickAddQuestion}>Ajouter une question\r\n                </StyledButtonAddQuestion>\r\n                <br></br><br></br>\r\n                <StyledButtonSubmit\r\n                  variant = \"contained\" onClick = {this.handleSubmit}>Valider\r\n                </StyledButtonSubmit> */}\r\n              </div>\r\n            </Form>\r\n\r\n            { this.state.message && \r\n              <div className=\"container\">\r\n                <div className=\"itsanerror\"><h3>Une erreur est survenu lors de l'envoi du formulaire</h3></div>\r\n              </div>\r\n            }\r\n          </div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class PostSubmitForm extends Component {\r\n    render(){\r\n        if(this.props.location.state === undefined){\r\n            return <Redirect to={{pathname:'/home'}}/>\r\n        }\r\n        return(\r\n            <div>\r\n                <div className=\"container\">\r\n                    <header className=\"jumbotron\">\r\n                        <div className=\"success\">\r\n                            <h3>Formulaire envoyé avec succès !</h3>\r\n                            <br></br>\r\n                            <h5>Voici le code du quizz à partager aux élèves :</h5>\r\n                            <p className=\"quizMdp\">{\" \" + this.props.location.state.quizMdp}</p>\r\n                        </div>\r\n                    </header>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Bar, HorizontalBar } from 'react-chartjs-2';\r\n\r\n\r\nconst BarChart = ( props ) => {\r\n\r\n    const names = props.explanationArray;\r\n    const explanationLabels = props.explanationLabels;\r\n    const explanationValues = props.explanationValues;\r\n    const barData = props.barData;\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {(barData === \"Bar\") ? (\r\n                        <Bar\r\n                        data={{\r\n                            labels: explanationLabels,\r\n                            datasets: [{\r\n                                data: explanationValues,\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ]\r\n                            }]\r\n                        }}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                            scales: {\r\n                                yAxes: [{\r\n                                    ticks: {\r\n                                        beginAtZero: true\r\n                                    }\r\n                                }]\r\n                            },\r\n                            legend: {\r\n                                display: false\r\n                            },\r\n                            tooltips: {\r\n                                callbacks: {\r\n                                    label: function(item, data){\r\n                                        return names[item.index];\r\n                                    },\r\n                                    title: function(item, data){\r\n                                        return;\r\n                                    }\r\n                                },\r\n                                displayColors: false\r\n                            }\r\n                        }}\r\n                    />\r\n            ): (\r\n                <HorizontalBar\r\n                data={{\r\n                    labels: explanationLabels,\r\n                    datasets: [{\r\n                        data: explanationValues,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            label: function(item, data){\r\n                                return names[item.index];\r\n                            },\r\n                            title: function(item, data){\r\n                                return;\r\n                            }\r\n                        },\r\n                        displayColors: false\r\n                    }\r\n                }}\r\n            />\r\n            )}\r\n    \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BarChart;","import { Doughnut, Pie } from 'react-chartjs-2';\r\n\r\n\r\nconst DoughnutChart = ({ labels, answerValues, pieData }) => {\r\n    return ( \r\n        <div>\r\n            {(pieData === \"Doughnut\") ? (\r\n                <Doughnut\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: [{\r\n                            data: answerValues,\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                            ]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            ):(\r\n                <Pie\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: [{\r\n                            data: answerValues,\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                            ]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            )}\r\n            \r\n        </div>\r\n     );\r\n}\r\n\r\nexport default DoughnutChart;","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n// import {FaTimes} from 'react-icons/fa'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SwapHorizRounded from '@material-ui/icons/SwapHorizRounded';import BarChart from './BarChart';\r\nimport { Container, List, ListItem, ListItemText} from '@material-ui/core';\r\nimport DoughnutChart from './DoughnutChart';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport NoteCard from \"./NoteCard\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport SearchService from \"../services/search.service\";\r\nimport { Avatar, Typography } from '@material-ui/core';\r\nimport {Title} from './Title';\r\n\r\n\r\n\r\nimport FlippyItems from './Flippy';\r\n\r\n\r\n\r\nconst AllAnswers = () => {\r\n    const [allAnswers, setallAnswers] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [array, setarray] = useState(null);\r\n    const [answersArray, setanswersArray] = useState();\r\n    const [explanationsArray, setexplanationsArray] = useState()\r\n    const [currentStudent, setcurrentStudent] = useState(null)\r\n    const [explanationStats, setexplanationStats] = useState(null)\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n    const [allQuestions, setAllQuestions] = useState([]);\r\n    const [allExplanations, setAllExplanations] = useState([]);\r\n    const [pieData, setPieData] = useState(\"Doughnut\");\r\n    const [barData, setBarData] = useState(\"Bar\");\r\n    const [pieTitle, setPieTitle] = useState(\"Graphique en anneau\");\r\n    const [barTitle, setBarTitle] = useState(\"Diagramme à bandes\");\r\n    const [displayAllQuizzes, setdisplayAllQuizzes] = useState(true);\r\n    const [displayStudentList, setdisplayStudentList] = useState(false);\r\n    const [displayStats, setdisplayStats] = useState(false)\r\n    const [actualQuiz, setactualQuiz] = useState(null)\r\n\r\n\r\n    // FIND ALL ANSWERED QUESTIONS ON PAGE LOAD\r\n    useEffect(() => {\r\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllAnswered').then((response) => {\r\n          setallAnswers(response.data);\r\n          setShowSpinner(false);\r\n        })\r\n        .catch(function (error) {\r\n        });\r\n    }, []);\r\n\r\n    //ALTERNATE BETWEEN PIE AND DOUGHNUT CHART\r\n    const handlePieChartChange = () => {\r\n        if(pieData === \"Doughnut\"){\r\n            setPieData(\"Pie\")\r\n            setPieTitle(\"Diagramme circulaire\")\r\n        }\r\n        if(pieData === \"Pie\"){\r\n            setPieData(\"Doughnut\")\r\n            setPieTitle(\"Graphique en anneau\")\r\n        }\r\n    }\r\n    const handleBarChartChange = () => {\r\n        if(barData === \"Bar\"){\r\n            setBarData(\"Horizontal Bar\")\r\n            setBarTitle(\"Graphique à barres horizontales\")\r\n        }\r\n        if(barData === \"Horizontal Bar\"){\r\n            setBarData(\"Bar\")\r\n            setBarTitle(\"Diagramme à bandes\")\r\n        }\r\n    }\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index, quiz_id) => {\r\n        setcurrentQuiz(quiz);\r\n        getStats(quiz_id);\r\n        setcurrentStudent(null);\r\n        setexplanationStats(null);\r\n        setarray(null);\r\n\r\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${quiz_id}`)\r\n        .then(response => {\r\n            setAllQuestions(response.data.questions);\r\n        })\r\n        .catch(err => {\r\n            // console.log(\"An error occurred\", err.response);\r\n        })\r\n\r\n\r\n        // GET ACTUAL QUESTIONS FROM DATABASE\r\n        SearchService.searchQuiz(\r\n            quiz.quiz_id,\r\n        ).then(\r\n            response => {\r\n            setactualQuiz(response.data);\r\n            })\r\n            .catch(\r\n            error => {\r\n            console.log(error.response);\r\n            const resMessage =\r\n                (error.response && error.response.data && error.response.data.message) \r\n                || error.message || error.toString();\r\n            }\r\n        );\r\n    }; \r\n\r\n    // RETRIEVE GROUPPED DATA FROM THE DATABASE BY SELECTED QUIZ ID \r\n    const getStats = (quiz_id) => {\r\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/groupStats/${quiz_id}`)\r\n        .then(response => {\r\n            if(response){\r\n            // SET GROUPPED ANSWERS \"FOR EACH STUDENT\" ARRAY\r\n            setanswersArray(response.data[0]._id.answer);\r\n            // SET GROUPPED EXPLANATIONS \"FOR EACH STUDENT\" ARRAY\r\n            setexplanationsArray(response.data[0]._id.explanation);\r\n            }\r\n        })\r\n        .catch()\r\n    }\r\n\r\n    // SET SELECTED(CLICKED) STUDENT ARRAY\r\n    const setActiveStudent = (student) => {\r\n        setcurrentStudent(student);\r\n    }\r\n\r\n    // HANDLE STUDENT LIST\r\n    const handleStudentList = () => {\r\n        setdisplayAllQuizzes(false)\r\n        setdisplayStudentList(true)\r\n        setdisplayStats(false)\r\n    }\r\n\r\n    // HANDLE BACK TO QUIZ LIST\r\n    const backToQuizzes = () => {\r\n        setdisplayAllQuizzes(true)\r\n        setdisplayStudentList(false)\r\n        setdisplayStats(false)\r\n        setcurrentQuiz(null)\r\n        setcurrentStudent(null);\r\n        setexplanationStats(null);\r\n        setarray(null);\r\n    }\r\n\r\n    // MERGE ALL ANSWERS BY QUESTION NUMBER AND SET COUNT AND STATS\r\n    const stats = () => {\r\n        // MERGE ALL ANSWERS INTO AN ARRAY (arrAns)\r\n        const arrayAns = answersArray[0].map(function(value, index) {\r\n            const mergeAllStudentsByIndex = [value];\r\n            if(value){\r\n                for(let i=1; i<answersArray.length; i++){\r\n                    mergeAllStudentsByIndex.push(answersArray[i][index])\r\n                }\r\n            }\r\n            return mergeAllStudentsByIndex;\r\n        });\r\n\r\n         // MERGE ALL EXPLANATIONS INTO AN ARRAY (arrExp)\r\n        const arrayExp = explanationsArray[0].map(function(explanation, index) {\r\n            const mergeAllExplanation = [explanation];\r\n            if(explanation){\r\n                for(let i =1; i< explanationsArray.length; i++){\r\n                    mergeAllExplanation.push(explanationsArray[i][index])\r\n                }\r\n            }\r\n\r\n            return mergeAllExplanation;\r\n        });\r\n        \r\n        // COUNT NUMBER OF OCCURRENCE OF AN ANSWER(\"Plutot Oui\", \"Non\"... etc) FOR EACH QUESTION\r\n        const countAnswers = arrayAns.map((answers, index) => {\r\n            let all = {\r\n                \"Oui\" : 0,\r\n                \"Plutot Oui\" : 0,\r\n                \"Plutot Non\" : 0,\r\n                \"Non\": 0,\r\n            };\r\n            for(const answer of answers){\r\n                all = {...all,  [answer] : answers.filter((a) => {return a === answer}).length}\r\n            }\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setarray(countAnswers)\r\n\r\n        // GET EXPLANATIONS OF ALL QUESTIONS FOR THE CHART DISPLAY \r\n        const labelsArray = allQuestions.map((value, index) => {\r\n            const myArray = value.question_options.map((value, index) => {\r\n                return value.options_text;\r\n            })\r\n            return myArray\r\n        })\r\n\r\n        setAllExplanations(labelsArray);\r\n\r\n        // COUNT NUMBER OF OCCURRENCE OF AN EXPLANATION(\"a\", \"b\", \"c\"... etc) FOR EACH QUESTION\r\n        const countExplanations = arrayExp.map((array,index) => {\r\n            let all = {\r\n                a : 0,\r\n                b : 0,\r\n                c : 0,\r\n                d : 0,\r\n                e : 0\r\n            }\r\n            for(const letter of array){\r\n                all = {...all,  [letter] : array.filter((a) => {return a === letter}).length}\r\n            }\r\n\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setexplanationStats(countExplanations);\r\n        setdisplayStats(true)\r\n        setdisplayStudentList(false)\r\n        setdisplayAllQuizzes(false)    \r\n    }\r\n\r\n    // RETRIEVE INTEGERS(VALUES) FOR EXPLANATIONS\r\n    const getExplanationValues = (explanation, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(explanation[key])\r\n        })\r\n        return values;\r\n    }\r\n    // RETRIEVE INTEGERS(VALUES) FOR Y, MY, MN, N QUESTIONS\r\n    const getAnswerValues = (answer, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(answer[key])\r\n        })\r\n        return values;\r\n    }\r\n\r\n    //RETRIEVE KEYS(LABELS) FOR CHART DATA\r\n    const getLabels = object => {\r\n        return Object.keys(object);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-questions\">\r\n            {showSpinner && <div class=\"spinner\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            }\r\n            {!showSpinner &&  displayAllQuizzes && (<div  style={{borderRadius: \"10px\"}}>\r\n                <div >      \r\n                    <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                        <Title data=\"Liste de toutes les réponses\" />\r\n                    <div className=\"row\" >\r\n                        {allAnswers && allAnswers.map((quiz, index) => (\r\n                            <FlippyItems     \r\n                                frontSide={\r\n                                    <div key={index}  > \r\n                                        <Card \r\n                                        elevation={1} \r\n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}\r\n                                        onMouseOver={() => setActiveQuiz(quiz, index, quiz.quiz_id)}\r\n                                        >\r\n                                            <CardHeader\r\n                                                avatar={\r\n                                                    (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                        {quiz.quiz_id[0].toUpperCase()}\r\n                                                    </Avatar>)\r\n                                                }\r\n                                                title={quiz.quiz_id}\r\n                                                // subheader={note}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                    {(quiz.quiz_title).substr(0,27) + \"...\"}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Card>\r\n\r\n                                </div> \r\n                                }\r\n                                backSide={\r\n                                    <div key={index}  > \r\n                                        <Card elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\r\n                                            <CardHeader\r\n                                                avatar={\r\n                                                    (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                        {quiz.quiz_id[0].toUpperCase()}\r\n                                                    </Avatar>)\r\n                                                }\r\n                                                title={(quiz.quiz_title)}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <div style={{float:\"right\", color:\"#4257b2\"}}> \r\n                                                    <Tooltip title=\"Cliquez pour les statistiques\">\r\n                                                        <IconButton  onClick={stats} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                                                            <EqualizerIcon />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                    <Tooltip title=\"Liste des étudiants\">\r\n                                                        <IconButton  onClick={handleStudentList} style={{float:\"right\", color:\"#4257b2\"}}>\r\n                                                            <FormatListNumberedIcon />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n\r\n                                                </div>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                </div> \r\n                                }\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>)}\r\n\r\n            <div>\r\n                {currentQuiz && (displayStudentList || displayStats) ? (\r\n                    <div>\r\n                        <IconButton  onClick={()=>backToQuizzes()} style={{float:\"left\", color:\"#4257b2\"}}>\r\n                        <ArrowBackIcon />\r\n                        </IconButton>\r\n                        <center><Title data={'Vous avez sélectionné le quiz : '+ currentQuiz.quiz_id} /></center>\r\n                        \r\n                        { displayStudentList && <div >\r\n                            <h4>{'Liste des étudiants : '}</h4>\r\n                            {currentQuiz.quiz_answers && currentQuiz.quiz_answers.map((students, index) => (\r\n                                <div>\r\n                                    <h4 onClick={() => setActiveStudent(students)}>{students.student_id}</h4>\r\n                                </div>\r\n                            ))}\r\n                        </div>}\r\n\r\n                        <div>\r\n                            {currentStudent && (\r\n                                <div>\r\n                                    <h4>{'Affichage des réponses sur  : '}{currentStudent.student_id}</h4>\r\n                                    {currentStudent && currentStudent.student_answers.map((answers, index) => (\r\n                                        <div> \r\n                                            <h4>{answers.question_answer_id}{' .'}{answers.answer}</h4>\r\n                                            <h4>{'Explication : '}{answers.explanation}</h4>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div style={{marginBottom: \"20px\"}}>\r\n                        </div>\r\n                        <Container>\r\n                            {array && displayStats && (\r\n                                <div>\r\n                                    <Grid container spacing={3}>\r\n                                        {array && array.map((answer, index) => (\r\n                                            <Grid item sm={12} md={6} lg={4} >\r\n                                                <Card elevation={2}>\r\n                                                    <CardHeader\r\n                                                        action={\r\n                                                            <IconButton onClick={handlePieChartChange}>\r\n                                                                <SwapHorizRounded/>\r\n                                                            </IconButton>\r\n                                                        }\r\n                                                        title={\"\"}\r\n                                                        subheader={actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)} \r\n                                                    />\r\n                                                    <CardContent>\r\n                                                        <DoughnutChart\r\n                                                        pieData={pieData}\r\n                                                        labels={getLabels(answer)}\r\n                                                        answerValues={getAnswerValues(answer, getLabels(answer))} />\r\n                                                    </CardContent>\r\n                                                </Card>\r\n                                            </Grid>\r\n                                        ))}\r\n                                    </Grid>\r\n                                </div>\r\n                                                        \r\n                                ) }\r\n\r\n                            {explanationStats && (\r\n                                <div>\r\n                                        <Grid container spacing={3} >\r\n                                            {explanationStats && explanationStats.map((explanation, index) => (\r\n                                                <Grid item sm={12} md={6} lg={6}>\r\n                                                    <Card elevation={2}>\r\n                                                        <CardHeader\r\n                                                        action={\r\n                                                            <IconButton onClick={handleBarChartChange}>\r\n                                                                <SwapHorizRounded/>\r\n                                                            </IconButton>\r\n                                                        } \r\n                                                        title={\"\"}\r\n                                                        subheader={actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)}\r\n                                                        />\r\n                                                        <CardContent>\r\n                                                            <BarChart\r\n                                                                barData={barData} \r\n                                                                explanationArray={allExplanations[index]}\r\n                                                                explanationLabels={getLabels(explanation)}\r\n                                                                explanationValues={getExplanationValues(explanation, getLabels(explanation))} \r\n                                                            />\r\n                                                        </CardContent>\r\n                                                    </Card>\r\n                                                </Grid>\r\n                                            ))}\r\n                                        </Grid>\r\n                                </div>         \r\n                                )}\r\n                        </Container>    \r\n                    </div>\r\n                ) : (<Title data=\"Veuillez sélectionner un quiz pour afficher les réponses\" noUnderline={true} subHeader={true} />)}\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllAnswers;","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n// import {FaTimes} from 'react-icons/fa'\r\nimport { List, ListItem, ListItemText, Button, ListItemIcon } from '@material-ui/core';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\n\r\nimport FlippyItems from './Flippy';\r\n\r\n\r\nimport NoteCard from \"./NoteCard\";\r\nimport Flippy from 'react-flippy/dist/Flippy';\r\nimport {Title} from './Title';\r\n\r\n\r\nconst AllQuestions = () => {\r\n    const [allQuizzes, setallQuizzes] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [radioOptions, setradioOptions] = useState({});\r\n    const [checkedItems, setCheckedItems] = useState([]); \r\n    const [displayQuiz, setdisplayQuiz] = useState(false);\r\n    const [displayQuizzes, setdisplayQuizzes] = useState(true)\r\n\r\n    // const [currentUser] = useState(AuthService.getCurrentUser());\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n\r\n    // LOAD ALL QUIZZES FROM DATABASE ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n    useEffect(() => {\r\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllQ').then((response) => {\r\n          setallQuizzes(response.data) \r\n          setShowSpinner(false);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    }, []);\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index) => {\r\n        setcurrentQuiz(quiz);\r\n        setdisplayQuizzes(false);\r\n        setdisplayQuiz(true);\r\n    };\r\n\r\n    const backToQuizzes = () => {\r\n        setdisplayQuizzes(true);\r\n        setdisplayQuiz(false);\r\n    }\r\n\r\n    // RETURN CHECKED VALUE(true or false)\r\n    const checkRadioButton = (question_id, label) => {\r\n        if (!radioOptions[question_id]) {\r\n            return false;\r\n        }\r\n        return radioOptions[question_id] === label;\r\n    }\r\n\r\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n    const setradio = (id , answer) => {\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === id);\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === id).answer = answer;\r\n            setradioOptions((state) => {\r\n                return {\r\n                    ...state,\r\n                    [id] : answer\r\n                }\r\n            });\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        else{\r\n        setradioOptions((state) => {\r\n            return {\r\n                ...state,\r\n                [id] : answer\r\n            }\r\n        });\r\n\r\n        setCheckedItems([\r\n            ...checkedItems,\r\n             {\r\n                question_answer_id : id,\r\n                answer: answer,\r\n                explanation: 'no explanation'\r\n            }\r\n        ]);}\r\n    }\r\n\r\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        \r\n    }\r\n\r\n    // SUBMIT ANSWERS TO THE BACKEND  // DISABLED BECAUSE ADMIN MUST NOT SUBMIT\r\n    // const submitAnswers = () =>{\r\n    //     setmessage('');\r\n    //     setsuccessful(false);\r\n    //     const answers = {\r\n    //         quiz_id : currentQuiz.quiz_id,\r\n    //         quiz_title : currentQuiz.quiz,\r\n    //         quiz_answers : {\r\n    //             student_id : currentUser.message.email,\r\n    //             student_answers : checkedItems\r\n    //         }\r\n    //     }\r\n    //     Axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n    //         answers\r\n    //       }).then((res) => {\r\n    //             if(res){\r\n    //                 //   window.location.reload(false);\r\n    //                 setmessage('You submitted Quiz as Admin or Teacher... Please Delete from the answers page else Stats will be affected');\r\n    //                 setsuccessful(true);\r\n    //                 setCheckedItems([]);\r\n    //                 setradioOptions({});\r\n\r\n    //             }\r\n    //       }).catch(error => {\r\n    //             const errMessage =\r\n    //             (error.response.data.message[0].password || (error.response &&\r\n    //               error.response.data &&\r\n    //               error.response.data.message)) ||\r\n    //             error.message ||\r\n    //             error.toString();\r\n    //             console.log(errMessage);\r\n    //           setmessage(errMessage);\r\n    //             setsuccessful(false);            \r\n    //       });\r\n\r\n\r\n    // }\r\n\r\n\r\n    return (\r\n        <div >\r\n            {/* html for spinner */}\r\n            {showSpinner && <div class=\"spinner\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            }\r\n            {!showSpinner && displayQuizzes && (<div  style={{borderRadius: \"10px\", marginTop: \"10px\"}}>\r\n                    <div >      \r\n                      <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                          <Title data='Liste de quiz' />\r\n                        <div className=\"row\" >\r\n                            {displayQuizzes && allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\" onClick= {() => setActiveQuiz(quiz, index)} style={{paddingTop: \"10px\"}}> \r\n                                    <FlippyItems\r\n                                    frontSide={\r\n                                        <Card \r\n                                        elevation={1} \r\n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\r\n                                            <CardHeader\r\n                                                  avatar={\r\n                                                      (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                          {quiz.quiz_id[0].toUpperCase()}\r\n                                                      </Avatar>)\r\n                                              }\r\n        \r\n                                                  title={quiz.quiz_id}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                    {(quiz.quiz).substr(0,27) + \"...\"}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Card> \r\n                                    }\r\n                                    backSide={\r\n                                        <Card \r\n                                        elevation={1} \r\n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\r\n                                            <CardHeader\r\n                                                  avatar={\r\n                                                      (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                          {quiz.quiz_id[0].toUpperCase()}\r\n                                                      </Avatar>)\r\n                                              }\r\n        \r\n                                                  title={quiz.quiz_id}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                    {(quiz.quiz).substr(0,27) + \"...\"}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Card> \r\n                                    }\r\n                                    />\r\n\r\n                                </div> \r\n                            ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n            </div>)}\r\n\r\n            <div>\r\n                {(displayQuiz && currentQuiz ) && (\r\n                    <div className=\"container-questions\">\r\n                        <Button onClick={()=> backToQuizzes()}><ArrowBackIcon fontsize=\"large\" style={{color: \"#4257b2\"}}/></Button> \r\n                        <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n                        {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                            <div key={questions.question_id}>\r\n                                <p><strong>{questions.question_id}{'. '}{questions.question_title}</strong></p>    \r\n                                <div>\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Oui\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Oui\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Plutot Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Non\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Plutot Non\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Non\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Non\r\n                                </div>\r\n                                {radioOptions[questions.question_id] === \"Plutot Non\"\r\n                                || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n                                || radioOptions[questions.question_id] === \"Non\" ? (\r\n                                    <div>\r\n                                        {questions.question_options && questions.question_options.map((options, index) => ( \r\n                                            <div>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" value={options.options_id} \r\n                                                    checked={checkedItems[options.option_text]}  \r\n                                                    onChange={(e) => \r\n                                                        setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                                                    }\r\n                                                    />\r\n                                                    <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                                                </label>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ) : (<span>Aucune explication requise</span>)}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllQuestions\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport AuthService from \"../services/auth.service\";\r\nimport FormCard from './formCard'\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default class AdminRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\r\n\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      admin: false,\r\n      teacher: false,\r\n      roles : [],\r\n      successful: false,\r\n      message: \"\",\r\n      noRoleError: false,\r\n      mdpTmp: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCheckbox(e) {\r\n    let target = e.target;\r\n    let value = target.checked;\r\n    let name = target.name;\r\n    this.setState({\r\n        [name]: value,\r\n        noRoleError: false\r\n    })\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (!this.state.admin && !this.state.teacher) {\r\n      return (this.setState({\r\n        noRoleError: true\r\n      }))\r\n    }\r\n    else {\r\n      let roles = this.state.roles;\r\n      if (this.state.admin) {\r\n        roles.push(\"ROLE_ADMIN\");\r\n      }\r\n      if (this.state.teacher) {\r\n        roles.push(\"ROLE_TEACHER\")\r\n      }\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.adminRegister(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.roles,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: \"Compte créé avec succès\",\r\n            successful: true,\r\n            mdpTmp: response.data.mdpTmp\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <FormCard\r\n        content={\r\n          <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"70px\", paddingBottom:\"60px\"}}>\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Prenom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangeFirstname}\r\n                    required\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Nom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangeLastname}\r\n                    required\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    required\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"teacher\"\r\n                      checked={this.state.teacher}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Professeur\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"admin\"\r\n                      checked={this.state.admin}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Administrateur\r\n                    </label>\r\n                  </div>\r\n\r\n                  {this.state.noRoleError && \r\n                    <div className=\"container\">\r\n                      <div className=\"itsanerror\">Vous devez sélectionner au moins un rôle</div>\r\n                    </div>\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button  className=\"btnn\">Créer le compte</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n\r\n                  {this.state.mdpTmp && (\r\n                    <div>\r\n                      <br></br><br></br>\r\n                      Votre mot de passe temporaire est :\r\n                      {\" \" + this.state.mdpTmp}\r\n                      <br></br><br></br>\r\n                      Vous pourrez le modifier en vous connectant à votre profil\r\n                    </div>\r\n                  )}\r\n                  \r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n \r\n        }\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst ProtectedRoute =({ component: Component, role, ...rest })=> {\r\n        const currentUser = AuthService.getCurrentUser()\r\n        let isAuthenticated = '';\r\n        let isAuthorized = false;\r\n\r\n        if(currentUser){\r\n            isAuthenticated = currentUser.token;\r\n\r\n            role.map(roles => {\r\n                if(currentUser.message.roles.includes(roles)){\r\n                    isAuthorized = true;\r\n                } \r\n                return isAuthorized\r\n            });\r\n        }\r\n\r\n        return (isAuthenticated && (isAuthorized))? (\r\n            <Component />\r\n        ) : (\r\n            <div>\r\n            <Redirect to={{ pathname: '/home' }} />\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport '../paginate.css';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport { List, ListItem, ListItemText, ListItemAvatar, Avatar, Button, IconButton } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nexport const Paginate = ({allStudents, getAllQuizzes, allQuizzes, displayQuizzes, setActiveQuiz, evolution}) => {\r\n    const [start, setStart] = useState(0)\r\n    const [end, setEnd] = useState(10)\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n\r\n    const prevStudent = () => {\r\n        setStart((old) => {\r\n            let newStart = old - 10\r\n            if(newStart < 0){\r\n                return allStudents.length - 10\r\n            }\r\n            else{\r\n                return newStart\r\n            }\r\n        })\r\n        setEnd((old) => {\r\n            let newEnd = old - 10\r\n            if((start - 10) < 0){\r\n                return allStudents.length\r\n            }\r\n            else{\r\n                return newEnd\r\n            }\r\n        })\r\n    }\r\n    const nextStudent = () => {\r\n        setStart((old) => {\r\n            let newStart = old + 10\r\n            if(newStart >= allStudents.length){\r\n                return 0\r\n            }\r\n            else{\r\n                return newStart\r\n            }\r\n        })\r\n        setEnd((old) => {\r\n            let newEnd = old + 10\r\n            if((start + 10) >= allStudents.length) {\r\n                return 10\r\n            }\r\n            else{\r\n                return newEnd\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        // {(allQuizzes && displayQuizzes) &00p0& (\r\n        //     <div >\r\n        //         <h4>{'Questionnaires auxquels ont répondu : '}</h4>\r\n        //         <h4> {currentStudent}</h4>\r\n        //         <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n        //             <List>\r\n        //             {allQuizzes && allQuizzes.map((quiz, index) => (\r\n        //                 <ListItem button onClick= {() => setActiveQuiz(quiz, index)}>\r\n        //                     <ListItemIcon>\r\n        //                         <BookOutlined />\r\n        //                     </ListItemIcon>\r\n        //                     <ListItemText primary={\r\n        //                         <h4>\r\n        //                         {quiz.quiz_id} \r\n        //                         </h4>\r\n        //                     }/>\r\n        //                 </ListItem>\r\n        //             ))}\r\n        //             </List>\r\n        //         </div>\r\n        //     </div>\r\n        // ) }\r\n        \r\n\r\n        <div>\r\n            {allStudents && allStudents.slice(start, end).map((student, index) => (\r\n                <Accordion expanded={expanded === `panel${index + 0}`} onChange={handleChange(`panel${index + 0}`)} onClick={()=> getAllQuizzes(student.email,student.firstname +' ' +student.lastname )}>\r\n                    <AccordionSummary\r\n                        aria-controls=\"panel2a-content\"\r\n                        id=\"panel2a-header\"\r\n                        expandIcon={<ExpandMore style={{color: \"#4257b2\"}} />}\r\n                    >\r\n                        <Avatar style={{fontSize: \"0.8rem\", backgroundColor: \"#4257b2\"}}>\r\n                            {(student.firstname[0] +' ' + student.lastname[0]).toUpperCase()}\r\n                        </Avatar>\r\n                        <Typography  style={{marginLeft: \"15px\"}} variant=\"h6\">{student.firstname +' ' +student.lastname}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        {(allQuizzes && displayQuizzes) && (\r\n                            <div style={{display: \"flex\"}}>\r\n                                {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                    <Tooltip title=\"show evolution\">\r\n                                        <Chip  style={{color:\"#fff\", marginLeft: \"5px\", backgroundColor: \"hsl(205, 78%, 60%)\"}} label={quiz.quiz_id} onMouseOver= {() => setActiveQuiz(quiz, index)} onClick={()=> evolution()}/>\r\n                                    </Tooltip>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        {(displayQuizzes === false) && (\r\n                            <Typography>Cet étudiant n'a répondu à aucun quiz</Typography>\r\n                        )}\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                // <ListItem key={student.email} button onClick={() => getAllQuizzes(student.email,student.firstname +' ' +student.lastname)}>\r\n                //     <ListItemAvatar>\r\n                //         \r\n                //     </ListItemAvatar>\r\n                //     <ListItemText primary={<h4>{student.firstname +' ' +student.lastname}</h4>}/>\r\n                // </ListItem>\r\n            ))}\r\n            <div className=\"button-container\">\r\n                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\"}} startIcon={ <FaChevronLeft />} className=\"prev-btn\" onClick={prevStudent}>\r\n                    Précédent\r\n                </Button>\r\n                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\"}} endIcon={<FaChevronRight />} className=\"next-btn\" onClick={nextStudent}>\r\n                    Suivant\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Avatar, Card, CardContent, CardHeader, Grid, IconButton, List, ListItem, ListItemAvatar, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport MoreVert from '@material-ui/icons/MoreVert';\r\nimport LineChart from './LineChart';\r\nimport LineLabels from './LineLabels';\r\nimport SearchService from \"../services/search.service\";\r\nimport {Paginate} from './Paginate';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\n\r\n\r\n\r\nconst AllStudents = () => {\r\n    const [allStudents, setallStudents] = useState([]);\r\n    const [allQuizzes, setallQuizzes] = useState(null)\r\n    // const [message, setmessage] = useState('');\r\n    const [errorMessage, seterrorMessage] = useState('')\r\n    // const [successful, setsuccessful] = useState(false);\r\n    const [displayQuizzes, setdisplayQuizzes] = useState(null);\r\n    const [displayActiveQuiz, setdisplayActiveQuiz] = useState(false)\r\n    const [displayEvolution, setdisplayEvolution] = useState(false);\r\n    const [displayMain, setdisplayMain] = useState(true);\r\n    const [currentStudent, setcurrentStudent] = useState(null);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n    const [lineArray, setLineArray] = useState([]);\r\n    const [displayLineChart, setDisplayLineChart] = useState(false);\r\n    const [actualQuiz, setactualQuiz] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get( \"https://neuroeducation-feedback.herokuapp.com/api/findAllStudents\")\r\n        .then(res => {\r\n            setallStudents(res.data);\r\n            setShowSpinner(false);\r\n        })\r\n        .catch(error => {\r\n            const resMessage =\r\n            (error.response && error.response.data && error.response.data.message) \r\n            || error.message || error.toString();\r\n  \r\n            seterrorMessage(resMessage);\r\n        });\r\n\r\n    }, [])\r\n\r\n    const getAllQuizzes = (student_id, name) => {\r\n        setcurrentQuiz(null);\r\n        setallQuizzes([]);\r\n        setdisplayQuizzes(null) \r\n        axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\r\n            if((response.data.quizzes).length ){\r\n                setallQuizzes(response.data.quizzes)\r\n                setdisplayQuizzes(true); \r\n            }\r\n            else{\r\n                setallQuizzes(null)\r\n                setdisplayQuizzes(false)  \r\n            }\r\n            setActiveStudent(name);\r\n          })\r\n          .catch(function (err) {\r\n              seterrorMessage(err.response.data.message|| err.response.data.message[0].error);\r\n          });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n      // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index) => {\r\n        setdisplayActiveQuiz(true);\r\n        setcurrentQuiz(quiz);\r\n        let tempLineArray = [];\r\n        quiz.quiz_answers.forEach((quiz, index) => {\r\n            tempLineArray.push(getAllAns(quiz))\r\n        })\r\n        setLineArray(tempLineArray)\r\n\r\n        // GET ACTUAL QUESTIONS FROM DATABASE\r\n        SearchService.searchQuiz(\r\n            quiz.quiz_id,\r\n        ).then(\r\n            response => {\r\n            setactualQuiz(response.data);\r\n            })\r\n            .catch(\r\n            error => {\r\n            //   console.log(error.response);\r\n            const resMessage =\r\n                (error.response && error.response.data && error.response.data.message) \r\n                || error.message || error.toString();\r\n\r\n\r\n            }\r\n        );\r\n  };\r\n\r\n    const setActiveStudent = (name) => {\r\n        setcurrentStudent(name);\r\n    };\r\n\r\n    const backToAllQuizzes = () => {\r\n        setdisplayQuizzes(true);\r\n        setdisplayActiveQuiz(false);\r\n    }\r\n\r\n    const evolution = () => {\r\n        if(displayMain===true && displayEvolution===false){\r\n            setdisplayMain(false); \r\n            setdisplayEvolution(true);\r\n            setDisplayLineChart(true);\r\n        } \r\n        else if(displayMain===false && displayEvolution===true){\r\n            setdisplayMain(true); \r\n            setdisplayEvolution(false);\r\n            setDisplayLineChart(false);\r\n        } \r\n\r\n\r\n    }\r\n\r\n    // CREATE ARRAY CONTAINING ANSWERS OF EACH ATTEMPT\r\n    const getAllAns = quiz => {\r\n        let array = []\r\n        quiz.student_answers.forEach(answers=> {\r\n            switch(answers.answer){\r\n                case \"Non\":\r\n                    array.push(1)\r\n                    break\r\n                case \"Plutot Non\":\r\n                    array.push(2)\r\n                    break\r\n                case \"Plutot Oui\":\r\n                    array.push(3)\r\n                    break\r\n                default:\r\n                    array.push(4)\r\n                    break\r\n            }\r\n        })\r\n        return array\r\n    }\r\n\r\n    //GENERATE DATA VALUES FOR LINE CHART \r\n    const getLineData = (groupArray, index) => {\r\n        let dataArray = []\r\n        groupArray.forEach((item) => {\r\n            dataArray.push(item[index])\r\n        })\r\n        return dataArray\r\n    }\r\n\r\n \r\n \r\n\r\n    return (\r\n    \r\n        <div className=\"container-questions\">\r\n            {errorMessage ? (\r\n                <div className=\"form-group\">\r\n                    <div\r\n                    className={ \"alert alert-danger\"}\r\n                    role=\"alert\"\r\n                    >\r\n                    {errorMessage}\r\n                    </div>\r\n                </div>\r\n            ):(\r\n                <div>\r\n                    {displayMain  && <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                            <Typography\r\n                                style={{textAlign: \"center\", color:\"#4257b2\"}}\r\n                                variant=\"h5\"\r\n                            >\r\n                                {'Liste des étudiants '}\r\n                                <div className=\"underline\"></div>\r\n                            </Typography>\r\n                           \r\n                            {showSpinner && (<div class=\"spinner\">\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>)}\r\n                            {!showSpinner && (<div  class=\"quiz\" style={{borderRadius: \"10px\"}}>\r\n                                    <Paginate \r\n                                        allStudents={allStudents}\r\n                                        getAllQuizzes={getAllQuizzes}\r\n                                        allQuizzes={allQuizzes}\r\n                                        displayQuizzes={displayQuizzes}\r\n                                        setActiveQuiz={setActiveQuiz}\r\n                                        evolution={evolution}\r\n                                    />\r\n                                </div>)}\r\n\r\n                        </div>            \r\n                    </div>\r\n                    }\r\n                    <div>                        \r\n                        {displayLineChart && (\r\n                            <div>\r\n                             <IconButton  onClick={()=>evolution()} style={{float:\"left\", color:\"#4257b2\"}}>\r\n                                <ArrowBackIcon />\r\n                            </IconButton>\r\n                            <Grid container spacing={3}>\r\n                                {(lineArray.length && displayLineChart) && lineArray[0].map((attempt, index) => (\r\n                                    <Grid item md={6} sm={12} lg={4} >\r\n                                        <Card elevation={2}>\r\n                                            <CardHeader\r\n                                                title={<Typography style={{fontSize: \"1rem\"}} color=\"textSecondary\" variant=\"h6\" component=\"p\">{actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)}</Typography>}\r\n                                                subheader={<div style={{fontSize: \"0.8rem\"}}>Oui-4 Plutot Oui-3 Plutot Non-2 Non-1</div>}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <LineChart labels={LineLabels(lineArray.length)} data={getLineData(lineArray, index)} />\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                            </div>\r\n                           \r\n                        )}\r\n                    </div>    \r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllStudents\r\n","import {useState, useEffect} from 'react'\r\nimport AuthService from \"../services/auth.service\";\r\nimport FormCard from './formCard'\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n\r\nconst VerifyAccount = ({match: { params }} ) => {\r\n    const [message, setmessage] = useState('');\r\n    const [successful, setsuccessful] = useState(false);\r\n    const history = useHistory();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        AuthService.verifyAccount(params.token)\r\n        .then(response=>{\r\n            setmessage(response.data.message);\r\n            setsuccessful(true);\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n            setmessage(error.response.data.message|| error.response.data);\r\n            setsuccessful(false);\r\n        })\r\n    }, [params.token])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <FormCard\r\n                content={\r\n                  <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"50px\", paddingBottom:\"60px\", clear: \"both\" }}>\r\n                      <p>{message}</p>\r\n                      <button\r\n                    onClick={() =>  history.push({\r\n                      pathname: \"/login\",\r\n                    })} \r\n                    className=\"btnn\" style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\",\"font-size\" : \"12px\", width: \"44%\"}}\r\n                    >\r\n                      SE CONNECTER\r\n                      </button> \r\n                  </div>\r\n                }/>\r\n              </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerifyAccount\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\r\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n\r\nconst AdminDashboard = () => {\r\n    let history = useHistory(); \r\n    const classes = useStyles();\r\n\r\n\r\n    const routeChange = (path, item) =>{\r\n    let newPath = path;\r\n    if(item===\"DATABASE\"){\r\n        return window.location.href = newPath;\r\n    }\r\n    history.push(newPath);\r\n  }\r\n\r\n  const childRoute = route =>{\r\n    if(route===\"USER\"){\r\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/User'\r\n    }\r\n    else if(route===\"QUIZZES\"){\r\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/Quiz'\r\n    }\r\n    else if(route===\"HISTORY\"){\r\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/history'\r\n    }\r\n  }\r\n\r\n  const dashboardArray = [\r\n      {\r\n        title: \"AJOUTER UN COMPTE\",\r\n        path: '/adminRegister',\r\n        children: [],\r\n        message: \"Ajouter un nouvel administrateur ou enseignant dans la base de données.\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <SupervisorAccountIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n\r\n    {\r\n        title: \"TOUS LES QUIZZ\",\r\n        path: '/questions',\r\n        children: [],\r\n        message: \"Une liste de tous les quiz de la base de données. Visualisez-les tous en quelques clics\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <AssignmentIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },    \r\n    {\r\n        title: \"PAGE RÉPONSES\",\r\n        path: '/answers',\r\n        children: [],\r\n        message: \"Un historique de toutes les réponses des élèves dans la base de données. Tout visualiser en quelques clics\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <RecentActorsIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n    {\r\n        title: \"EVOLUTION\",\r\n        path: '/students',\r\n        children: [],\r\n        message: \"En tant qu'administrateur ou enseignant, vous pouvez visualiser les progrès de tous les élèves en quelques clics.\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <TrackChangesIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n    // {\r\n    //     title: \"DASHBOARD\",\r\n    //     path: '/dashboard',\r\n    //     children: [],\r\n    //     message: \"A link to the admin dashboard where you can see everything\",\r\n    //     actions : {\r\n    //         one: \"Share\",\r\n    //         two: \"Learn More\"\r\n    //     },\r\n    //     icon: <DashboardIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    // },\r\n    {\r\n        title: \"BASE DE DONNEES\",\r\n        path: 'https://neuroeducation-feedback.herokuapp.com/admin/',\r\n        children: ['USER', 'QUIZZES', 'HISTORY'],\r\n        message: \"Il s'agit d'une page spéciale pour l'administrateur. Pour la gestion de la base de données.\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <StorageIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n        <div className=\"col-xs-12 col-sm-12 col-md-12\" style={{paddingTop: \"60px\"}}>\r\n            <div className=\"row\">\r\n                {dashboardArray && dashboardArray.map(item => (\r\n                    <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"> \r\n                        <Card className={classes.root} style={{height:235, padding: \"20px\", \"margin-bottom\": \"10px\"}}>\r\n                            <CardActionArea>\r\n                                <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n                                    <Typography variant=\"h6\" style={{color:\"#4257b2\"}}>{item.title} <div className=\"underlinee\"></div></Typography>\r\n                                    {item.icon}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {item.message}\r\n                                </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions >\r\n                                {item.title=== ( \"BASE DE DONNEES\") ? (\"\") : \r\n                                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\"}} onClick={()=>routeChange(item.path, item.title)}>\r\n                                GO TO\r\n                                </Button>\r\n                                }\r\n\r\n                                {item.children && item.children.map(child=> (\r\n                                    <Button \r\n                                    size=\"small\" \r\n                                    style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\", width: \"45%\"}} \r\n                                    onClick={()=>childRoute(child)}>\r\n                                        {child}\r\n                                    </Button>\r\n                                 ))\r\n                                }\r\n                            </CardActions>\r\n                        </Card>\r\n                    </div>\r\n                ))\r\n   }\r\n            </div>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import React from 'react';\r\nimport { Link} from \"react-router-dom\";\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n// import HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n      // style={{background:\"#e6e6d5\"}}\r\n    >\r\n\r\n    <List style={{\"paddingTop\": \"30px\", background: \"#4257b2\"}}>\r\n        <ListItem button key={\"home\"} style={{color: 'white'}}>\r\n            <ListItemIcon> <MenuIcon style={{color: 'white'}}fontsize=\"large\"/></ListItemIcon>\r\n            <ListItemText primary={\"MENU\"} />   \r\n          </ListItem>\r\n \r\n      </List>\r\n      <List >\r\n        {props.lists && (props.lists).map((text, index) => (\r\n         <Link to={text.link} style={{color: '#4257b2', textDecoration: 'none'}}>   \r\n          <ListItem button key={text.title}>\r\n            <ListItemIcon>{text.icon}</ListItemIcon>\r\n            <ListItemText primary={text.title} />   \r\n          </ListItem>\r\n         </Link> \r\n        ))}\r\n      </List>\r\n      {/* <Divider /> */}\r\n      <List style={{position: \"absolute\",bottom: 0}}>\r\n        {props.actions.map((text, index) => (\r\n         <Link to={text.link} onClick={text.onclick} style={{color: '#4257b2', textDecoration: 'none'}}>   \r\n            <ListItem button key={text.title}>\r\n                <ListItemIcon>{text.icon}</ListItemIcon>\r\n                <ListItemText primary={text.title} />   \r\n            </ListItem>\r\n        </Link>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div >\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}><MenuIcon style={{color:\"white\",  float:\"left\"}} fontSize=\"large\"></MenuIcon></Button>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)} style={{background:\"#e6e6d5\"}}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Home2 from \"./components/home2.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport PostSubmitForm from \"./components/postSubmitForm.component\";\r\nimport AllAnswers from \"./components/all-answers.component\";\r\nimport AllQuestions from './components/allquestions.component';\r\nimport AdminRegister from \"./components/admin-register.component\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport ProtectedRoute from \"./components/protected-routes.component\";\r\nimport AllStudents from \"./components/all-students.component\";\r\nimport VerifyAccount from \"./components/verify-account.component\";\r\nimport AdminDashboard from \"./components/Admin/admin-dashboard\";\r\nimport TemporaryDrawer from \"./components/navbar\";\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n\r\nconst theme = createMuiTheme({\r\n  palette:{\r\n    primary: {\r\n      main: \"#DCDCDC\"\r\n    }\r\n  }\r\n})\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showAdminBoard: false,\r\n      showTeacherBoard: false,\r\n      currentUser: undefined,\r\n      admin:[\"ROLE_ADMIN\"],\r\n      adminTeacher:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\"],\r\n      allUsers:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\" , \"ROLE_STUDENT\"],\r\n      studentAdmin: [\"ROLE_STUDENT\", \"ROLE_ADMIN\"]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    \r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showAdminBoard: user.message.roles.includes(\"ROLE_ADMIN\"),\r\n        showTeacherBoard: user.message.roles.includes(\"ROLE_TEACHER\"),\r\n        navList : [\r\n        (user && !user.message.roles.includes(\"ROLE_TEACHER\")) && {\r\n          title : \"Utilisateur\",\r\n          link : '/user',\r\n          icon: <FindInPageIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\") ) && {\r\n          title : \"Ajouter un Quiz\",\r\n          link : '/addQuiz',\r\n          icon: <AddBoxIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {\r\n          title : \"Page Questions\",\r\n          link : '/questions',\r\n          icon: <SupervisorAccountIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {            \r\n          title : \"Page Reponses\",\r\n          link : '/answers',\r\n          icon: <AssignmentIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        (user.message.roles.includes(\"ROLE_ADMIN\") || user.message.roles.includes(\"ROLE_TEACHER\"))  && {            \r\n          title : \"Page Etudiants\",\r\n          link : '/students',\r\n          icon: <RecentActorsIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        user.message.roles.includes(\"ROLE_ADMIN\")  && {\r\n          title : \"Admin Dashboard\",\r\n          link : '/dashboard',\r\n          icon: <DashboardIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        }\r\n\r\n        \r\n      ],\r\n      actions : [user &&  {\r\n          title : (user.message.firstname),\r\n          link : '/profile',\r\n          onclick : '',\r\n          icon: <AccountCircleIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        },\r\n        user &&  {\r\n          title : \"Deconnexion\",\r\n          link : '/home',\r\n          onclick : this.logOut,\r\n          icon: <ExitToAppIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n        }\r\n      ]\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n    this.setState({\r\n      currentUser: undefined,\r\n      showAdminBoard: false,\r\n      showTeacherBoard: false\r\n    })\r\n    if (!this.state.currentUser) {  \r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, admin, adminTeacher, allUsers, studentAdmin, navList } = this.state;\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark \" style={{background:'#4257b2'}}>\r\n            \r\n            {currentUser && \r\n              <TemporaryDrawer lists = {navList} actions={this.state.actions}></TemporaryDrawer>\r\n              }\r\n\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n              Outsmarted\r\n            </Link>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/profile\"} className=\"nav-link\">\r\n                    <Button color=\"primary\" style={{textTransform: \"none\"}}><AccountCircleIcon style={{color:\"white\",  float:\"right\"}} fontSize=\"large\" />{currentUser.message.firstname}</Button>\r\n                  </Link>\r\n                </li>\r\n\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\">\r\n                    <Button color=\"primary\" style={{textTransform: \"none\"}}>Se Connecter</Button>\r\n                  </Link>\r\n                </li>\r\n                \r\n\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\">\r\n                    <Button color=\"primary\" style={{textTransform: \"none\", font:\"Robotto\"}}>Créer un Compte</Button>\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            )}\r\n\r\n            </nav>\r\n\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home2} />\r\n                <Route exact path=\"/home\" component={Home2} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                <Route exact path=\"/verifyAccount/:token\" component={VerifyAccount} />\r\n                <Route exact path=\"/postSubmitForm\" component={PostSubmitForm}/>\r\n                <ProtectedRoute exact path=\"/adminRegister\" component={AdminRegister} role={admin}/>\r\n                <ProtectedRoute exact path=\"/profile\" component={Profile} role={allUsers}/>\r\n                <ProtectedRoute exact path=\"/user\" component={BoardUser} role={studentAdmin}/>\r\n                <ProtectedRoute exact path=\"/questions\" component={AllQuestions} role={adminTeacher}/>\r\n                <ProtectedRoute exact path=\"/answers\" component={AllAnswers} role={adminTeacher}/>\r\n                <ProtectedRoute exact path=\"/students\" component={AllStudents} role={allUsers}/>\r\n                <ProtectedRoute exact path=\"/addQuiz\" component={BoardAdmin} role={adminTeacher}/>\r\n                <ProtectedRoute exact path=\"/dashboard\" component={AdminDashboard} role={admin}/>\r\n                <ProtectedRoute  component={Home} />\r\n              </Switch>\r\n            </div>\r\n\r\n\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n\r\n  }\r\n    \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// serviceWorker.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}