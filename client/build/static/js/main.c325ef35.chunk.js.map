{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","components/home.component.js","components/home2.component.js","components/modifyPassword.component.js","components/profile.component.js","services/search.service.js","components/board-user.component.js","services/admin-submit-form.js","components/board-admin.component.js","components/postSubmitForm.component.js","components/BarChart.js","components/DoughnutChart.js","components/all-answers.component.js","components/allquestions.component.js","components/admin-register.component.js","components/protected-routes.component.js","components/all-students.component.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","email","password","axios","post","then","response","console","log","data","token","localStorage","setItem","JSON","stringify","removeItem","firstname","lastname","password_confirmation","roles","old_password","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vlastname","vfirstname","vpassword","vpasswordConfirmation","Register","handleRegister","onChangeFirstname","onChangeLastname","onChangePasswordConfirmation","successful","register","Home","content","Home2","title","description","textAlign","marginTop","height","width","borderRadius","src","alt","ModifyPassword","useState","oldPw","setOldPw","newPw","setNewPw","confirmNewPw","setConfirmNewPw","setmessage","setsuccessful","userEmail","placeholder","onClick","oldPass","newPass","confirmPass","changePassword","res","catch","errMessage","Profile","currentUser","getCurrentUser","substring","substr","_id","map","index","id","get","answers","vsearch","BoardUser","search","setsearch","seterrorMessage","currentQuiz","setcurrentQuiz","radioOptions","setradioOptions","checkedItems","setCheckedItems","allQuizzes","setallQuizzes","displayAllAnswered","setdisplayAllAnswered","useEffect","student_id","err","checkRadioButton","question_id","label","setradio","answer","checkedArray","x","find_question","find","a","question_answer_id","explanation","SearchService","searchQuiz","quiz","setActiveQuiz","quiz_id","questions","indexx","question_title","checked","question_options","options","options_id","option_text","setCheckbox","options_text","timestamp","Date","now","formatedTimestamp","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","quiz_answers","student_answers","time_submitted","created_by","StyledButtonAddExplanation","withStyles","root","background","border","color","padding","boxShadow","margin","textTransform","Button","StyledButtonAddQuestion","StyledButtonDelExplanation","StyledButtonDelQuestion","StyledButtonSubmit","MyForm","onChangeQuestion","onClickAddExplanation","explanations","onQuestionChange","indexExplanation","onExplanationChange","onRemoveExplanationClick","onAddExplanationClick","element","onChangeExplanation","autoComplete","variant","onClickRemoveExplanation","question","createExplanationUI","BoardAdmin","onClickAddQuestion","onChangeTitle","handleSubmit","undefined","submitted","quizMdp","user","indexQuestion","alphabet","String","fromCharCode","prevState","splice","PostForm","submit","handleQuestionChange","onTitleChange","handleTitleChange","handleExplanationChange","handleAddExplanationClick","handleRemoveExplanationClick","onClickDelQuestion","to","pathname","createQuestionUI","PostSubmitForm","BarChart","names","explanationArray","explanationLabels","explanationValues","barData","labels","datasets","backgroundColor","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","legend","tooltips","callbacks","item","displayColors","DoughnutChart","answerValues","pieData","AllAnswers","allAnswers","setallAnswers","array","setarray","answersArray","setanswersArray","explanationsArray","setexplanationsArray","currentStudent","setcurrentStudent","explanationStats","setexplanationStats","showSpinner","setShowSpinner","allQuestions","setAllQuestions","allExplanations","setAllExplanations","setPieData","setBarData","Axios","handlePieChartChange","handleBarChartChange","getStats","getExplanationValues","keys","values","forEach","key","getAnswerValues","getLabels","object","Object","class","List","ListItem","button","ListItemIcon","ListItemText","primary","quiz_title","students","student","marginBottom","disableElevation","arrayAns","mergeAllStudentsByIndex","i","arrayExp","mergeAllExplanation","countAnswers","all","filter","labelsArray","countExplanations","b","d","letter","Container","Grid","container","spacing","sm","md","lg","Card","elevation","CardHeader","action","IconButton","subheader","CardContent","AllQuestions","vusername","AdminRegister","onChangeCheckbox","admin","teacher","noRoleError","mdpTmp","adminRegister","ProtectedRoute","component","isAuthenticated","isAuthorized","includes","AllStudents","allStudents","setallStudents","displayQuizzes","setdisplayQuizzes","displayActiveQuiz","setdisplayActiveQuiz","displayEvolution","setdisplayEvolution","displayMain","setdisplayMain","setActiveStudent","evolution","quizzes","ListItemAvatar","Avatar","toUpperCase","idx","theme","createMuiTheme","palette","main","App","logOut","showAdminBoard","showTeacherBoard","adminTeacher","allUsers","logout","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c325ef35.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n\r\nclass AuthService {\r\n  login(email, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        email,\r\n        password\r\n      })\r\n      .then(response => {\r\n        console.log(response.data);\r\n\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(firstname, lastname, email, password, password_confirmation) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      firstname, \r\n      lastname, \r\n      email, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  adminRegister(firstname, lastname, email, roles) {\r\n    return axios\r\n    .post(API_URL + \"signup\", {\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      roles\r\n    });\r\n  }\r\n\r\n  changePassword(email, old_password, password, password_confirmation) {\r\n    return axios\r\n    .post(API_URL + \"changePassword\", {\r\n      email, \r\n      old_password, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.email, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n            \r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email de l'utilisateur</label>\r\n              <Input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Mot de passe</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Se connecter</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vlastname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vfirstname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le mot de passe doit contenir entre 6 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst vpasswordConfirmation = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangePasswordConfirmation = this.onChangePasswordConfirmation.bind(this);\r\n\r\n    this.state = {\r\n      lastname: \"\",\r\n      firstname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  // onChangeUsername(e) {\r\n  //   this.setState({\r\n  //     username: e.target.value\r\n  //   });\r\n  // }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePasswordConfirmation(e) {\r\n    this.setState({\r\n      password_confirmation: e.target.value\r\n    });\r\n  }\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.password_confirmation,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: \"Compte crée avec succès\",\r\n            successful: true\r\n          });\r\n\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n          console.log(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"firstname\">Prenom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"firstname\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangeFirstname}\r\n                    validations={[required, vfirstname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"lastname\">Nom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"lastname\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangeLastname}\r\n                    validations={[required, vlastname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password_confirmation\">Confirmer Mot de passe</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password_confirmation\"\r\n                    value={this.state.password_confirmation}\r\n                    onChange={this.onChangePasswordConfirmation}\r\n                    validations={[required, vpasswordConfirmation]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Créer le compte</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // UserService.getPublicContent().then(\r\n    //   response => {\r\n    //     this.setState({\r\n    //       content: response.data.body\r\n    //     });\r\n    //   },\r\n    //   error => {\r\n    //     this.setState({\r\n    //       content:\r\n    //         (error.response && error.response.data) ||\r\n    //         error.message ||\r\n    //         error.toString()\r\n    //     });\r\n    //   }\r\n    // );\r\n    this.setState({\r\n      content: \"Bienvenue dans votre application de Neuroéducation\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      title: \"Bienvenue dans votre application de Neuroéducation\",\r\n      description: \"Cette application permet aux élèves de prendre conscience de leurs stratégies de réussite et des potentielles origines de leurs erreurs\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <header className=\"jumbotron\">\r\n                    <h3>{this.state.title}</h3>\r\n                </header>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h5>{this.state.description}</h5>\r\n                <div style={{textAlign: \"center\", marginTop: \"20px\"}}>\r\n                  <img style={{height: \"500px\", width: \"500px\", borderRadius: \"10px\"}} src=\"/brain-storming.png\" alt=\"students brainstorming\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}","import {useState} from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\n// import CheckButton from \"react-validation/build/button\";\r\n// import React, { Component } from \"react\";\r\n\r\nimport AuthService from '../services/auth.service'\r\n\r\n\r\n\r\n// const currentPassword = \"\"\r\n\r\n\r\n// const required = (value) => {\r\n//     if (!value) {\r\n//         return (\r\n//             <div className=\"alert alert-danger\" role=\"alert\">\r\n//                 Ce champ est obligatoire !\r\n//             </div>\r\n//         );\r\n//     }\r\n// };\r\n\r\n// const vpassword = value => {\r\n//     if (value.length < 6 || value.length > 50) {\r\n//       return (\r\n//         <div className=\"alert alert-danger\" role=\"alert\">\r\n//           Le mot de passe doit contenir entre 6 et 50 charactères.\r\n//         </div>\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const vpasswordConfirmation = value => {\r\n//     if (value !== newPw) {\r\n//       return (\r\n//         <div className=\"alert alert-danger\" role=\"alert\">\r\n//           Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n//         </div>\r\n//       );\r\n//     }\r\n//   };\r\n\r\nconst ModifyPassword = (props) =>{\r\n    const [oldPw, setOldPw] = useState('')\r\n    const [newPw, setNewPw] = useState('')\r\n    const [confirmNewPw, setConfirmNewPw] = useState('')\r\n    const [message, setmessage] = useState('');\r\n    const [successful, setsuccessful] = useState(false);\r\n    const [userEmail] = useState(props.email)\r\n\r\n    const ApplyModifications =(email,oldPass, newPass, confirmPass) => {\r\n        console.log(email)\r\n        setmessage('');\r\n        setsuccessful(false);\r\n        AuthService.changePassword(email, oldPass, newPass, confirmPass)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            setmessage(\"Password Successfully Changed\");\r\n            setsuccessful(true);\r\n        })\r\n        .catch((error) =>{\r\n            const errMessage =\r\n              (error.response.data.message[0].password || (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message)) ||\r\n              error.message ||\r\n              error.toString();\r\n              console.log(errMessage);\r\n            setmessage(errMessage);\r\n            setsuccessful(false);\r\n        })\r\n    }\r\n\r\n\r\n\r\nreturn (\r\n    <div className=\"card card-container\">\r\n        \r\n        <strong>Changement de mot de passe</strong>\r\n        <Form>\r\n        <label name=\"oldPw\">Ancien mot de passe</label>\r\n        <Input name=\"oldPw\" value={oldPw} placeholder=\"******\" onChange={(e) => setOldPw(e.target.value)} />\r\n        <label name=\"newPw\">Nouveau mot de passe</label>\r\n        <Input name=\"newPw\" value={newPw} placeholder=\"******\" onChange={(e) => setNewPw(e.target.value)} />\r\n        <label name=\"confirmNewPw\">Confirmer le nouveau mot de passe</label>\r\n        <Input name=\"confirmNewPw\" value={confirmNewPw} placeholder=\"******\" onChange={(e) => setConfirmNewPw(e.target.value)} />\r\n        {/* <CheckButton\r\n            style={{ display: \"none\" }}\r\n            ref={c => {\r\n            Component.checkBtn = c;\r\n            }}\r\n        /> */}\r\n        </Form>\r\n        <button className=\"btnn\" onClick={() => ApplyModifications(userEmail,oldPw,newPw,confirmNewPw)}>Confirmer</button>\r\n\r\n        {message && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\r\n                successful\r\n                  ? \"alert alert-success\"\r\n                  : \"alert alert-danger\"\r\n              }\r\n              role=\"alert\"\r\n            >\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n    </div>\r\n);\r\n}\r\n\r\n\r\n\r\nexport default ModifyPassword;\r\n","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport ModifyPassword from \"./modifyPassword.component\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser()\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n          Profile : <strong>{currentUser.message.firstname}{' '}{currentUser.message.lastname}</strong> \r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.token.substring(0, 20)} ...{\" \"}\r\n          {currentUser.token.substr(currentUser.token.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.message._id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.message.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.message.roles &&\r\n            currentUser.message.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n        <ModifyPassword email={currentUser.message.email}/>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n// const API_URL = \"http://localhost:5050/api/${id}\";\r\n\r\n\r\nclass SearchService {\r\n\r\n  searchQuiz(id) {\r\n    return axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${id}`, {\r\n      \r\n    });\r\n  }\r\n\r\n  submitAnswers(answers){\r\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n        answers\r\n      })\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new SearchService();\r\n","import React from \"react\";\r\nimport SearchService from \"../services/search.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vsearch = value => {\r\n  if (value.length < 6) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 6 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst BoardUser = () => {\r\n  const [search, setsearch] = useState('');\r\n  const [successful, setsuccessful] = useState(false);\r\n  const [message, setmessage] = useState('');\r\n  const [errorMessage, seterrorMessage] = useState('');\r\n  const [currentQuiz, setcurrentQuiz] = useState(null);\r\n  const [radioOptions, setradioOptions] = useState({})\r\n  const [checkedItems, setCheckedItems] = useState([]); \r\n  const [currentUser] = useState(AuthService.getCurrentUser()) ;\r\n  const [allQuizzes, setallQuizzes] = useState([]);\r\n  const [displayAllAnswered, setdisplayAllAnswered] = useState(false);\r\n\r\n\r\n  // LOAD ALL QUIZZES ANSWERED BY CURRENT STUDENT FROM DATABASE \r\n  //ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n  useEffect(() => {\r\n    const student_id = currentUser.message.email;\r\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\r\n      console.log(response.data);\r\n      setallQuizzes(response.data) \r\n    })\r\n    .catch(function (err) {\r\n        seterrorMessage(err.response.data.message|| err.response.data.message[0].error);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  // SET SELECTED(CLICKED) QUIZ\r\n  const setActiveQuiz = (quiz, index) => {\r\n    console.log(quiz)\r\n    // setcurrentQuiz(quiz);\r\n    // setcurrentIndex(index)\r\n  };\r\n\r\n  const onChangeSearch = (e) =>{\r\n    setsearch(e.target.value)\r\n  }\r\n\r\n  // RETURN CHECKED VALUE(true or false)\r\n  const checkRadioButton = (question_id, label) => {\r\n      if (!radioOptions[question_id]) {\r\n          return false;\r\n      }\r\n      return radioOptions[question_id] === label;\r\n  }\r\n\r\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n    const setradio = (id , answer) => {\r\n      let checkedArray = checkedItems.map(x => {return {...x}})\r\n      const find_question = checkedArray.find(a => a.question_answer_id === id);\r\n      console.log(find_question)\r\n      if(find_question) {\r\n          checkedArray.find(a => a.question_answer_id === id).answer = answer;\r\n          setradioOptions((state) => {\r\n              console.log(state);\r\n              return {\r\n                  ...state,\r\n                  [id] : answer\r\n              }\r\n          });\r\n          setCheckedItems(checkedArray);\r\n      }\r\n      else{\r\n      setradioOptions((state) => {\r\n          console.log(state);\r\n          return {\r\n              ...state,\r\n              [id] : answer\r\n          }\r\n      });\r\n\r\n      setCheckedItems([\r\n          ...checkedItems,\r\n           {\r\n              question_answer_id : id,\r\n              answer: answer,\r\n              explanation: 'no explanation'\r\n          }\r\n      ]);}\r\n  }\r\n\r\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n      let checkedArray = checkedItems.map(x => {return {...x}})\r\n      const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n      console.log(find_question)\r\n      if(find_question) {\r\n          checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n          setCheckedItems(checkedArray);\r\n      }\r\n      \r\n  }\r\n\r\n  // SUBMIT ANSWERS TO THE BACKEND\r\n  const submitAnswers = () =>{\r\n    setmessage(\"\");\r\n    setsuccessful(false);\r\n    setdisplayAllAnswered(false);\r\n    const timestamp = Date.now(); // This would be the timestamp you want to format\r\n    const formatedTimestamp = new Intl.DateTimeFormat('en-US', {year: 'numeric',\r\n                              month: '2-digit',day: '2-digit', hour: '2-digit', \r\n                              minute: '2-digit', second: '2-digit'}).format(timestamp);\r\n    console.log(new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',\r\n                day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'})\r\n                .format(timestamp));\r\n    const answers = {\r\n        quiz_id : currentQuiz.quiz_id,\r\n        quiz_answers : {\r\n            student_id : currentUser.message.email,\r\n            student_answers : checkedItems,\r\n            time_submitted : formatedTimestamp,\r\n        }\r\n    }\r\n    console.log(\"Radio Answer: \", radioOptions);\r\n    console.log(\"CheckedItems: \", checkedItems);\r\n    console.log(\"Final: \", answers);\r\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n        answers\r\n      }).then((res) => {\r\n          console.log(res);\r\n          if(res){\r\n              //   window.location.reload(false);\r\n              setcurrentQuiz(null);\r\n              setCheckedItems([]);\r\n              setradioOptions({});\r\n              setallQuizzes([...allQuizzes, answers])\r\n              setmessage('Answers Submitted');\r\n              setsuccessful(true);\r\n              setdisplayAllAnswered(true);\r\n              \r\n          }\r\n      }).catch(err => {\r\n          setcurrentQuiz(null)  \r\n          setsuccessful(false);\r\n          console.log(err.response.data.message|| err.response.data.message[0].error);   \r\n          setmessage(err.response.data.message|| err.response.data.message[0].error);\r\n                 \r\n      });\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    setmessage(\"\");\r\n    setsuccessful(false);\r\n    setdisplayAllAnswered(false);\r\n\r\n    // this.form.validateAll();\r\n\r\n    SearchService.searchQuiz(\r\n      search,\r\n    ).then(\r\n      response => {\r\n        console.log(response);\r\n        setsuccessful(true);\r\n        setcurrentQuiz(response.data);\r\n      })\r\n      .catch(\r\n      error => {\r\n        console.log(error.response);\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) \r\n          || error.message || error.toString();\r\n\r\n        setmessage(resMessage);\r\n        setsuccessful(false);\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\nreturn (\r\n<div>\r\n  <div className=\"row\">\r\n    <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n    <div className={!successful || message ? \"card card-container\" : \"\"}>\r\n        {(!successful || displayAllAnswered)  && (\r\n          <div >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"search\">Search for Quiz</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"search\"\r\n                value={search}\r\n                onChange={onChangeSearch}\r\n                validations={[required, vsearch]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button className=\"btn btn-primary btn-block\"  onClick={handleSearch}>Search Quiz</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {message && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\r\n                successful\r\n                  ? \"alert alert-success\"\r\n                  : \"alert alert-danger\"\r\n              }\r\n              role=\"alert\"\r\n            >\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      </div>\r\n\r\n      <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n    <div className={!successful || message ? \"card card-container\" : \"\"}>\r\n        {(displayAllAnswered || !successful )  && allQuizzes && (\r\n          <div >\r\n            <h4>Quizzes Already Answered</h4>\r\n            <div className={`quiz`} >\r\n                {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                    <h4 \r\n                    onClick= {() => setActiveQuiz(quiz, index)}\r\n                    > {quiz.quiz_id} \r\n                    </h4>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n      </div>\r\n      </div>\r\n      </div>\r\n\r\n\r\n      <div >\r\n      {currentQuiz && (\r\n        <div className=\"container-questions\"> \r\n          <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n          {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n            <div key={questions.question_id}>\r\n              <h4>{questions.question_id}{'. '}{questions.question_title}</h4>    \r\n              <div>\r\n                  <input \r\n                      className=\"input\"\r\n                      type=\"radio\" \r\n                      value=\"Oui\" \r\n                      checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                      onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                  /> Oui\r\n                  <input \r\n                      className=\"input\"\r\n                      type=\"radio\" \r\n                      value=\"Plutot Oui\"  \r\n                      checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                      onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                  /> Plutot Oui\r\n                  <input\r\n                      className=\"input\" \r\n                      type=\"radio\" \r\n                      value=\"Plutot Non\"  \r\n                      checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                      onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                  /> Plutot Non\r\n                  <input\r\n                      className=\"input\" \r\n                      type=\"radio\" \r\n                      value=\"Non\" \r\n                      checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                      onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                  /> Non\r\n              </div>\r\n\r\n              {radioOptions[questions.question_id] === \"Plutot Non\"\r\n              || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n              || radioOptions[questions.question_id] === \"Non\" ? (\r\n                <div>\r\n                  {questions.question_options && questions.question_options.map((options, index) => ( \r\n                    <div>\r\n                      <label>\r\n                        <input type=\"checkbox\" value={options.options_id} \r\n                        checked={checkedItems[options.option_text]}  \r\n                        onChange={(e) => \r\n                            setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                        }\r\n                        />\r\n                        <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (<span>No Explanation Needed</span>)}\r\n            </div>\r\n          ))}\r\n          <div className=\"form-group\">\r\n            <button className=\"btnn\" onClick={submitAnswers}>Submit Answers</button>\r\n          </div>\r\n        </div>\r\n          )\r\n        }\r\n      </div>\r\n\r\n</div>\r\n    );\r\n  }\r\n\r\n  export default BoardUser","import axios from \"axios\";\r\n\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\r\n// const API_URL = \"http://localhost:5050/api/postform/\";\r\n\r\nclass PostForm {\r\n    submit(title, created_by, questions) {\r\n        return axios\r\n            .post(API_URL + \"submit\", {\r\n                title,\r\n                created_by,\r\n                questions\r\n            })\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport default new PostForm();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PostForm from \"../services/admin-submit-form\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\n// Here is 5 constants related to the visual of our custom button\r\nconst StyledButtonAddExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonAddQuestion = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #00BCFF 30%, #5355FF 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF8700 30%, #FF1E1E 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelQuestion = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF1D1D 30%, #4C4C4C 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonSubmit = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #11FF00 30%, #00FF82 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass MyForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.onChangeQuestion = this.onChangeQuestion.bind(this);\r\n    this.onClickAddExplanation = this.onClickAddExplanation.bind(this);\r\n\r\n    this.state = {\r\n      explanations: false\r\n    };\r\n  }\r\n\r\n  onChangeQuestion(e){\r\n    this.props.onQuestionChange(e.target.value);\r\n  }\r\n\r\n  onChangeExplanation(indexExplanation, e){\r\n    this.props.onExplanationChange(indexExplanation, e.target.value)\r\n  }\r\n\r\n  onClickRemoveExplanation(indexExplanation){\r\n    this.props.onRemoveExplanationClick(indexExplanation);\r\n  }\r\n\r\n  onClickAddExplanation(){\r\n    this.props.onAddExplanationClick();\r\n    this.setState({\r\n      explanations: true\r\n    });\r\n  }\r\n  \r\n  createExplanationUI(){\r\n    return(\r\n      <div>\r\n          {this.props.explanations ?(this.props.explanations.map((element, indexExplanation) =>\r\n            <div>\r\n              <div key={indexExplanation} className=\"form-group\">\r\n                <label htmlFor=\"explanation\">Explication</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"explanation\"\r\n                    value = {element.options_text||''}\r\n                    onChange = {this.onChangeExplanation.bind(this, indexExplanation)}\r\n                    validations = {[required]}\r\n                    autoComplete = \"off\"\r\n                  />\r\n              </div>\r\n\r\n              <StyledButtonDelExplanation \r\n                variant = \"contained\" onClick = {this.onClickRemoveExplanation.bind(this, indexExplanation)}>Supprimer cette explication\r\n              </StyledButtonDelExplanation>\r\n\r\n\r\n            </div>\r\n            )) : (<h3>No Explanation props</h3>)\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const question = this.state.question;\r\n\r\n    return (\r\n      <div>\r\n        <Form>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"question\"><strong>Question</strong></label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"question\"\r\n              value = {question}\r\n              onChange = {this.onChangeQuestion}\r\n              validations = {[required]}\r\n              autoComplete = \"off\"\r\n            />\r\n          </div>\r\n\r\n          <StyledButtonAddExplanation\r\n            variant = \"contained\" onClick = {this.onClickAddExplanation}>Ajouter une explication\r\n          </StyledButtonAddExplanation>\r\n          \r\n          {\r\n            this.state.explanations &&\r\n              this.createExplanationUI()\r\n          }\r\n\r\n        </Form>\r\n\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClickAddQuestion = this.onClickAddQuestion.bind(this);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.state = {\r\n      title: '',\r\n      created_by: '',\r\n      questions: [\r\n        {\r\n          question_id: '',\r\n          question_title: '',\r\n          question_options: []\r\n        }\r\n      ],\r\n      message: '',\r\n      currentUser: undefined,\r\n      submitted: false,\r\n      quizMdp:''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleQuestionChange(indexQuestion, question){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_title = question;\r\n    questions[indexQuestion].question_id = indexQuestion+1;\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleExplanationChange(indexQuestion, indexExplanation, explanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options[indexExplanation].options_text = explanation;\r\n    \r\n    let alphabet = String.fromCharCode(96 + (indexExplanation+1));\r\n    questions[indexQuestion].question_options[indexExplanation].options_id = alphabet;\r\n    \r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  onChangeTitle(e){\r\n    let title = e.target.value;\r\n    this.setState({\r\n      title\r\n    });\r\n  }\r\n\r\n  onClickAddQuestion(){\r\n    this.setState(\r\n      prevState => ({questions : [...prevState.questions,        \r\n        {\r\n        question_title: '',\r\n        question_options: []\r\n      }]})\r\n    );\r\n  }\r\n\r\n  handleAddExplanationClick(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.push({options_text : ''});\r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  handleRemoveExplanationClick(indexQuestion, indexExplanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.splice(indexExplanation, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  onClickDelQuestion(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions.splice(indexQuestion, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleSubmit(){\r\n\r\n    const { currentUser} = this.state;\r\n\r\n    PostForm.submit(this.state.title, currentUser.message.email, this.state.questions).then(\r\n      (response) => {\r\n        // this.props.history.push({\r\n        //   pathname: \"/postSubmitForm\",\r\n        //   state:{quizMdp: response.quizMdp}\r\n        // })\r\n        // window.location.reload();\r\n       console.log(response);\r\n        this.setState({\r\n          message: 'Quiz submitted',\r\n          submitted: true,\r\n          quizMdp:response.quizMdp\r\n        });\r\n      },\r\n      error => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        this.setState({\r\n          message: resMessage,\r\n          questions: [\r\n            {\r\n              question_title: '',\r\n              question_options: []\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  createQuestionUI(){\r\n\r\n    return(this.state.questions.map((element, indexQuestion) => \r\n      <div className=\"questionContainer\">\r\n        <div className=\"container\" key={indexQuestion}>\r\n          <MyForm \r\n            onQuestionChange = {this.handleQuestionChange.bind(this, indexQuestion)}\r\n            onTitleChange = {this.handleTitleChange}\r\n            onExplanationChange = {this.handleExplanationChange.bind(this, indexQuestion)}\r\n            onAddExplanationClick = {this.handleAddExplanationClick.bind(this, indexQuestion)}\r\n            onRemoveExplanationClick = {this.handleRemoveExplanationClick.bind(this, indexQuestion)}\r\n            explanations = {this.state.questions[indexQuestion].question_options}\r\n          />\r\n          <div className=\"delQuestion\">\r\n            <StyledButtonDelQuestion\r\n              variant = \"contained\" onClick = {this.onClickDelQuestion.bind(this, indexQuestion)}>Supprimer cette question\r\n            </StyledButtonDelQuestion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  // Pourrait être utile plus tard donc je met de coté (deprecated)\r\n  // componentDidMount() {\r\n  //   UserService.getAdminBoard().then(\r\n  //     response => {\r\n  //       this.setState({\r\n  //         content: response.data\r\n  //       });\r\n  //     },\r\n  //     error => {\r\n  //       this.setState({\r\n  //         content:\r\n  //           (error.response &&\r\n  //             error.response.data &&\r\n  //             error.response.data.message) ||\r\n  //           error.message ||\r\n  //           error.toString()\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n\r\n    const title = this.state.title;\r\n\r\n    // redirect to post/SubmitForm\r\n    if(this.state.submitted===true){\r\n      return <Redirect to={{ pathname: \"/postSubmitForm\", state: { quizMdp: this.state.quizMdp } }} />\r\n    }\r\n\r\n    return (\r\n      <div className=\"mainTeacherForm\">\r\n        <div>\r\n\r\n          <div className=\"container\">\r\n            <header className=\"jumbotron\">\r\n              <h3>Création de nouvelles questions</h3>\r\n            </header>\r\n          </div>\r\n\r\n          <Form>\r\n            <div className=\"container\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"form-title\"><strong>Titre du formulaire</strong></label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"form-title\"\r\n                    value = {title}\r\n                    onChange = {this.onChangeTitle}\r\n                    validations = {[required]}\r\n                    autoComplete = \"off\"\r\n                  />\r\n              </div>\r\n            </div>\r\n\r\n\r\n            {this.createQuestionUI()}\r\n\r\n\r\n            <div className=\"container\">\r\n              <br></br>\r\n              <StyledButtonAddQuestion\r\n                  variant = \"contained\" onClick = {this.onClickAddQuestion}>Ajouter une question\r\n              </StyledButtonAddQuestion>\r\n              <br></br><br></br>\r\n              <StyledButtonSubmit\r\n                variant = \"contained\" onClick = {this.handleSubmit}>Valider\r\n              </StyledButtonSubmit>\r\n            </div>\r\n          </Form>\r\n\r\n          { this.state.message && \r\n            <div className=\"container\">\r\n              <div className=\"itsanerror\"><h3>Une erreur est survenu lors de l'envoi du formulaire</h3></div>\r\n            </div>\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class PostSubmitForm extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"container\">\r\n                    <header className=\"jumbotron\">\r\n                        <div className=\"success\">\r\n                            <h3>Formulaire envoyé avec succès !</h3>\r\n                            <br></br>\r\n                            <h5>Voici le code du quizz à partager aux élèves :</h5>\r\n                            <p className=\"quizMdp\">{\" \" + this.props.location.state.quizMdp}</p>\r\n                        </div>\r\n                    </header>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Bar, HorizontalBar } from 'react-chartjs-2';\r\n\r\n\r\nconst BarChart = ( props ) => {\r\n\r\n    const names = props.explanationArray;\r\n    const explanationLabels = props.explanationLabels;\r\n    const explanationValues = props.explanationValues;\r\n    const barData = props.barData;\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {(barData === \"Bar\") ? (\r\n                        <Bar\r\n                        data={{\r\n                            labels: explanationLabels,\r\n                            datasets: [{\r\n                                data: explanationValues,\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ]\r\n                            }]\r\n                        }}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                            scales: {\r\n                                yAxes: [{\r\n                                    ticks: {\r\n                                        beginAtZero: true\r\n                                    }\r\n                                }]\r\n                            },\r\n                            legend: {\r\n                                display: false\r\n                            },\r\n                            tooltips: {\r\n                                callbacks: {\r\n                                    label: function(item, data){\r\n                                        return names[item.index];\r\n                                    },\r\n                                    title: function(item, data){\r\n                                        return;\r\n                                    }\r\n                                },\r\n                                displayColors: false\r\n                            }\r\n                        }}\r\n                    />\r\n            ): (\r\n                <HorizontalBar\r\n                data={{\r\n                    labels: explanationLabels,\r\n                    datasets: [{\r\n                        data: explanationValues,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            label: function(item, data){\r\n                                return names[item.index];\r\n                            },\r\n                            title: function(item, data){\r\n                                return;\r\n                            }\r\n                        },\r\n                        displayColors: false\r\n                    }\r\n                }}\r\n            />\r\n            )}\r\n    \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BarChart;","import { Doughnut, Pie } from 'react-chartjs-2';\r\n\r\n\r\nconst DoughnutChart = ({ labels, answerValues, pieData }) => {\r\n    return ( \r\n        <div>\r\n            {(pieData === \"Doughnut\") ? (\r\n                <Doughnut\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: [{\r\n                            data: answerValues,\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                            ]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            ):(\r\n                <Pie\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: [{\r\n                            data: answerValues,\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                            ]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            )}\r\n            \r\n        </div>\r\n     );\r\n}\r\n\r\nexport default DoughnutChart;","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n// import {FaTimes} from 'react-icons/fa'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVert from '@material-ui/icons/MoreVert';\r\nimport SwapHorizRounded from '@material-ui/icons/SwapHorizRounded';import BarChart from './BarChart';\r\nimport { Button, Container, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport DoughnutChart from './DoughnutChart';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nconst AllAnswers = () => {\r\n    const [allAnswers, setallAnswers] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [array, setarray] = useState(null);\r\n    const [answersArray, setanswersArray] = useState();\r\n    const [explanationsArray, setexplanationsArray] = useState()\r\n    const [currentStudent, setcurrentStudent] = useState(null)\r\n    const [explanationStats, setexplanationStats] = useState(null)\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n    const [allQuestions, setAllQuestions] = useState([]);\r\n    const [allExplanations, setAllExplanations] = useState([]);\r\n    const [pieData, setPieData] = useState(\"Doughnut\");\r\n    const [barData, setBarData] = useState(\"Bar\");\r\n\r\n\r\n\r\n    // FIND ALL ANSWERED QUESTIONS ON PAGE LOAD\r\n    useEffect(() => {\r\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllAnswered').then((response) => {\r\n          console.log(response.data);\r\n          setallAnswers(response.data);\r\n          setShowSpinner(false);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }, []);\r\n\r\n    //ALTERNATE BETWEEN PIE AND DOUGHNUT CHART\r\n\r\n    const handlePieChartChange = () => {\r\n        if(pieData === \"Doughnut\"){\r\n            setPieData(\"Pie\")\r\n        }\r\n        if(pieData === \"Pie\"){\r\n            setPieData(\"Doughnut\")\r\n        }\r\n    }\r\n    const handleBarChartChange = () => {\r\n        if(barData === \"Bar\"){\r\n            setBarData(\"Horizontal Bar\")\r\n        }\r\n        if(barData === \"Horizontal Bar\"){\r\n            setBarData(\"Bar\")\r\n        }\r\n    }\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index, quiz_id) => {\r\n        console.log(quiz)\r\n        setcurrentQuiz(quiz);\r\n        getStats(quiz_id);\r\n        setcurrentStudent(null);\r\n        setexplanationStats(null);\r\n        setarray(null);\r\n\r\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${quiz_id}`)\r\n        .then(response => {\r\n            setAllQuestions(response.data.questions);\r\n            console.log(response.data.questions);\r\n        })\r\n        .catch(err => {\r\n            console.log(\"An error occurred\", err.response);\r\n        })\r\n    }; \r\n\r\n    // RETRIEVE GROUPPED DATA FROM THE DATABASE BY SELECTED QUIZ ID \r\n    const getStats = (quiz_id) => {\r\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/groupStats/${quiz_id}`)\r\n        .then(response => {\r\n            if(response){\r\n            // SET GROUPPED ANSWERS \"FOR EACH STUDENT\" ARRAY\r\n            setanswersArray(response.data[0]._id.answer);\r\n            console.log(response.data[0]._id.answer)\r\n\r\n            // SET GROUPPED EXPLANATIONS \"FOR EACH STUDENT\" ARRAY\r\n            setexplanationsArray(response.data[0]._id.explanation);\r\n            console.log(response.data[0]._id.explanation)\r\n            }\r\n        })\r\n        .catch()\r\n    }\r\n\r\n    // SET SELECTED(CLICKED) STUDENT ARRAY\r\n    const setActiveStudent = (student) => {\r\n        console.log(student)\r\n        setcurrentStudent(student);\r\n    }\r\n\r\n    // MERGE ALL ANSWERS BY QUESTION NUMBER AND SET COUNT AND STATS\r\n    const stats = () => {\r\n        // MERGE ALL ANSWERS INTO AN ARRAY (arrAns)\r\n        const arrayAns = answersArray[0].map(function(value, index) {\r\n            const mergeAllStudentsByIndex = [value];\r\n            if(value){\r\n                for(let i=1; i<answersArray.length; i++){\r\n                    mergeAllStudentsByIndex.push(answersArray[i][index])\r\n                }\r\n            }\r\n            console.log(mergeAllStudentsByIndex);\r\n            return mergeAllStudentsByIndex;\r\n        });\r\n        console.log(arrayAns);\r\n\r\n         // MERGE ALL EXPLANATIONS INTO AN ARRAY (arrExp)\r\n        const arrayExp = explanationsArray[0].map(function(explanation, index) {\r\n            const mergeAllExplanation = [explanation];\r\n            if(explanation){\r\n                for(let i =1; i< explanationsArray.length; i++){\r\n                    mergeAllExplanation.push(explanationsArray[i][index])\r\n                }\r\n            }\r\n\r\n            return mergeAllExplanation;\r\n        });\r\n        console.log(arrayExp)\r\n        \r\n        // COUNT NUMBER OF OCCURRENCE OF AN ANSWER(\"Plutot Oui\", \"Non\"... etc) FOR EACH QUESTION\r\n        const countAnswers = arrayAns.map((answers, index) => {\r\n            console.log(array)\r\n            let all = {\r\n                \"Oui\" : 0,\r\n                \"Plutot Oui\" : 0,\r\n                \"Plutot Non\" : 0,\r\n                \"Non\": 0,\r\n            };\r\n            for(const answer of answers){\r\n                all = {...all,  [answer] : answers.filter((a) => {return a === answer}).length}\r\n            }\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setarray(countAnswers)\r\n\r\n        // GET EXPLANATIONS OF ALL QUESTIONS FOR THE CHART DISPLAY \r\n        const labelsArray = allQuestions.map((value, index) => {\r\n            const myArray = value.question_options.map((value, index) => {\r\n                return value.options_text;\r\n            })\r\n            return myArray\r\n        })\r\n\r\n        setAllExplanations(labelsArray);\r\n        console.log(labelsArray);\r\n\r\n        // COUNT NUMBER OF OCCURRENCE OF AN EXPLANATION(\"a\", \"b\", \"c\"... etc) FOR EACH QUESTION\r\n        const countExplanations = arrayExp.map((array,index) => {\r\n            //return arr.filter((a) => {return a === \"a\"}).length\r\n            console.log(array)\r\n            let all = {\r\n                a : 0,\r\n                b : 0,\r\n                c : 0,\r\n                d : 0,\r\n                e : 0\r\n            }\r\n            for(const letter of array){\r\n                all = {...all,  [letter] : array.filter((a) => {return a === letter}).length}\r\n            }\r\n\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setexplanationStats(countExplanations);\r\n        \r\n    }\r\n\r\n    // RETRIEVE INTEGERS(VALUES) FOR EXPLANATIONS\r\n    const getExplanationValues = (explanation, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(explanation[key])\r\n        })\r\n        return values;\r\n    }\r\n    // RETRIEVE INTEGERS(VALUES) FOR Y, MY, MN, N QUESTIONS\r\n    const getAnswerValues = (answer, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(answer[key])\r\n        })\r\n        return values;\r\n    }\r\n\r\n    //RETRIEVE KEYS(LABELS) FOR CHART DATA\r\n    const getLabels = object => {\r\n        return Object.keys(object);\r\n    }\r\n\r\n    // const disp = () => {\r\n    //     console.log(array);\r\n    //     console.log(explanationStats)\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-questions\">\r\n            <h4>Liste de toutes les réponses</h4>\r\n            {showSpinner && <div class=\"spinner\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            }\r\n            {!showSpinner && (<div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                <List>\r\n                    {allAnswers && allAnswers.map((quiz, index) => (\r\n                        <ListItem button onClick= {() => setActiveQuiz(quiz, index, quiz.quiz_id)} >\r\n                            <ListItemIcon>\r\n                                <BookOutlined />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\r\n                                 <h4> \r\n                                     {quiz.quiz_title} {''} \r\n                                     {/* <FaTimes \r\n                                         style={{color: 'red', cursor: 'pointer'}}\r\n                                         //  onClick={() => onDelete(quiz._id)}\r\n                                     /> */}\r\n                                 </h4>\r\n                            } />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </div>)}\r\n\r\n            <div>\r\n                {currentQuiz ? (\r\n                    <div>\r\n                        <center><h4>{'Vous avez sélectionné le quiz : '}{currentQuiz.quiz_id}</h4></center>\r\n                        \r\n                        <div >\r\n                            <h4>{'Liste des étudiants : '}</h4>\r\n                            {currentQuiz.quiz_answers && currentQuiz.quiz_answers.map((students, index) => (\r\n                                <div>\r\n                                    <h4 onClick={() => setActiveStudent(students)}>{students.student_id}</h4>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <div>\r\n                            {currentStudent && (\r\n                                <div>\r\n                                    <h4>{'Affichage des réponses sur  : '}{currentStudent.student_id}</h4>\r\n                                    {currentStudent && currentStudent.student_answers.map((answers, index) => (\r\n                                        <div> \r\n                                            <h4>{answers.question_answer_id}{' .'}{answers.answer}</h4>\r\n                                            <h4>{'Explication : '}{answers.explanation}</h4>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div style={{marginBottom: \"20px\"}}>\r\n                            <Button disableElevation variant=\"contained\" onClick={stats}>Cliquez pour les statistiques</Button>\r\n                        </div>\r\n                        <Container>\r\n                            {array && (\r\n                                <div>\r\n                                    <Grid container spacing={3}>\r\n                                        {array && array.map((answer, index) => (\r\n                                            <Grid item sm={12} md={6} lg={4} >\r\n                                                <Card elevation={2}>\r\n                                                    <CardHeader\r\n                                                        action={\r\n                                                            <IconButton onClick={handlePieChartChange}>\r\n                                                                <SwapHorizRounded/>\r\n                                                            </IconButton>\r\n                                                        }\r\n                                                        title=\"Graphique en anneau\"\r\n                                                        subheader={\"Question. \" + (index + 1)} \r\n                                                    />\r\n                                                    <CardContent>\r\n                                                        <DoughnutChart pieData={pieData} labels={getLabels(answer)} answerValues={getAnswerValues(answer, getLabels(answer))} />\r\n                                                    </CardContent>\r\n                                                </Card>\r\n                                            </Grid>\r\n\r\n                                        ))}\r\n                                    </Grid>\r\n                                </div>\r\n                                                        \r\n                                ) }\r\n\r\n                            {explanationStats && (\r\n                                <div>\r\n                                        <Grid container spacing={3} >\r\n                                            {explanationStats && explanationStats.map((explanation, index) => (\r\n                                                <Grid item sm={12} md={6} lg={4}>\r\n                                                    <Card elevation={2}>\r\n                                                        <CardHeader\r\n                                                        action={\r\n                                                            <IconButton onClick={handleBarChartChange}>\r\n                                                                <SwapHorizRounded/>\r\n                                                            </IconButton>\r\n                                                        } \r\n                                                        title=\"Diagramme à bandes\"\r\n                                                        subheader={`Question. ${index + 1}`}\r\n                                                        />\r\n                                                        <CardContent>\r\n                                                            <BarChart\r\n                                                                barData={barData} \r\n                                                                explanationArray={allExplanations[index]}\r\n                                                                explanationLabels={getLabels(explanation)}\r\n                                                                explanationValues={getExplanationValues(explanation, getLabels(explanation))} \r\n                                                            />\r\n                                                        </CardContent>\r\n                                                    </Card>\r\n                                                </Grid>\r\n                                            ))}\r\n                                        </Grid>\r\n                                </div>         \r\n                                )}\r\n                        </Container>    \r\n                    </div>\r\n                ) : (<h4>Veuillez sélectionner un quiz pour afficher les réponses</h4>)}\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllAnswers;","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n// import {FaTimes} from 'react-icons/fa'\r\nimport AuthService from \"../services/auth.service\";\r\nimport { List, ListItem, ListItemText, Button, ListItemIcon } from '@material-ui/core';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\n\r\nconst AllQuestions = () => {\r\n    const [allQuizzes, setallQuizzes] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [radioOptions, setradioOptions] = useState({});\r\n    const [checkedItems, setCheckedItems] = useState([]); \r\n    const [currentUser] = useState(AuthService.getCurrentUser()) ;\r\n    const [message, setmessage] = useState('') ;\r\n    const [successful, setsuccessful] = useState(false)  \r\n\r\n    // const [currentUser] = useState(AuthService.getCurrentUser());\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n\r\n    // LOAD ALL QUIZZES FROM DATABASE ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n    useEffect(() => {\r\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllQ').then((response) => {\r\n          console.log(response.data);\r\n          setallQuizzes(response.data) \r\n          setShowSpinner(false);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    }, []);\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index) => {\r\n        console.log(quiz)\r\n        setcurrentQuiz(quiz);\r\n        \r\n    };\r\n\r\n    // RETURN CHECKED VALUE(true or false)\r\n    const checkRadioButton = (question_id, label) => {\r\n        if (!radioOptions[question_id]) {\r\n            return false;\r\n        }\r\n        return radioOptions[question_id] === label;\r\n    }\r\n\r\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n    const setradio = (id , answer) => {\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === id);\r\n        console.log(find_question)\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === id).answer = answer;\r\n            setradioOptions((state) => {\r\n                console.log(state);\r\n                return {\r\n                    ...state,\r\n                    [id] : answer\r\n                }\r\n            });\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        else{\r\n        setradioOptions((state) => {\r\n            console.log(state);\r\n            return {\r\n                ...state,\r\n                [id] : answer\r\n            }\r\n        });\r\n\r\n        setCheckedItems([\r\n            ...checkedItems,\r\n             {\r\n                question_answer_id : id,\r\n                answer: answer,\r\n                explanation: 'no explanation'\r\n            }\r\n        ]);}\r\n    }\r\n\r\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n        console.log(find_question)\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        \r\n    }\r\n\r\n    // SUBMIT ANSWERS TO THE BACKEND\r\n    const submitAnswers = () =>{\r\n        setmessage('');\r\n        setsuccessful(false);\r\n        const answers = {\r\n            quiz_id : currentQuiz.quiz_id,\r\n            quiz_title : currentQuiz.quiz,\r\n            quiz_answers : {\r\n                student_id : currentUser.message.email,\r\n                student_answers : checkedItems\r\n            }\r\n        }\r\n        console.log(\"current: \", currentQuiz);\r\n\r\n        console.log(\"Radio Answer: \", radioOptions);\r\n        console.log(\"CheckedItems: \", checkedItems);\r\n        console.log(\"Final: \", answers);\r\n        Axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n            answers\r\n          }).then((res) => {\r\n                console.log(res);\r\n                if(res){\r\n                    //   window.location.reload(false);\r\n                    setmessage('You submitted Quiz as Admin or Teacher... Please Delete from the answers page else Stats will be affected');\r\n                    setsuccessful(true);\r\n                    setCheckedItems([]);\r\n                    setradioOptions({});\r\n\r\n                }\r\n          }).catch(error => {\r\n                console.log(error);\r\n                const errMessage =\r\n                (error.response.data.message[0].password || (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message)) ||\r\n                error.message ||\r\n                error.toString();\r\n                console.log(errMessage);\r\n              setmessage(errMessage);\r\n                setsuccessful(false);            \r\n          });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    //DELETE SLECTED QUIZ WITH THE QUIZ ID FROM DAATABASE\r\n    // const onDelete = (id) => {\r\n    //     Axios.delete(`https://neuroeducation-feedback.herokuapp.com/api/delete/${id}`)\r\n    //     .then((res) => {\r\n    //         console.log(res)\r\n    //         setallQuizzes(allQuizzes.filter((question) => question._id !== id))\r\n    //     })\r\n    //     .catch(err => {\r\n    //         console.log(err); \r\n    //     });\r\n    // }; \r\n\r\n\r\n    return (\r\n        <div className=\"container-questions\">\r\n            <h4>Liste de quiz</h4>\r\n            {/* html for spinner */}\r\n            {showSpinner && <div class=\"spinner\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            }\r\n            {!showSpinner && (<div className={`quiz`} style={{borderRadius: \"10px\", marginTop: \"10px\"}}>\r\n                <List>\r\n                    {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                        <ListItem button onClick= {() => setActiveQuiz(quiz, index)} >\r\n                            <ListItemIcon>\r\n                                <BookOutlined />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\r\n                                <h4> \r\n                                    {quiz.quiz} {''} \r\n                                    {/* <FaTimes \r\n                                        style={{color: 'red', cursor: 'pointer'}}\r\n                                    /> */}\r\n                                </h4>\r\n                            } />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </div>)}\r\n\r\n            <div>\r\n                {message && (\r\n                    <div className=\"form-group\">\r\n                        <div\r\n                        className={\r\n                            successful\r\n                            ? \"alert alert-success\"\r\n                            : \"alert alert-danger\"\r\n                        }\r\n                        role=\"alert\"\r\n                        >\r\n                        {message}\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n                {currentQuiz ? (\r\n                    <div> \r\n                        <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n                        {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                            <div key={questions.question_id}>\r\n                                <h4>{questions.question_id}{'. '}{questions.question_title}</h4>    \r\n                                <div>\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Oui\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Oui\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Plutot Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Non\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Plutot Non\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Non\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Non\r\n                                </div>\r\n                                {radioOptions[questions.question_id] === \"Plutot Non\"\r\n                                || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n                                || radioOptions[questions.question_id] === \"Non\" ? (\r\n                                    <div>\r\n                                        {questions.question_options && questions.question_options.map((options, index) => ( \r\n                                            <div>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" value={options.options_id} \r\n                                                    checked={checkedItems[options.option_text]}  \r\n                                                    onChange={(e) => \r\n                                                        setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                                                    }\r\n                                                    />\r\n                                                    <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                                                </label>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ) : (<span>Aucune explication requise</span>)}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (<h4>Veuillez cliquer sur un quiz</h4>)}\r\n            </div>\r\n            <Button disableElevation variant=\"contained\" onClick={submitAnswers}>Soumettre les réponses</Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllQuestions\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default class AdminRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\r\n\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      admin: false,\r\n      teacher: false,\r\n      roles : [],\r\n      successful: false,\r\n      message: \"\",\r\n      noRoleError: false,\r\n      mdpTmp: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCheckbox(e) {\r\n    let target = e.target;\r\n    let value = target.checked;\r\n    let name = target.name;\r\n    this.setState({\r\n        [name]: value,\r\n        noRoleError: false\r\n    })\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (!this.state.admin && !this.state.teacher) {\r\n      return (this.setState({\r\n        noRoleError: true\r\n      }))\r\n    }\r\n    else {\r\n      let roles = this.state.roles;\r\n      if (this.state.admin) {\r\n        roles.push(\"ROLE_ADMIN\");\r\n      }\r\n      if (this.state.teacher) {\r\n        roles.push(\"ROLE_TEACHER\")\r\n      }\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.adminRegister(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.roles,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: \"Compte créé avec succès\",\r\n            successful: true,\r\n            mdpTmp: response.data.mdpTmp\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Prenom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangeFirstname}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Nom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangeLastname}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"teacher\"\r\n                      checked={this.state.teacher}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Professeur\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"admin\"\r\n                      checked={this.state.admin}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Administrateur\r\n                    </label>\r\n                  </div>\r\n\r\n                  {this.state.noRoleError && \r\n                    <div className=\"container\">\r\n                      <div className=\"itsanerror\">Vous devez sélectionner au moins un rôle</div>\r\n                    </div>\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Créer le compte</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n\r\n                  {this.state.mdpTmp && (\r\n                    <div>\r\n                      <br></br><br></br>\r\n                      Votre mot de passe temporaire est :\r\n                      {\" \" + this.state.mdpTmp}\r\n                      <br></br><br></br>\r\n                      Vous pourrez le modifier en vous connectant à votre profil\r\n                    </div>\r\n                  )}\r\n                  \r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst ProtectedRoute =({ component: Component, role, ...rest })=> {\r\n        const currentUser = AuthService.getCurrentUser()\r\n        let isAuthenticated = '';\r\n        let isAuthorized = false;\r\n\r\n        if(currentUser){\r\n            isAuthenticated = currentUser.token;\r\n\r\n            role.map(roles => {\r\n                if(currentUser.message.roles.includes(roles)){\r\n                    isAuthorized = true;\r\n                } \r\n                return isAuthorized\r\n            });\r\n        }\r\n\r\n        return (isAuthenticated && (isAuthorized))? (\r\n            <Component />\r\n        ) : (\r\n            <div>\r\n            <Redirect to={{ pathname: '/home' }} />\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default ProtectedRoute;","import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport BookOutlined from '@material-ui/icons/BookOutlined';\r\n\r\n\r\nconst AllStudents = () => {\r\n    const [allStudents, setallStudents] = useState([]);\r\n    const [allQuizzes, setallQuizzes] = useState(null)\r\n    const [message, setmessage] = useState('');\r\n    const [errorMessage, seterrorMessage] = useState('')\r\n    const [successful, setsuccessful] = useState(false);\r\n    const [displayQuizzes, setdisplayQuizzes] = useState(null);\r\n    const [displayActiveQuiz, setdisplayActiveQuiz] = useState(false)\r\n    const [displayEvolution, setdisplayEvolution] = useState(false);\r\n    const [displayMain, setdisplayMain] = useState(true);\r\n    const [currentStudent, setcurrentStudent] = useState(null);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get( \"https://neuroeducation-feedback.herokuapp.com/api/findAllStudents\")\r\n        .then(res => {\r\n            console.log(res.data);\r\n            setallStudents(res.data);\r\n            setShowSpinner(false);\r\n        })\r\n        .catch(error => {\r\n            const resMessage =\r\n            (error.response && error.response.data && error.response.data.message) \r\n            || error.message || error.toString();\r\n  \r\n            seterrorMessage(resMessage);\r\n        });\r\n\r\n    }, [])\r\n\r\n    const getAllQuizzes = (student_id, name) => {\r\n        setcurrentQuiz(null);\r\n        setallQuizzes([]);\r\n        setdisplayQuizzes(null) \r\n        axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\r\n            console.log(response.data.quizzes);\r\n            if((response.data.quizzes).length ){\r\n                setallQuizzes(response.data.quizzes)\r\n                setdisplayQuizzes(true); \r\n            }\r\n            else{\r\n                setallQuizzes(null)\r\n                setdisplayQuizzes(false)  \r\n            }\r\n            setActiveStudent(name);\r\n          })\r\n          .catch(function (err) {\r\n              seterrorMessage(err.response.data.message|| err.response.data.message[0].error);\r\n          });\r\n    }\r\n\r\n      // SET SELECTED(CLICKED) QUIZ\r\n  const setActiveQuiz = (quiz, index) => {\r\n    console.log(quiz);\r\n    setdisplayActiveQuiz(true);\r\n    setcurrentQuiz(quiz);\r\n    setdisplayQuizzes(null);\r\n    // setcurrentIndex(index)\r\n  };\r\n\r\n  const setActiveStudent = (name) => {\r\n    console.log(name)\r\n    setcurrentStudent(name);\r\n    // setcurrentQuiz(quiz);\r\n    // setcurrentIndex(index)\r\n  };\r\n\r\n  const backToAllQuizzes = () => {\r\n    setdisplayQuizzes(true);\r\n    setdisplayActiveQuiz(false);\r\n  }\r\n\r\n  const evolution = () => {\r\n    if(displayMain===true && displayEvolution===false){\r\n        setdisplayMain(false); \r\n        setdisplayEvolution(true);\r\n    } \r\n    else if(displayMain===false && displayEvolution===true){\r\n        setdisplayMain(true); \r\n        setdisplayEvolution(false);\r\n    } \r\n\r\n\r\n  }\r\n\r\n    return (\r\n        <div className=\"container-questions\">\r\n            {displayMain  && <div className=\"row\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n                    <h3>{'Liste des étudiants : '}</h3>\r\n                    {showSpinner && (<div class=\"spinner\">\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>)}\r\n                    {!showSpinner && (<div  class=\"quiz\" style={{borderRadius: \"10px\"}}>\r\n                            <List>\r\n                                {allStudents && allStudents.map((student,index) =>(\r\n                                    <ListItem button onClick={()=> getAllQuizzes(student.email,student.firstname +' ' +student.lastname )}>\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                            {(student.firstname[0] +' ' +student.lastname[0]).toUpperCase()}\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={<h4>{student.firstname +' ' +student.lastname}</h4>} />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </div>)}\r\n                </div>\r\n                <div className=\"col-xs-12 col-sm-12 col-md-6\">  \r\n                    {(allQuizzes && displayQuizzes) && (\r\n                        <div >\r\n                            <h4>{'Questionnaires auxquels ont répondu : '}</h4>\r\n                            <h4> {currentStudent}</h4>\r\n                            <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                <List>\r\n                                {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                    <ListItem button>\r\n                                        <ListItemIcon>\r\n                                            <BookOutlined />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={\r\n                                            <h4 \r\n                                            onClick= {() => setActiveQuiz(quiz, index)}\r\n                                            >\r\n                                            {quiz.quiz_id} \r\n                                            </h4>\r\n                                        }/>\r\n                                    </ListItem>\r\n                                ))}\r\n                                </List>\r\n                            </div>\r\n                        </div>\r\n                    ) }\r\n                    {(displayQuizzes===false) && (\r\n                        <div>\r\n                            <h4>{'Questionnaires auxquels ont répondu : '}</h4>\r\n                            <h4> {currentStudent}</h4>\r\n                            <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                <h4>Cet étudiant n'a répondu à aucun quiz</h4>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                    )}\r\n                    <div >\r\n                    {(currentQuiz && displayActiveQuiz) && \r\n                        <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <BookOutlined />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={\r\n                                    <h4>\r\n                                    {currentQuiz.quiz_id} \r\n                                    </h4>\r\n                                }/>\r\n                            </ListItem>\r\n                            <h4>{currentStudent+' has taken this quiz '+ (currentQuiz.quiz_answers.length) +' times'}</h4>\r\n                            <button className=\"btnn\" onClick={()=> backToAllQuizzes()}>Back</button>\r\n                            <button className=\"btnn\" onClick={()=> evolution()}>{'View Answers & Evolution'}</button>\r\n                        </div>\r\n                    }\r\n                        \r\n\r\n                </div> \r\n                </div>\r\n\r\n     \r\n            </div>\r\n            }\r\n            <div>\r\n                { (currentQuiz && displayEvolution) && <button className=\"btnn\" onClick={()=> evolution()}>Back</button>}\r\n                <div className=\"row\">\r\n                    \r\n                    {(currentQuiz && displayEvolution) && currentQuiz.quiz_answers.map((quiz, index)=>(                            \r\n                        <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n                            <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n                                <h4>{'Attempt number ' + (index+1)}</h4>\r\n                                {/* <h4>{quiz.qu}</h4> */}\r\n                                {quiz.student_answers.map((answers, idx)=>(\r\n                                    <div>\r\n                                    <h4>{'Question '+answers.question_answer_id}</h4>\r\n                                    <h4>{'answer: ' +answers.answer +' explanation: ' +answers.explanation}</h4>\r\n                                    </div>\r\n                                ))}\r\n                            </div>    \r\n                        </div> \r\n                                \r\n                    ))}\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllStudents\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n// import axios from 'axios';\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Home2 from \"./components/home2.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport PostSubmitForm from \"./components/postSubmitForm.component\";\r\nimport AllAnswers from \"./components/all-answers.component\";\r\nimport AllQuestions from './components/allquestions.component';\r\nimport AdminRegister from \"./components/admin-register.component\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport ProtectedRoute from \"./components/protected-routes.component\";\r\nimport AllStudents from \"./components/all-students.component\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette:{\r\n    primary: {\r\n      main: \"#DCDCDC\"\r\n    }\r\n  }\r\n})\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showAdminBoard: false,\r\n      showTeacherBoard: false,\r\n      currentUser: undefined,\r\n      admin:[\"ROLE_ADMIN\"],\r\n      adminTeacher:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\"],\r\n      allUsers:[\"ROLE_ADMIN\" , \"ROLE_TEACHER\" , \"ROLE_STUDENT\"]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    \r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showAdminBoard: user.message.roles.includes(\"ROLE_ADMIN\"),\r\n        showTeacherBoard: user.message.roles.includes(\"ROLE_TEACHER\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n    this.setState({\r\n            currentUser: null \r\n        })\r\n    if (!this.state.currentUser) {  \r\n      return <Redirect to=\"/home\" />;\r\n  }\r\n  }\r\n\r\n  render() {\r\n     const { currentUser, showAdminBoard, showTeacherBoard, admin, adminTeacher, allUsers } = this.state;\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n              Outsmarted\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/home\"} className=\"nav-link\">\r\n                  <Button color=\"primary\">Accueil</Button>\r\n                </Link>\r\n              </li>\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/admin\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Ajouter un quiz</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n              {showAdminBoard && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/adminRegister\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">Ajouter un compte</Button>\r\n                  </Link>\r\n                </li>\r\n              )}\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/questions\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Page Questions</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/answers\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Page Réponses</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n              {(showAdminBoard || showTeacherBoard) && (\r\n                <div>\r\n                  <li className=\"nav-item\">\r\n                    <Link to={\"/students\"} className=\"nav-link\">\r\n                      <Button color=\"primary\">Page Etudiants</Button>\r\n                    </Link>\r\n                  </li>\r\n                </div> \r\n              )}\r\n\r\n                {(currentUser && !showTeacherBoard) && (\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/user\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">Utilisateur</Button>\r\n                  </Link>\r\n                </li>\r\n                )}\r\n            </div>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/profile\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">{currentUser.message.firstname}</Button>\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/home\"} className=\"nav-link\" onClick={this.logOut}>\r\n                    <Button color=\"primary\">Déconnexion</Button>\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">Se connecter</Button>\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\">\r\n                    <Button color=\"primary\">Créer un compte</Button>\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            )}\r\n\r\n            </nav>\r\n\r\n            <div className=\"container pt-3\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/home\" component={Home2} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                <Route exact path=\"/postSubmitForm\" component={PostSubmitForm}/>\r\n                <ProtectedRoute exact path=\"/adminRegister\" component={AdminRegister} role={admin}/>\r\n                <ProtectedRoute exact path=\"/profile\" component={Profile} role={allUsers}/>\r\n                <ProtectedRoute exact path=\"/user\" component={BoardUser} role={allUsers}/>\r\n                <ProtectedRoute exact path=\"/questions\" component={AllQuestions} role={adminTeacher}/>\r\n                <ProtectedRoute exact path=\"/answers\" component={AllAnswers} role={adminTeacher}/>\r\n                <ProtectedRoute exact path=\"/students\" component={AllStudents} role={allUsers}/>\r\n                <ProtectedRoute exact path=\"/admin\" component={BoardAdmin} role={adminTeacher}/>\r\n                <ProtectedRoute  component={Home} />\r\n              </Switch>\r\n            </div>\r\n          \r\n\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n\r\n  }\r\n    \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// serviceWorker.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}