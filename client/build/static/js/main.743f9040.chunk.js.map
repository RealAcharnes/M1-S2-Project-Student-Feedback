{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","components/home.component.js","components/home2.component.js","components/modifyPassword.component.js","components/profile.component.js","services/search.service.js","components/board-user.component.js","services/admin-submit-form.js","components/board-admin.component.js","components/postSubmitForm.component.js","components/BarChart.js","components/DoughnutChart.js","components/all-answers.component.js","components/allquestions.component.js","components/admin-register.component.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","email","password","axios","post","then","response","console","log","data","token","localStorage","setItem","JSON","stringify","removeItem","firstname","lastname","password_confirmation","roles","old_password","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vlastname","vfirstname","vpassword","vpasswordConfirmation","Register","handleRegister","onChangeFirstname","onChangeLastname","onChangePasswordConfirmation","successful","register","Home","content","Home2","title","description","ModifyPassword","useState","oldPw","setOldPw","newPw","setNewPw","confirmNewPw","setConfirmNewPw","setmessage","setsuccessful","userEmail","placeholder","onClick","oldPass","newPass","confirmPass","changePassword","res","catch","errMessage","ApplyModifications","Profile","currentUser","getCurrentUser","substring","substr","_id","map","index","id","get","answers","vsearch","BoardUser","search","setsearch","currentQuiz","setcurrentQuiz","radioOptions","setradioOptions","checkedItems","setCheckedItems","allQuizzes","setallQuizzes","displayAllAnswered","setdisplayAllAnswered","useEffect","student_id","checkRadioButton","question_id","label","setradio","SearchService","searchQuiz","quiz","setActiveQuiz","quiz_id","questions","indexx","question_title","checked","question_options","options","options_id","option_text","checkedArray","x","find_question","find","a","question_answer_id","explanation","answer","setCheckbox","options_text","quiz_answers","student_answers","err","created_by","StyledButtonAddExplanation","withStyles","root","background","borderRadius","border","color","height","padding","boxShadow","margin","textTransform","Button","StyledButtonAddQuestion","StyledButtonDelExplanation","StyledButtonDelQuestion","StyledButtonSubmit","MyForm","onChangeQuestion","onClickAddExplanation","explanations","onQuestionChange","indexExplanation","onExplanationChange","onRemoveExplanationClick","onAddExplanationClick","element","onChangeExplanation","autoComplete","variant","onClickRemoveExplanation","question","createExplanationUI","BoardAdmin","onClickAddQuestion","onChangeTitle","handleSubmit","undefined","user","indexQuestion","alphabet","String","fromCharCode","prevState","splice","PostForm","submit","pathname","quizMdp","handleQuestionChange","onTitleChange","handleTitleChange","handleExplanationChange","handleAddExplanationClick","handleRemoveExplanationClick","onClickDelQuestion","createQuestionUI","PostSubmitForm","BarChart","explanationLabels","explanationValues","labels","datasets","backgroundColor","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","legend","DoughnutChart","answerValues","AllAnswers","allAnswers","setallAnswers","array","setarray","answersArray","setanswersArray","explanationsArray","setexplanationsArray","currentStudent","setcurrentStudent","explanationStats","setexplanationStats","Axios","getStats","getExplanationValues","keys","values","forEach","key","getAnswerValues","getLabels","object","Object","cursor","students","student","disableElevation","arrayAns","mergeAllStudentsByIndex","i","arrayExp","mergeAllExplanation","countAnswers","all","filter","countExplanations","b","d","letter","Container","Grid","container","spacing","item","sm","md","lg","Card","elevation","CardHeader","action","IconButton","subheader","CardContent","AllQuestions","vusername","AdminRegister","onChangeCheckbox","admin","teacher","noRoleError","mdpTmp","adminRegister","App","logOut","showAdminBoard","showTeacherBoard","includes","logout","to","href","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.743f9040.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n\r\nclass AuthService {\r\n  login(email, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        email,\r\n        password\r\n      })\r\n      .then(response => {\r\n        console.log(response.data);\r\n\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(firstname, lastname, email, password, password_confirmation) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      firstname, \r\n      lastname, \r\n      email, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  adminRegister(firstname, lastname, email, roles) {\r\n    return axios\r\n    .post(API_URL + \"signup\", {\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      roles\r\n    });\r\n  }\r\n\r\n  changePassword(email, old_password, password, password_confirmation) {\r\n    return axios\r\n    .post(API_URL + \"changePassword\", {\r\n      email, \r\n      old_password, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.email, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n            \r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email de l'utilisateur</label>\r\n              <Input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Mot de passe</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Se connecter</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vlastname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vfirstname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le mot de passe doit contenir entre 6 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst vpasswordConfirmation = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangePasswordConfirmation = this.onChangePasswordConfirmation.bind(this);\r\n\r\n    this.state = {\r\n      lastname: \"\",\r\n      firstname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  // onChangeUsername(e) {\r\n  //   this.setState({\r\n  //     username: e.target.value\r\n  //   });\r\n  // }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePasswordConfirmation(e) {\r\n    this.setState({\r\n      password_confirmation: e.target.value\r\n    });\r\n  }\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.password_confirmation,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: \"Compte crée avec succès\",\r\n            successful: true\r\n          });\r\n\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n          console.log(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"firstname\">Prenom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"firstname\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangeFirstname}\r\n                    validations={[required, vfirstname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"lastname\">Nom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"lastname\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangeLastname}\r\n                    validations={[required, vlastname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password_confirmation\">Confirmer Mot de passe</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password_confirmation\"\r\n                    value={this.state.password_confirmation}\r\n                    onChange={this.onChangePasswordConfirmation}\r\n                    validations={[required, vpasswordConfirmation]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Créer le compte</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // UserService.getPublicContent().then(\r\n    //   response => {\r\n    //     this.setState({\r\n    //       content: response.data.body\r\n    //     });\r\n    //   },\r\n    //   error => {\r\n    //     this.setState({\r\n    //       content:\r\n    //         (error.response && error.response.data) ||\r\n    //         error.message ||\r\n    //         error.toString()\r\n    //     });\r\n    //   }\r\n    // );\r\n    this.setState({\r\n      content: \"Bienvenue dans votre application de Neuroéducation\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      title: \"Bienvenue dans votre application de Neuroéducation\",\r\n      description: \"Cette application permet aux élèves de prendre conscience de leurs stratégies de réussite et des potentielles origines de leurs erreurs\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <header className=\"jumbotron\">\r\n                    <h3>{this.state.title}</h3>\r\n                </header>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h5>{this.state.description}</h5>\r\n            </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}","import {useState} from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\n// import CheckButton from \"react-validation/build/button\";\r\n// import React, { Component } from \"react\";\r\n\r\nimport AuthService from '../services/auth.service'\r\n\r\n\r\n\r\nconst currentPassword = \"\"\r\n\r\n\r\n// const required = (value) => {\r\n//     if (!value) {\r\n//         return (\r\n//             <div className=\"alert alert-danger\" role=\"alert\">\r\n//                 Ce champ est obligatoire !\r\n//             </div>\r\n//         );\r\n//     }\r\n// };\r\n\r\n// const vpassword = value => {\r\n//     if (value.length < 6 || value.length > 50) {\r\n//       return (\r\n//         <div className=\"alert alert-danger\" role=\"alert\">\r\n//           Le mot de passe doit contenir entre 6 et 50 charactères.\r\n//         </div>\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const vpasswordConfirmation = value => {\r\n//     if (value !== newPw) {\r\n//       return (\r\n//         <div className=\"alert alert-danger\" role=\"alert\">\r\n//           Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n//         </div>\r\n//       );\r\n//     }\r\n//   };\r\n\r\nconst ModifyPassword = (email) =>{\r\n    const [oldPw, setOldPw] = useState('')\r\n    const [newPw, setNewPw] = useState('')\r\n    const [confirmNewPw, setConfirmNewPw] = useState('')\r\n    const [message, setmessage] = useState('');\r\n    const [successful, setsuccessful] = useState(false);\r\n    const [userEmail] = useState(email.email)\r\n\r\n    const ApplyModifications =(email,oldPass, newPass, confirmPass) => {\r\n        console.log(email)\r\n        setmessage('');\r\n        setsuccessful(false);\r\n        AuthService.changePassword(email, oldPass, newPass, confirmPass)\r\n        .then((res) => {\r\n            console.log(res.data);\r\n            setmessage(\"Password Successfully Changed\");\r\n            setsuccessful(true);\r\n        })\r\n        .catch((error) =>{\r\n            const errMessage =\r\n              (error.response.data.message[0].password || (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message)) ||\r\n              error.message ||\r\n              error.toString();\r\n              console.log(errMessage);\r\n            setmessage(errMessage);\r\n            setsuccessful(false);\r\n        })\r\n    }\r\n\r\n\r\n\r\nreturn (\r\n    <div className=\"card card-container\">\r\n        \r\n        <strong>Changement de mot de passe</strong>\r\n        <Form>\r\n        <label name=\"oldPw\">Ancien mot de passe</label>\r\n        <Input name=\"oldPw\" value={oldPw} placeholder=\"******\" onChange={(e) => setOldPw(e.target.value)} />\r\n        <label name=\"newPw\">Nouveau mot de passe</label>\r\n        <Input name=\"newPw\" value={newPw} placeholder=\"******\" onChange={(e) => setNewPw(e.target.value)} />\r\n        <label name=\"confirmNewPw\">Confirmer le nouveau mot de passe</label>\r\n        <Input name=\"confirmNewPw\" value={confirmNewPw} placeholder=\"******\" onChange={(e) => setConfirmNewPw(e.target.value)} />\r\n        {/* <CheckButton\r\n            style={{ display: \"none\" }}\r\n            ref={c => {\r\n            Component.checkBtn = c;\r\n            }}\r\n        /> */}\r\n        </Form>\r\n        <button className=\"btnn\" onClick={() => ApplyModifications(userEmail,oldPw,newPw,confirmNewPw)}>Confirmer</button>\r\n\r\n        {message && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\r\n                successful\r\n                  ? \"alert alert-success\"\r\n                  : \"alert alert-danger\"\r\n              }\r\n              role=\"alert\"\r\n            >\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n    </div>\r\n);\r\n}\r\n\r\n\r\n\r\nexport default ModifyPassword;\r\n","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport ModifyPassword from \"./modifyPassword.component\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser()\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n          Profile : <strong>{currentUser.message.firstname}{' '}{currentUser.message.lastname}</strong> \r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.token.substring(0, 20)} ...{\" \"}\r\n          {currentUser.token.substr(currentUser.token.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.message._id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.message.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.message.roles &&\r\n            currentUser.message.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n        <ModifyPassword email={currentUser.message.email}/>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n// const API_URL = \"http://localhost:5050/api/${id}\";\r\n\r\n\r\nclass SearchService {\r\n\r\n  searchQuiz(id) {\r\n    return axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${id}`, {\r\n      \r\n    });\r\n  }\r\n\r\n  submitAnswers(answers){\r\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n        answers\r\n      })\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new SearchService();\r\n","import React from \"react\";\r\nimport SearchService from \"../services/search.service\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst vsearch = value => {\r\n  if (value.length < 6) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 6 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst BoardUser = () => {\r\n  const [search, setsearch] = useState('');\r\n  const [successful, setsuccessful] = useState(false);\r\n  const [message, setmessage] = useState('');\r\n  const [currentQuiz, setcurrentQuiz] = useState(null);\r\n  const [radioOptions, setradioOptions] = useState({})\r\n  const [checkedItems, setCheckedItems] = useState([]); \r\n  const [currentUser] = useState(AuthService.getCurrentUser()) ;\r\n  const [allQuizzes, setallQuizzes] = useState([]);\r\n  const [displayAllAnswered, setdisplayAllAnswered] = useState(false);\r\n\r\n\r\n  // LOAD ALL QUIZZES ANSWERED BY CURRENT STUDENT FROM DATABASE \r\n  //ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n  useEffect(() => {\r\n    const student_id = currentUser.message.email;\r\n    axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\r\n      console.log(response.data);\r\n      setallQuizzes(response.data) \r\n    })\r\n    .catch(function (error) {\r\n        console.log(error);\r\n    });\r\n  }, [currentUser]);\r\n\r\n  // SET SELECTED(CLICKED) QUIZ\r\n  const setActiveQuiz = (quiz, index) => {\r\n    console.log(quiz)\r\n    // setcurrentQuiz(quiz);\r\n    // setcurrentIndex(index)\r\n  };\r\n\r\n  const onChangeSearch = (e) =>{\r\n    setsearch(e.target.value)\r\n  }\r\n\r\n  // RETURN CHECKED VALUE(true or false)\r\n  const checkRadioButton = (question_id, label) => {\r\n      if (!radioOptions[question_id]) {\r\n          return false;\r\n      }\r\n      return radioOptions[question_id] === label;\r\n  }\r\n\r\n  // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n  const setradio = (id , value) => {\r\n      setradioOptions((state) => {\r\n          console.log(state);\r\n          return {\r\n              ...state,\r\n              [id] : value\r\n          }\r\n      });\r\n  }\r\n\r\n  // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n  const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n\r\n\r\n      let checkedArray = checkedItems.map(x => {return {...x}})\r\n      const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n      console.log(find_question)\r\n      if(find_question) {\r\n          checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n          setCheckedItems(checkedArray);\r\n      }\r\n      else{\r\n          setCheckedItems([\r\n              ...checkedItems,\r\n                {\r\n                  question_answer_id : question_id,\r\n                  answer: radioOptions[question_id],\r\n                  explanation: value \r\n              }\r\n          ]);\r\n      }  \r\n  }\r\n\r\n  // SUBMIT ANSWERS TO THE BACKEND\r\n  const submitAnswers = () =>{\r\n    setmessage(\"\");\r\n    setsuccessful(false);\r\n    setdisplayAllAnswered(false);\r\n    const answers = {\r\n        quiz_id : currentQuiz.quiz_id,\r\n        quiz_answers : {\r\n            student_id : currentUser.message.email,\r\n            student_answers : checkedItems\r\n        }\r\n    }\r\n    console.log(\"Radio Answer: \", radioOptions);\r\n    console.log(\"CheckedItems: \", checkedItems);\r\n    console.log(\"Final: \", answers);\r\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n        answers\r\n      }).then((res) => {\r\n          console.log(res);\r\n          if(res){\r\n              //   window.location.reload(false);\r\n              setcurrentQuiz(null);\r\n              setCheckedItems([]);\r\n              setradioOptions({});\r\n              setallQuizzes([...allQuizzes, answers])\r\n              setmessage('Answers Submitted');\r\n              setsuccessful(true);\r\n              setdisplayAllAnswered(true);\r\n              \r\n          }\r\n      }).catch(err => {\r\n          setcurrentQuiz(null)  \r\n          setsuccessful(false);\r\n          console.log(err.response.data.message|| err.response.data.message[0].error);   \r\n          setmessage(err.response.data.message|| err.response.data.message[0].error);\r\n                 \r\n      });\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    setmessage(\"\");\r\n    setsuccessful(false);\r\n    setdisplayAllAnswered(false);\r\n\r\n    // this.form.validateAll();\r\n\r\n    SearchService.searchQuiz(\r\n      search,\r\n    ).then(\r\n      response => {\r\n        console.log(response);\r\n        setsuccessful(true);\r\n        setcurrentQuiz(response.data);\r\n      })\r\n      .catch(\r\n      error => {\r\n        console.log(error.response);\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) \r\n          || error.message || error.toString();\r\n\r\n        setmessage(resMessage);\r\n        setsuccessful(false);\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\nreturn (\r\n<div>\r\n  <div className=\"row\">\r\n    <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n    <div className={!successful || message ? \"card card-container\" : \"\"}>\r\n        {(!successful || displayAllAnswered)  && (\r\n          <div >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"search\">Search for Quiz</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"search\"\r\n                value={search}\r\n                onChange={onChangeSearch}\r\n                validations={[required, vsearch]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button className=\"btn btn-primary btn-block\"  onClick={handleSearch}>Search Quiz</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {message && (\r\n          <div className=\"form-group\">\r\n            <div\r\n              className={\r\n                successful\r\n                  ? \"alert alert-success\"\r\n                  : \"alert alert-danger\"\r\n              }\r\n              role=\"alert\"\r\n            >\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      </div>\r\n\r\n      <div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n    <div className={!successful || message ? \"card card-container\" : \"\"}>\r\n        {(displayAllAnswered || !successful )  && allQuizzes && (\r\n          <div >\r\n            <h4>Quizzes Already Answered</h4>\r\n            <div className={`quiz`} >\r\n                {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                    <h4 \r\n                    onClick= {() => setActiveQuiz(quiz, index)}\r\n                    > {quiz.quiz_id} \r\n                    </h4>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n      </div>\r\n      </div>\r\n      </div>\r\n\r\n\r\n      <div >\r\n      {currentQuiz && (\r\n        <div className=\"container-questions\"> \r\n          <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n          {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n            <div key={questions.question_id}>\r\n              <h4>{questions.question_id}{'. '}{questions.question_title}</h4>    \r\n              <div>\r\n                  <input \r\n                      className=\"input\"\r\n                      type=\"radio\" \r\n                      value=\"Oui\" \r\n                      checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                      onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                  /> Oui\r\n                  <input \r\n                      className=\"input\"\r\n                      type=\"radio\" \r\n                      value=\"Plutot Oui\"  \r\n                      checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                      onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                  /> Plutot Oui\r\n                  <input\r\n                      className=\"input\" \r\n                      type=\"radio\" \r\n                      value=\"Plutot Non\"  \r\n                      checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                      onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                  /> Plutot Non\r\n                  <input\r\n                      className=\"input\" \r\n                      type=\"radio\" \r\n                      value=\"Non\" \r\n                      checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                      onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                  /> Non\r\n              </div>\r\n\r\n              {radioOptions[questions.question_id] === \"Plutot Non\"\r\n              || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n              || radioOptions[questions.question_id] === \"Non\" ? (\r\n                <div>\r\n                  {questions.question_options && questions.question_options.map((options, index) => ( \r\n                    <div>\r\n                      <label>\r\n                        <input type=\"checkbox\" value={options.options_id} \r\n                        checked={checkedItems[options.option_text]}  \r\n                        onChange={(e) => \r\n                            setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                        }\r\n                        />\r\n                        <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (<span>No Explanation Needed</span>)}\r\n            </div>\r\n          ))}\r\n          <div className=\"form-group\">\r\n            <button className=\"btnn\" onClick={submitAnswers}>Submit Answers</button>\r\n          </div>\r\n        </div>\r\n          )\r\n        }\r\n      </div>\r\n\r\n</div>\r\n    );\r\n  }\r\n\r\n  export default BoardUser","import axios from \"axios\";\r\n\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\r\n// const API_URL = \"http://localhost:5050/api/postform/\";\r\n\r\nclass PostForm {\r\n    submit(title, created_by, questions) {\r\n        return axios\r\n            .post(API_URL + \"submit\", {\r\n                title,\r\n                created_by,\r\n                questions\r\n            })\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport default new PostForm();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PostForm from \"../services/admin-submit-form\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\n\r\n// Here is 5 constants related to the visual of our custom button\r\nconst StyledButtonAddExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonAddQuestion = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #00BCFF 30%, #5355FF 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelExplanation = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF8700 30%, #FF1E1E 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonDelQuestion = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FF1D1D 30%, #4C4C4C 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst StyledButtonSubmit = withStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #11FF00 30%, #00FF82 90%)',\r\n    borderRadius: 15,\r\n    border: 0,\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    margin: '5px 15px',\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n  },\r\n})(Button);\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass MyForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.onChangeQuestion = this.onChangeQuestion.bind(this);\r\n    this.onClickAddExplanation = this.onClickAddExplanation.bind(this);\r\n\r\n    this.state = {\r\n      explanations: false\r\n    };\r\n  }\r\n\r\n  onChangeQuestion(e){\r\n    this.props.onQuestionChange(e.target.value);\r\n  }\r\n\r\n  onChangeExplanation(indexExplanation, e){\r\n    this.props.onExplanationChange(indexExplanation, e.target.value)\r\n  }\r\n\r\n  onClickRemoveExplanation(indexExplanation){\r\n    this.props.onRemoveExplanationClick(indexExplanation);\r\n  }\r\n\r\n  onClickAddExplanation(){\r\n    this.props.onAddExplanationClick();\r\n    this.setState({\r\n      explanations: true\r\n    });\r\n  }\r\n  \r\n  createExplanationUI(){\r\n    return(\r\n      <div>\r\n          {this.props.explanations ?(this.props.explanations.map((element, indexExplanation) =>\r\n            <div>\r\n              <div key={indexExplanation} className=\"form-group\">\r\n                <label htmlFor=\"explanation\">Explication</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"explanation\"\r\n                    value = {element.options_text||''}\r\n                    onChange = {this.onChangeExplanation.bind(this, indexExplanation)}\r\n                    validations = {[required]}\r\n                    autoComplete = \"off\"\r\n                  />\r\n              </div>\r\n\r\n              <StyledButtonDelExplanation \r\n                variant = \"contained\" onClick = {this.onClickRemoveExplanation.bind(this, indexExplanation)}>Supprimer cette explication\r\n              </StyledButtonDelExplanation>\r\n\r\n\r\n            </div>\r\n            )) : (<h3>No Explanation props</h3>)\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const question = this.state.question;\r\n\r\n    return (\r\n      <div>\r\n        <Form>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"question\"><strong>Question</strong></label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"question\"\r\n              value = {question}\r\n              onChange = {this.onChangeQuestion}\r\n              validations = {[required]}\r\n              autoComplete = \"off\"\r\n            />\r\n          </div>\r\n\r\n          <StyledButtonAddExplanation\r\n            variant = \"contained\" onClick = {this.onClickAddExplanation}>Ajouter une explication\r\n          </StyledButtonAddExplanation>\r\n          \r\n          {\r\n            this.state.explanations &&\r\n              this.createExplanationUI()\r\n          }\r\n\r\n        </Form>\r\n\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClickAddQuestion = this.onClickAddQuestion.bind(this);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.state = {\r\n      title: '',\r\n      created_by: '',\r\n      questions: [\r\n        {\r\n          question_id: '',\r\n          question_title: '',\r\n          question_options: []\r\n        }\r\n      ],\r\n      message: '',\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleQuestionChange(indexQuestion, question){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_title = question;\r\n    questions[indexQuestion].question_id = indexQuestion+1;\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleExplanationChange(indexQuestion, indexExplanation, explanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options[indexExplanation].options_text = explanation;\r\n    \r\n    let alphabet = String.fromCharCode(96 + (indexExplanation+1));\r\n    questions[indexQuestion].question_options[indexExplanation].options_id = alphabet;\r\n    \r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  onChangeTitle(e){\r\n    let title = e.target.value;\r\n    this.setState({\r\n      title\r\n    });\r\n  }\r\n\r\n  onClickAddQuestion(){\r\n    this.setState(\r\n      prevState => ({questions : [...prevState.questions,        \r\n        {\r\n        question_title: '',\r\n        question_options: []\r\n      }]})\r\n    );\r\n  }\r\n\r\n  handleAddExplanationClick(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.push({options_text : ''});\r\n    this.setState({\r\n      questions\r\n    })\r\n  }\r\n\r\n  handleRemoveExplanationClick(indexQuestion, indexExplanation){\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.splice(indexExplanation, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  onClickDelQuestion(indexQuestion){\r\n    let questions = [...this.state.questions];\r\n    questions.splice(indexQuestion, 1);\r\n    this.setState({\r\n      questions\r\n    });\r\n  }\r\n\r\n  handleSubmit(){\r\n\r\n    const { currentUser} = this.state;\r\n\r\n    PostForm.submit(this.state.title, currentUser.message.email, this.state.questions).then(\r\n      (response) => {\r\n        this.props.history.push({\r\n          pathname: \"/postSubmitForm\",\r\n          state:{quizMdp: response.quizMdp}\r\n        })\r\n        window.location.reload();\r\n      },\r\n      error => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        this.setState({\r\n          message: resMessage,\r\n          questions: [\r\n            {\r\n              question_title: '',\r\n              question_options: []\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  createQuestionUI(){\r\n\r\n    return(this.state.questions.map((element, indexQuestion) => \r\n      <div className=\"questionContainer\">\r\n        <div className=\"container\" key={indexQuestion}>\r\n          <MyForm \r\n            onQuestionChange = {this.handleQuestionChange.bind(this, indexQuestion)}\r\n            onTitleChange = {this.handleTitleChange}\r\n            onExplanationChange = {this.handleExplanationChange.bind(this, indexQuestion)}\r\n            onAddExplanationClick = {this.handleAddExplanationClick.bind(this, indexQuestion)}\r\n            onRemoveExplanationClick = {this.handleRemoveExplanationClick.bind(this, indexQuestion)}\r\n            explanations = {this.state.questions[indexQuestion].question_options}\r\n          />\r\n          <div className=\"delQuestion\">\r\n            <StyledButtonDelQuestion\r\n              variant = \"contained\" onClick = {this.onClickDelQuestion.bind(this, indexQuestion)}>Supprimer cette question\r\n            </StyledButtonDelQuestion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  // Pourrait être utile plus tard donc je met de coté (deprecated)\r\n  // componentDidMount() {\r\n  //   UserService.getAdminBoard().then(\r\n  //     response => {\r\n  //       this.setState({\r\n  //         content: response.data\r\n  //       });\r\n  //     },\r\n  //     error => {\r\n  //       this.setState({\r\n  //         content:\r\n  //           (error.response &&\r\n  //             error.response.data &&\r\n  //             error.response.data.message) ||\r\n  //           error.message ||\r\n  //           error.toString()\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n\r\n    const title = this.state.title;\r\n\r\n    return (\r\n      <div className=\"mainTeacherForm\">\r\n        <div>\r\n\r\n          <div className=\"container\">\r\n            <header className=\"jumbotron\">\r\n              <h3>Création de nouvelles questions</h3>\r\n            </header>\r\n          </div>\r\n\r\n          <Form>\r\n            <div className=\"container\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"form-title\"><strong>Titre du formulaire</strong></label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"form-title\"\r\n                    value = {title}\r\n                    onChange = {this.onChangeTitle}\r\n                    validations = {[required]}\r\n                    autoComplete = \"off\"\r\n                  />\r\n              </div>\r\n            </div>\r\n\r\n\r\n            {this.createQuestionUI()}\r\n\r\n\r\n            <div className=\"container\">\r\n              <br></br>\r\n              <StyledButtonAddQuestion\r\n                  variant = \"contained\" onClick = {this.onClickAddQuestion}>Ajouter une question\r\n              </StyledButtonAddQuestion>\r\n              <br></br><br></br>\r\n              <StyledButtonSubmit\r\n                variant = \"contained\" onClick = {this.handleSubmit}>Valider\r\n              </StyledButtonSubmit>\r\n            </div>\r\n          </Form>\r\n\r\n          { this.state.message && \r\n            <div className=\"container\">\r\n              <div className=\"itsanerror\"><h3>Une erreur est survenu lors de l'envoi du formulaire</h3></div>\r\n            </div>\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class PostSubmitForm extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"container\">\r\n                    <header className=\"jumbotron\">\r\n                        <div className=\"success\">\r\n                            <h3>Formulaire envoyé avec succès !</h3>\r\n                            <br></br>\r\n                            <h5>Voici le code du quizz à partager aux élèves :</h5>\r\n                            <p className=\"quizMdp\">{\" \" + this.props.location.state.quizMdp}</p>\r\n                        </div>\r\n                    </header>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Bar } from 'react-chartjs-2';\r\n\r\n\r\nconst BarChart = ( props ) => {\r\n\r\n    const explanationLabels = props.explanationLabels;\r\n    const explanationValues = props.explanationValues;\r\n    return (\r\n        <div>\r\n            <Bar\r\n                data={{\r\n                    labels: explanationLabels,\r\n                    datasets: [{\r\n                        data: explanationValues,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BarChart;","import { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\nconst DoughnutChart = ({ labels, answerValues }) => {\r\n\r\n    return ( \r\n        <div>\r\n            <Doughnut\r\n                data={{\r\n                    labels: labels,\r\n                    datasets: [{\r\n                        data: answerValues,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                        ]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false\r\n                }}\r\n            />\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default DoughnutChart;","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {FaTimes} from 'react-icons/fa'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVert from '@material-ui/icons/MoreVert';\r\nimport BarChart from './BarChart';\r\nimport { Button, Container } from '@material-ui/core';\r\nimport DoughnutChart from './DoughnutChart';\r\n\r\nconst AllAnswers = () => {\r\n    const [allAnswers, setallAnswers] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [array, setarray] = useState(null);\r\n    const [answersArray, setanswersArray] = useState();\r\n    const [explanationsArray, setexplanationsArray] = useState()\r\n    const [currentStudent, setcurrentStudent] = useState(null)\r\n    const [explanationStats, setexplanationStats] = useState(null)\r\n\r\n    // FIND ALL ANSWERED QUESTIONS ON PAGE LOAD\r\n    useEffect(() => {\r\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllAnswered').then((response) => {\r\n          console.log(response.data);\r\n          setallAnswers(response.data) \r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }, []);\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index, quiz_id) => {\r\n        console.log(quiz)\r\n        setcurrentQuiz(quiz);\r\n        getStats(quiz_id);\r\n        setcurrentStudent(null);\r\n        setexplanationStats(null);\r\n        setarray(null);\r\n    }; \r\n\r\n    // RETRIEVE GROUPPED DATA FROM THE DATABASE BY SELECTED QUIZ ID \r\n    const getStats = (quiz_id) => {\r\n        Axios.get(`https://neuroeducation-feedback.herokuapp.com/api/groupStats/${quiz_id}`)\r\n        .then(response => {\r\n            if(response){\r\n            // SET GROUPPED ANSWERS \"FOR EACH STUDENT\" ARRAY\r\n            setanswersArray(response.data[0]._id.answer);\r\n            console.log(response.data[0]._id.answer)\r\n\r\n            // SET GROUPPED EXPLANATIONS \"FOR EACH STUDENT\" ARRAY\r\n            setexplanationsArray(response.data[0]._id.explanation);\r\n            console.log(response.data[0]._id.explanation)\r\n            }\r\n        })\r\n        .catch()\r\n    }\r\n\r\n    // SET SELECTED(CLICKED) STUDENT ARRAY\r\n    const setActiveStudent = (student) => {\r\n        console.log(student)\r\n        setcurrentStudent(student);\r\n    }\r\n\r\n    // MERGE ALL ANSWERS BY QUESTION NUMBER AND SET COUNT AND STATS\r\n    const stats = () => {\r\n        // MERGE ALL ANSWERS INTO AN ARRAY (arrAns)\r\n        const arrayAns = answersArray[0].map(function(value, index) {\r\n            const mergeAllStudentsByIndex = [value];\r\n            if(value){\r\n                for(let i=1; i<answersArray.length; i++){\r\n                    mergeAllStudentsByIndex.push(answersArray[i][index])\r\n                }\r\n            }\r\n            console.log(mergeAllStudentsByIndex);\r\n            return mergeAllStudentsByIndex;\r\n        });\r\n        console.log(arrayAns);\r\n\r\n         // MERGE ALL EXPLANATIONS INTO AN ARRAY (arrExp)\r\n        const arrayExp = explanationsArray[0].map(function(explanation, index) {\r\n            const mergeAllExplanation = [explanation];\r\n            if(explanation){\r\n                for(let i =1; i< explanationsArray.length; i++){\r\n                    mergeAllExplanation.push(explanationsArray[i][index])\r\n                }\r\n            }\r\n\r\n            return mergeAllExplanation;\r\n        });\r\n        console.log(arrayExp)\r\n        \r\n        // COUNT NUMBER OF OCCURRENCE OF AN ANSWER(\"Plutot Oui\", \"Non\"... etc) FOR EACH QUESTION\r\n        const countAnswers = arrayAns.map((answers, index) => {\r\n            console.log(array)\r\n            let all = {\r\n                \"Oui\" : 0,\r\n                \"Plutot Oui\" : 0,\r\n                \"Plutot Non\" : 0,\r\n                \"Non\": 0,\r\n            };\r\n            for(const answer of answers){\r\n                all = {...all,  [answer] : answers.filter((a) => {return a === answer}).length}\r\n            }\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setarray(countAnswers)\r\n\r\n        // COUNT NUMBER OF OCCURRENCE OF AN EXPLANATION(\"a\", \"b\", \"c\"... etc) FOR EACH QUESTION\r\n        const countExplanations = arrayExp.map((array,index) => {\r\n            //return arr.filter((a) => {return a === \"a\"}).length\r\n            console.log(array)\r\n            let all = {\r\n                a : 0,\r\n                b : 0,\r\n                c : 0,\r\n                d : 0,\r\n                e : 0\r\n            }\r\n            for(const letter of array){\r\n                all = {...all,  [letter] : array.filter((a) => {return a === letter}).length}\r\n            }\r\n            return all;\r\n        })\r\n        // SET COUNT AS A STATE\r\n        setexplanationStats(countExplanations);\r\n        \r\n    }\r\n\r\n    // RETRIEVE INTEGERS(VALUES) FOR EXPLANATIONS\r\n    const getExplanationValues = (explanation, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(explanation[key])\r\n        })\r\n        return values;\r\n    }\r\n    // RETRIEVE INTEGERS(VALUES) FOR Y, MY, MN, N QUESTIONS\r\n    const getAnswerValues = (answer, keys) => {\r\n        let values = [];\r\n        keys.forEach(key => {\r\n            values.push(answer[key])\r\n        })\r\n        return values;\r\n    }\r\n\r\n    //RETRIEVE KEYS(LABELS) FOR CHART DATA\r\n    const getLabels = object => {\r\n        return Object.keys(object);\r\n    }\r\n\r\n    const disp = () => {\r\n        console.log(array);\r\n        console.log(explanationStats)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-questions\">\r\n            <h4>All Answered List</h4>\r\n\r\n            <div className={`quiz`} >\r\n                {allAnswers && allAnswers.map((quiz, index) => (\r\n                    <h4 \r\n                    onClick= {() => setActiveQuiz(quiz, index, quiz.quiz_id)}\r\n                    > {quiz.quiz_id} {''} \r\n                        <FaTimes \r\n                            style={{color: 'red', cursor: 'pointer'}}\r\n                            //  onClick={() => onDelete(quiz._id)}\r\n                        />\r\n                    </h4>\r\n                ))}\r\n            </div>\r\n\r\n            <div>\r\n                {currentQuiz ? (\r\n                    <div>\r\n                        <center><h4>{'You Selected Quiz : '}{currentQuiz.quiz_id}</h4></center>\r\n                        \r\n                        <div >\r\n                            <h4>{'Student List : '}</h4>\r\n                            {currentQuiz.quiz_answers && currentQuiz.quiz_answers.map((students, index) => (\r\n                                <div>\r\n                                    <h4 onClick={() => setActiveStudent(students)}>{students.student_id}</h4>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <div>\r\n                            {currentStudent && (\r\n                                <div>\r\n                                    <h4>{'Showing Answers of  : '}{currentStudent.student_id}</h4>\r\n                                    {currentStudent && currentStudent.student_answers.map((answers, index) => (\r\n                                        <div> \r\n                                            <h4>{answers.question_answer_id}{' .'}{answers.answer}</h4>\r\n                                            <h4>{'Explanation : '}{answers.explanation}</h4>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <Button disableElevation variant=\"contained\" onClick={disp}>Log</Button> <span></span>\r\n                        <Button disableElevation variant=\"contained\" onClick={stats}>Click for Stats</Button>\r\n\r\n                        <Container>\r\n                            {array && (\r\n                                <div>\r\n                                    <Grid container spacing={3}>\r\n                                        {array && array.map((answer, index) => (\r\n                                            <Grid item sm={12} md={6} lg={4} >\r\n                                                <Card elevation={2}>\r\n                                                    <CardHeader\r\n                                                        action={\r\n                                                            <IconButton>\r\n                                                                <MoreVert />\r\n                                                            </IconButton>\r\n                                                        }\r\n                                                        title=\"Graphique en anneau\"\r\n                                                        subheader={\"Question. \" + (index + 1)} \r\n                                                    />\r\n                                                    <CardContent>\r\n                                                        <DoughnutChart labels={getLabels(answer)} answerValues={getAnswerValues(answer, getLabels(answer))} />\r\n                                                    </CardContent>\r\n                                                </Card>\r\n                                            </Grid>\r\n\r\n                                        ))}\r\n                                    </Grid>\r\n                                </div>\r\n                                                        \r\n                                ) }\r\n\r\n                            {explanationStats && (\r\n                                <div>\r\n                                        <Grid container spacing={3} >\r\n                                            {explanationStats && explanationStats.map((explanation, index) => (\r\n                                                <Grid item sm={12} md={6} lg={4}>\r\n                                                    <Card elevation={2}>\r\n                                                        <CardHeader\r\n                                                        action={\r\n                                                            <IconButton>\r\n                                                                <MoreVert/>\r\n                                                            </IconButton>\r\n                                                        } \r\n                                                        title=\"Diagramme à bandes\"\r\n                                                        subheader={`Question. ${index + 1}`}\r\n                                                        />\r\n                                                        <CardContent>\r\n                                                            <BarChart explanationLabels={getLabels(explanation)} explanationValues={getExplanationValues(explanation, getLabels(explanation))} />\r\n                                                        </CardContent>\r\n                                                    </Card>\r\n                                                </Grid>\r\n                                            ))}\r\n                                        </Grid>\r\n                                </div>         \r\n                                )}\r\n                        </Container>    \r\n                    </div>\r\n                ) : (<h4>Please Select A Quiz to view Answers</h4>)}\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllAnswers;","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\nimport {FaTimes} from 'react-icons/fa'\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n\r\nconst AllQuestions = () => {\r\n    const [allQuizzes, setallQuizzes] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [radioOptions, setradioOptions] = useState({})\r\n    const [checkedItems, setCheckedItems] = useState([]); \r\n    const [currentUser] = useState(AuthService.getCurrentUser()) \r\n    \r\n    // LOAD ALL QUIZZES FROM DATABASE ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n    useEffect(() => {\r\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllQ').then((response) => {\r\n          console.log(response.data);\r\n          setallQuizzes(response.data) \r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    }, []);\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index) => {\r\n        console.log(quiz)\r\n        setcurrentQuiz(quiz);\r\n        \r\n    };\r\n\r\n    // RETURN CHECKED VALUE(true or false)\r\n    const checkRadioButton = (question_id, label) => {\r\n        if (!radioOptions[question_id]) {\r\n            return false;\r\n        }\r\n        return radioOptions[question_id] === label;\r\n    }\r\n\r\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n    const setradio = (id , value) => {\r\n        setradioOptions((state) => {\r\n            console.log(state);\r\n            return {\r\n                ...state,\r\n                [id] : value\r\n            }\r\n        });\r\n    }\r\n\r\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n\r\n\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n        console.log(find_question)\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        else{\r\n            setCheckedItems([\r\n                ...checkedItems,\r\n                 {\r\n                    question_answer_id : question_id,\r\n                    answer: radioOptions[question_id],\r\n                    explanation: value \r\n                }\r\n            ]);\r\n        }\r\n        \r\n    }\r\n\r\n    // SUBMIT ANSWERS TO THE BACKEND\r\n    const submitAnswers = () =>{\r\n        const answers = {\r\n            quiz_id : currentQuiz.quiz_id,\r\n            quiz_answers : {\r\n                student_id : currentUser.message.firstname+' '+currentUser.message.lastname,\r\n                student_answers : checkedItems\r\n            }\r\n        }\r\n        console.log(\"Radio Answer: \", radioOptions);\r\n        console.log(\"CheckedItems: \", checkedItems);\r\n        console.log(\"Final: \", answers);\r\n        Axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n            answers\r\n          }).then((res) => {\r\n                console.log(res);\r\n                if(res){\r\n                    //   window.location.reload(false);\r\n                    setCheckedItems([]);\r\n                    setradioOptions({});\r\n                }\r\n          }).catch(err => {\r\n                console.log(err);            \r\n          });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    //DELETE SLECTED QUIZ WITH THE QUIZ ID FROM DAATABASE\r\n    // const onDelete = (id) => {\r\n    //     Axios.delete(`https://neuroeducation-feedback.herokuapp.com/api/delete/${id}`)\r\n    //     .then((res) => {\r\n    //         console.log(res)\r\n    //         setallQuizzes(allQuizzes.filter((question) => question._id !== id))\r\n    //     })\r\n    //     .catch(err => {\r\n    //         console.log(err); \r\n    //     });\r\n    // }; \r\n\r\n\r\n    return (\r\n        <div className=\"container-questions\">\r\n            <h4>Quiz List</h4>\r\n            <div className={`quiz`} >\r\n                {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                    <h4 \r\n                    onClick= {() => setActiveQuiz(quiz, index)}\r\n                    > {quiz.quiz} {''} \r\n                        <FaTimes \r\n                            style={{color: 'red', cursor: 'pointer'}}\r\n                        />\r\n                    </h4>\r\n                ))}\r\n            </div>\r\n\r\n            <div>\r\n                {currentQuiz ? (\r\n                    <div> \r\n                        <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n                        {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                            <div key={questions.question_id}>\r\n                                <h4>{questions.question_id}{'. '}{questions.question_title}</h4>    \r\n                                <div>\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Oui\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Oui\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Plutot Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Non\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Plutot Non\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Non\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Non\r\n                                </div>\r\n                                {radioOptions[questions.question_id] === \"Plutot Non\"\r\n                                || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n                                || radioOptions[questions.question_id] === \"Non\" ? (\r\n                                    <div>\r\n                                        {questions.question_options && questions.question_options.map((options, index) => ( \r\n                                            <div>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" value={options.options_id} \r\n                                                    checked={checkedItems[options.option_text]}  \r\n                                                    onChange={(e) => \r\n                                                        setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                                                    }\r\n                                                    />\r\n                                                    <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                                                </label>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ) : (<span>No Explanation Needed</span>)}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (<h4>Please click on a quiz</h4>)}\r\n            </div>\r\n            <button className='btn' onClick={submitAnswers}>Submit Answers</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllQuestions\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Ce champ est obligatoire !\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default class AdminRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\r\n\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      admin: false,\r\n      teacher: false,\r\n      roles : [],\r\n      successful: false,\r\n      message: \"\",\r\n      noRoleError: false,\r\n      mdpTmp: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCheckbox(e) {\r\n    let target = e.target;\r\n    let value = target.checked;\r\n    let name = target.name;\r\n    this.setState({\r\n        [name]: value,\r\n        noRoleError: false\r\n    })\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (!this.state.admin && !this.state.teacher) {\r\n      return (this.setState({\r\n        noRoleError: true\r\n      }))\r\n    }\r\n    else {\r\n      let roles = this.state.roles;\r\n      if (this.state.admin) {\r\n        roles.push(\"ROLE_ADMIN\");\r\n      }\r\n      if (this.state.teacher) {\r\n        roles.push(\"ROLE_TEACHER\")\r\n      }\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.adminRegister(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.roles,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: \"Compte créé avec succès\",\r\n            successful: true,\r\n            mdpTmp: response.data.mdpTmp\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Prenom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangeFirstname}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Nom</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangeLastname}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"teacher\"\r\n                      checked={this.state.teacher}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Professeur\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      name=\"admin\"\r\n                      checked={this.state.admin}\r\n                      onChange={this.onChangeCheckbox}\r\n                    />\r\n                    <label className=\"form-check-label\">\r\n                    Administrateur\r\n                    </label>\r\n                  </div>\r\n\r\n                  {this.state.noRoleError && \r\n                    <div className=\"container\">\r\n                      <div className=\"itsanerror\">Vous devez sélectionner au moins un rôle</div>\r\n                    </div>\r\n                  }\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Créer le compte</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n\r\n                  {this.state.mdpTmp && (\r\n                    <div>\r\n                      <br></br><br></br>\r\n                      Votre mot de passe temporaire est :\r\n                      {\" \" + this.state.mdpTmp}\r\n                      <br></br><br></br>\r\n                      Vous pourrez le modifier en vous connectant à votre profil\r\n                    </div>\r\n                  )}\r\n                  \r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n// import axios from 'axios';\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Home2 from \"./components/home2.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport PostSubmitForm from \"./components/postSubmitForm.component\";\r\nimport AllAnswers from \"./components/all-answers.component\";\r\nimport AllQuestions from './components/allquestions.component';\r\nimport AdminRegister from \"./components/admin-register.component\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showAdminBoard: false,\r\n      showTeacherBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showAdminBoard: user.message.roles.includes(\"ROLE_ADMIN\"),\r\n        showTeacherBoard: user.message.roles.includes(\"ROLE_TEACHER\"),\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n     const { currentUser, showAdminBoard, showTeacherBoard } = this.state;\r\n\r\n    return (\r\n      <div>\r\n         <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n           <Link to={\"/\"} className=\"navbar-brand\">\r\n             Outsmarted\r\n           </Link>\r\n           <div className=\"navbar-nav mr-auto\">\r\n             <li className=\"nav-item\">\r\n               <Link to={\"/home\"} className=\"nav-link\">\r\n                 Accueil\r\n               </Link>\r\n             </li>\r\n\r\n             {(showAdminBoard || showTeacherBoard) && (\r\n              <div>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/admin\"} className=\"nav-link\">\r\n                    Ajouter un quiz\r\n                  </Link>\r\n                </li>\r\n               </div> \r\n             )}\r\n\r\n             {showAdminBoard && (\r\n               <li className=\"nav-item\">\r\n                 <Link to={\"/adminRegister\"} className=\"nav-link\">\r\n                   Ajouter un compte\r\n                 </Link>\r\n               </li>\r\n             )}\r\n\r\n            {(showAdminBoard || showTeacherBoard) && (\r\n              <div>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/questions\"} className=\"nav-link\">\r\n                    Page Questions\r\n                  </Link>\r\n                </li>\r\n               </div> \r\n             )}\r\n\r\n            {(showAdminBoard || showTeacherBoard) && (\r\n              <div>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/answers\"} className=\"nav-link\">\r\n                    Page Réponses\r\n                  </Link>\r\n                </li>\r\n               </div> \r\n             )}\r\n\r\n              {(currentUser && !showTeacherBoard) && (\r\n               <li className=\"nav-item\">\r\n                 <Link to={\"/user\"} className=\"nav-link\">\r\n                   Utilisateur\r\n                 </Link>\r\n               </li>\r\n              )}\r\n           </div>\r\n\r\n           {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/profile\"} className=\"nav-link\">\r\n                  {currentUser.message.firstname}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                  Déconnexion\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                  Se connecter\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/register\"} className=\"nav-link\">\r\n                  Créer un compte\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n\r\n          </nav>\r\n\r\n          <div className=\"container pt-3\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/home\" component={Home2} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/adminRegister\" component={AdminRegister} />\r\n              <Route exact path=\"/profile\" component={Profile} />\r\n              <Route path=\"/user\" component={BoardUser} />\r\n              <Route path=\"/questions\" component={AllQuestions} />\r\n              <Route path=\"/answers\" component={AllAnswers} />\r\n              <Route path=\"/admin\" component={BoardAdmin} />\r\n              <Route path=\"/postSubmitForm\" component={PostSubmitForm} />\r\n            </Switch>\r\n          </div>\r\n         \r\n\r\n      </div>\r\n    );\r\n\r\n  }\r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// serviceWorker.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}