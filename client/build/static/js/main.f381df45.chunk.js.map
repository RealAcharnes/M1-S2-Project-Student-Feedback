{"version":3,"sources":["services/auth.service.js","components/formCard.js","components/login.component.js","components/register.component.js","components/home.component.js","components/home2.component.js","components/formCard2.js","components/modifyPassword.component.js","components/profile.component.js","services/search.service.js","components/Title.js","components/LineLabels.js","components/LineChart.js","components/Flippy.js","components/board-user.component.js","services/admin-submit-form.js","components/confirm-dialogue.js","components/menu.js","components/board-admin.component.js","components/postSubmitForm.component.js","components/BarChart.js","components/DoughnutChart.js","components/all-answers.component.js","components/allquestions.component.js","components/admin-register.component.js","components/protected-routes.component.js","components/Paginate.js","components/all-students.component.js","components/verify-account.component.js","components/Admin/admin-dashboard.jsx","components/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","email","password","axios","post","then","response","data","token","localStorage","setItem","JSON","stringify","removeItem","firstname","lastname","password_confirmation","roles","old_password","parse","getItem","FormCard","content","float","Card","style","width","backgroundImage","maxWidth","margin","marginTop","backgroundColor","height","minWidth","Alert","props","elevation","variant","Login","handleClose","setState","open","handleLogin","bind","onChangeEmail","onChangePassword","state","loading","message","e","this","target","value","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","className","onSubmit","ref","c","padding","paddingTop","paddingBottom","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","successful","htmlFor","color","type","size","onChange","required","fullWidth","marginBottom","disabled","onClick","pathname","border","display","Component","isEmail","vlastname","vfirstname","vpassword","vpasswordConfirmation","Register","handleRegister","onChangeFirstname","onChangeLastname","onChangePasswordConfirmation","register","clear","name","validations","Home","Home2","title","description","textAlign","borderRadius","src","alt","FormCard2","maxHeight","ModifyPassword","useState","oldPw","setOldPw","newPw","setNewPw","confirmNewPw","setConfirmNewPw","setmessage","setsuccessful","currentUser","currentuser","errors","seterrors","setopen","logOut","ApplyModifications","validate","changePassword","res","catch","errMessage","console","log","id","class","placeholder","marginRight","Profile","getCurrentUser","logout","undefined","showAdminBoard","showTeacherBoard","to","get","answers","Title","noUnderline","subHeader","Typography","LineLabels","integer","array","LineChart","labels","datasets","borderColor","options","maintainAspectRatio","legend","scales","yAxes","ticks","beginAtZero","tooltips","callbacks","label","item","datax","string","index","FlippyItems","frontSide","backSide","flipOnHover","flipOnClick","flipDirection","BoardUser","search","setsearch","errorMessage","seterrorMessage","currentQuiz","setcurrentQuiz","radioOptions","setradioOptions","checkedItems","setCheckedItems","allQuizzes","setallQuizzes","displayAllAnswered","setdisplayAllAnswered","setvalidate","lineArray","setLineArray","actualQuiz","setactualQuiz","displayMain","setdisplayMain","displayLineChart","setDisplayLineChart","displayCurrentQuiz","setdisplayCurrentQuiz","setValue","evolution","goBack","getLineData","groupArray","dataArray","forEach","setActiveQuiz","quiz","tempLineArray","quiz_answers","student_answers","answer","getAllAns","SearchService","searchQuiz","quiz_id","useEffect","student_id","quizzes","err","checkRadioButton","question_id","setradio","checkedArray","map","x","find","a","question_answer_id","explanation","role","Flippy","onMouseOver","setActiveQuizRefreshComponentToEffectChanges","CardHeader","avatar","Avatar","toUpperCase","CardContent","Tooltip","IconButton","questions","indexx","fontSize","question_title","checked","question_options","options_id","option_text","setCheckbox","options_text","timestamp","Date","now","formatedTimestamp","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","quiz_title","time_submitted","Grid","container","spacing","attempt","md","sm","lg","component","subheader","created_by","ConfirmDialogue","confirmDialog","Dialog","isOpen","DialogTitle","DialogContent","subTitle","DialogActions","onDiscard","onConfirm","MenuOption","React","anchorEl","setAnchorEl","Boolean","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","PaperProps","ITEM_HEIGHT","option","MenuItem","selected","onclick","icon","MyForm","onChangeQuestion","onClickAddExplanation","explanations","delete","onQuestionChange","indexExplanation","onExplanationChange","onRemoveExplanationClick","onAddExplanationClick","element","onChangeExplanation","onClickRemoveExplanation","question","deleteQuiz","autoComplete","createExplanationUI","BoardAdmin","createQuiz","laststate","displayQuizzes","displayCreate","displayQuiz","backToQuizzes","edit","getQuiz","quiz_idd","currentQuizQuestions","toggle","allow","setConfirmDialog","subtitle","onconfirm","discard","handleToggle","allowQuiz","success","updateQuiz","updated_questions","i","document","getElementById","expArr","j","alphabet","String","fromCharCode","expId","exp","danger","filter","editQuiz","addQuestionEdit","prevState","deleteQuestionEdit","splice","addExplanationEdit","newExplanation","deleteExplanationEdit","questionIndex","explanationIndex","handleOnchangeExpEdit","handleOnchangeQuesEdit","onClickAddQuestion","onChangeTitle","handleSubmit","test","submitted","quizMdp","updateTitle","updateSubTitle","user","menuOptions","alert","indexQuestion","PostForm","submit","handleQuestionChange","onTitleChange","handleTitleChange","handleExplanationChange","handleAddExplanationClick","handleRemoveExplanationClick","onClickDelQuestion","SnackbarContent","position","top","action","fontsize","Switch","inputProps","readOnly","fontWeight","createQuestionUI","PostSubmitForm","BarChart","names","explanationArray","explanationLabels","explanationValues","barData","displayColors","DoughnutChart","answerValues","pieData","AllAnswers","allAnswers","setallAnswers","setarray","answersArray","setanswersArray","explanationsArray","setexplanationsArray","currentStudent","setcurrentStudent","explanationStats","setexplanationStats","showSpinner","setShowSpinner","allQuestions","setAllQuestions","allExplanations","setAllExplanations","setPieData","setBarData","displayAllQuizzes","setdisplayAllQuizzes","displayStudentList","setdisplayStudentList","displayStats","setdisplayStats","Axios","handlePieChartChange","handleBarChartChange","getStats","_id","handleStudentList","stats","arrayAns","mergeAllStudentsByIndex","arrayExp","mergeAllExplanation","countAnswers","all","Oui","Non","labelsArray","countExplanations","b","d","letter","getExplanationValues","keys","values","key","getAnswerValues","getLabels","object","Object","substr","students","Container","AllQuestions","setdisplayQuiz","setdisplayQuizzes","Button","vusername","AdminRegister","onChangeCheckbox","admin","teacher","noRoleError","mdpTmp","adminRegister","ProtectedRoute","isAuthenticated","isAuthorized","includes","Paginate","allStudents","getAllQuizzes","start","setStart","end","setEnd","expanded","setExpanded","slice","student","Accordion","panel","isExpanded","AccordionSummary","expandIcon","marginLeft","AccordionDetails","Chip","startIcon","old","newStart","newEnd","endIcon","AllStudents","setallStudents","displayEvolution","setdisplayEvolution","setActiveStudent","VerifyAccount","params","match","useHistory","verifyAccount","useStyles","makeStyles","root","media","AdminDashboard","classes","dashboardArray","path","children","actions","one","two","CardActionArea","gutterBottom","CardActions","newPath","href","routeChange","child","route","list","fullList","TemporaryDrawer","left","bottom","right","toggleDrawer","anchor","clsx","onKeyDown","List","background","ListItem","button","ListItemIcon","ListItemText","primary","lists","text","link","textDecoration","Fragment","Drawer","theme","createMuiTheme","palette","main","App","handleClick","moveToProfile","adminTeacher","allUsers","studentAdmin","navList","ThemeProvider","fontFamily","textTransform","font","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.f381df45.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n// const API_URL = \"http://localhost:5050/api/\";\r\n\r\nclass AuthService {\r\n  login(email, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        email,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(firstname, lastname, email, password, password_confirmation) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      firstname, \r\n      lastname, \r\n      email, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  verifyAccount(token) {\r\n    return axios.post(API_URL + \"verifyAccount\", {\r\n      token\r\n    });\r\n  }\r\n\r\n  adminRegister(firstname, lastname, email, roles) {\r\n    return axios\r\n    .post(API_URL + \"signup\", {\r\n      firstname,\r\n      lastname,\r\n      email,\r\n      roles\r\n    });\r\n  }\r\n\r\n  changePassword(email, old_password, password, password_confirmation) {\r\n    return axios\r\n    .post(API_URL + \"changePassword\", {\r\n      email, \r\n      old_password, \r\n      password, \r\n      password_confirmation\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\n\r\n\r\n\r\nexport default function FormCard({content, float}) {\r\n\r\n\r\n  return (\r\n    <Card style={{  width: \"100%\", backgroundImage: `url(${\"/blueBG.png\"})`, maxWidth:\"890px\",  margin: \"auto\", marginTop:\"70px\"}}\r\n    >\r\n      <div style={{backgroundColor: \"white\", height: \"100%\",  maxWidth:\"480px\", minWidth:\"300px\", float: float}}>\r\n            {content}\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport FormCard from './formCard'\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.email, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage,\r\n            open: true\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        \r\n\r\n\r\n        <div >\r\n            \r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n\r\n            <FormCard\r\n              content={\r\n            <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"70px\", paddingBottom:\"60px\"}}>\r\n              {this.state.message && (\r\n                // <div className=\"form-group\">\r\n                //   <div className=\"alert alert-danger\" role=\"alert\">\r\n                //     {this.state.message}\r\n                //   </div>\r\n                // </div>\r\n                <Snackbar anchorOrigin={{ vertical :'center', horizontal: 'center' }}open={this.state.open} autoHideDuration={6000} onClose={()=>this.handleClose()}>\r\n                  <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\r\n                    {this.state.message}\r\n                  </Alert>\r\n                </Snackbar>\r\n              )}\r\n              <h2 style={{marginTop: \"30px\"}}>Bienvenue sur la page de connexion</h2>\r\n              <p>C'est génial que tu sois de retour</p>\r\n\r\n              <div style={{marginTop: \"50px\"}}>\r\n                <label htmlFor=\"email\" style={{marginTop: \"30px\", color:\"black\"}}><strong>Email de l'utilisateur</strong></label>\r\n                <input\r\n                      type=\"email\"\r\n                      size=\"small\"\r\n                      onChange={this.onChangeEmail}\r\n                      value={this.state.email}\r\n                      variant=\"outlined\"\r\n                      className=\"form-control\"\r\n                      required \r\n                  />\r\n                <label htmlFor=\"password\" style={{marginTop: \"30px\", color:\"black\"}}><strong>Mot de passe</strong></label>\r\n                <input\r\n                      type=\"password\"\r\n                      size=\"small\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      required \r\n                      className=\"form-control\" \r\n                  />\r\n                </div>  \r\n                <div>\r\n                <span style={{width: \"100%\", float:\"right\", marginTop: \"30px\", marginBottom: \"30px\"}}>Mot de passe oublié ?</span>\r\n                </div>\r\n                <div style={{marginTop: \"15px\", width: \"100%\"}}>\r\n                  <button \r\n                  className=\"btnn\" style={{\"font-size\" : \"12px\", width: \"45%\"}}\r\n                  disabled={this.state.loading}\r\n                  >\r\n                    {this.state.loading && (\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                    )}\r\n                    SE CONNECTER\r\n                    </button>\r\n                  <button\r\n                  onClick={() =>  this.props.history.push({\r\n                       pathname: \"/register\",\r\n                     })}\r\n                  className=\"btnn\" \r\n                  style={{\"font-size\" : \"12px\", backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\", width: \"45%\"}}>CREER EN COMPTE</button>\r\n                </div>\r\n            </div>\r\n              }\r\n              float=\"left\"\r\n            />\r\n\r\n            </div>\r\n\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport FormCard from './formCard'\r\nimport AuthService from \"../services/auth.service\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n      return (\r\n        <Alert  severity={\"warning\"}>\r\n        Ce champ est obligatoire !\r\n        </Alert>\r\n      );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <Alert  severity={\"warning\"}>\r\n      Adresse email non valide.\r\n      </Alert>\r\n    );\r\n  }\r\n};\r\n\r\nconst vlastname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <Alert  severity={\"warning\"}>\r\n      Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </Alert>\r\n    );\r\n  }\r\n};\r\n\r\nconst vfirstname = value => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <Alert  severity={\"warning\"}>\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.    \r\n      </Alert>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 50) {\r\n    return (\r\n      <Alert  severity={\"warning\"}>\r\n      Le mot de passe doit contenir entre 6 et 50 charactères.\r\n      </Alert>\r\n    );\r\n  }\r\n};\r\nconst vpasswordConfirmation = value => {\r\n  if (value.length < 6 || value.length > 50) {\r\n    return (\r\n      <Alert  severity={\"warning\"}>\r\n      Le mot de passe doit contenir entre 6 et 50 charactères.\r\n      </Alert>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangePasswordConfirmation = this.onChangePasswordConfirmation.bind(this);\r\n\r\n    this.state = {\r\n      lastname: \"\",\r\n      firstname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      successful: false,\r\n      message: \"\",\r\n      open: false\r\n    };\r\n  }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePasswordConfirmation(e) {\r\n    this.setState({\r\n      password_confirmation: e.target.value\r\n    });\r\n  }\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.password_confirmation,\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true,\r\n            open: true\r\n          });\r\n\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage,\r\n            open : true\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div >\r\n        {(this.state.message && this.state.successful) && (\r\n          <div>\r\n            <Snackbar anchorOrigin={{ vertical :'center', horizontal: 'center' }}open={this.state.open} autoHideDuration={600000} onClose={()=>this.handleClose()}>\r\n            <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\r\n              {this.state.message}\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          <FormCard\r\n          content={\r\n            <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"50px\", paddingBottom:\"60px\", clear: \"both\" }}>\r\n                <p>{this.state.message}</p>\r\n            </div>\r\n          }\r\n          />\r\n          </div>\r\n        )}\r\n\r\n          <Form\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n\r\n              <FormCard\r\n                  content={\r\n                <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"50px\", paddingBottom:\"60px\", clear: \"both\" }}>\r\n                  {this.state.message && (\r\n                      <Snackbar anchorOrigin={{ vertical :'center', horizontal: 'center' }}open={this.state.open} autoHideDuration={600000} onClose={()=>this.handleClose()}>\r\n                      <Alert onClose={()=>this.handleClose()} severity={this.state.successful ? \"success\" : \"warning\" }>\r\n                        {this.state.message}\r\n                      </Alert>\r\n                    </Snackbar>\r\n                  )}\r\n                  <h2>Bienvenue sur la page d'inscription</h2>\r\n\r\n                  <div style={{marginTop: \"20px\"}}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"firstname\" style={{marginTop: \"20px\", color:\"black\"}}><strong>Prenom</strong></label>\r\n                      <Input\r\n                          type=\"text\"\r\n                          size=\"small\"\r\n                          name=\"firstname\"\r\n                          value={this.state.firstname}\r\n                          onChange={this.onChangeFirstname}\r\n                          validations={[required, vfirstname]}\r\n                          className=\"form-control\"\r\n                          required \r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">  \r\n                      <label htmlFor=\"lastname\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Nom</strong></label>\r\n                      <Input\r\n                            type=\"text\"\r\n                            size=\"small\"\r\n                            name=\"lastname\"\r\n                            value={this.state.lastname}\r\n                            onChange={this.onChangeLastname}\r\n                            validations={[required, vlastname]}\r\n                            className=\"form-control\"\r\n                            required \r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">    \r\n                      <label htmlFor=\"email\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Email</strong></label>\r\n                      <Input\r\n                            type=\"email\"\r\n                            size=\"small\"\r\n                            name=\"email\"\r\n                            onChange={this.onChangeEmail}\r\n                            value={this.state.email}\r\n                            className=\"form-control\"\r\n                            required \r\n                            validations={[required, email]}\r\n                      />\r\n                    </div> \r\n\r\n                    <div className=\"form-group\">    \r\n                      <label htmlFor=\"password\" style={{marginTop: \"10px\", color:\"black\"}}><strong>Mot de passe</strong></label>\r\n                      <Input\r\n                            type=\"password\"\r\n                            size=\"small\"\r\n                            name=\"password\"\r\n                            value={this.state.password}\r\n                            onChange={this.onChangePassword}\r\n                            validations={[required, vpassword]}\r\n                            className=\"form-control\"\r\n                            required  \r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">    \r\n                      <label htmlFor=\"password_confirmation\" style={{marginTop: \"10px\", color:\"black\"}}><strong> Confirmer Mot de passe</strong></label>\r\n                      <Input\r\n                            type=\"password\"\r\n                            size=\"small\"\r\n                            name=\"password_confirmation\"\r\n                            value={this.state.password_confirmation}\r\n                            onChange={this.onChangePasswordConfirmation}\r\n                            validations={[required, vpasswordConfirmation]}\r\n                            className=\"form-control\"\r\n                            required  \r\n                      />\r\n                    </div>\r\n\r\n                  </div>  \r\n\r\n                  <div style={{marginTop: \"15px\", width: \"100%\"}} className=\"form-group\">\r\n                    <button\r\n                    onClick={() =>  this.props.history.push({\r\n                      pathname: \"/login\",\r\n                    })} \r\n                    className=\"btnn\" style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\",\"font-size\" : \"12px\", width: \"44%\"}}\r\n                    disabled={this.state.loading}\r\n                    >\r\n                      {this.state.loading && (\r\n                      <span className=\"spinner-border spinner-border-sm\"></span>\r\n                      )}\r\n                      SE CONNECTER\r\n                      </button> \r\n                    <button \r\n                    className=\"btnn\" \r\n                    style={{\"font-size\" : \"12px\", width: \"45%\"}} \r\n                    onClick={this.handleRegister}\r\n                    >\r\n                      CREER EN COMPTE\r\n                      </button>\r\n                  </div>\r\n                </div>\r\n                  }\r\n                  float=\"right\"\r\n                />\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // UserService.getPublicContent().then(\r\n    //   response => {\r\n    //     this.setState({\r\n    //       content: response.data.body\r\n    //     });\r\n    //   },\r\n    //   error => {\r\n    //     this.setState({\r\n    //       content:\r\n    //         (error.response && error.response.data) ||\r\n    //         error.message ||\r\n    //         error.toString()\r\n    //     });\r\n    //   }\r\n    // );\r\n    this.setState({\r\n      content: \"Bienvenue dans votre application de Neuroéducation\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Home2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      title: \"Bienvenue dans votre application de Neuroéducation\",\r\n      description: \"Cette application permet aux élèves de prendre conscience de leurs stratégies de réussite et des potentielles origines de leurs erreurs\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <header className=\"jumbotron\">\r\n                    <h3>{this.state.title}</h3>\r\n                </header>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h5>{this.state.description}</h5>\r\n                <div style={{textAlign: \"center\", marginTop: \"20px\"}}>\r\n                  <img style={{height: \"500px\", width: \"500px\", borderRadius: \"10px\"}} src=\"/brain-storming.png\" alt=\"students brainstorming\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\n\r\n\r\n\r\nexport default function FormCard2({content, float}) {\r\n  return (\r\n    <Card style={{ height: \"850px\", maxHeight:\"900\", width: \"100%\", backgroundImage: `url(${\"/blueBG.png\"})`, maxWidth:\"890px\",  margin: \"auto\", marginTop:\"70px\"}}\r\n    >\r\n      <div style={{backgroundColor: \"white\",height: \"100%\",  minWidth:\"300px\", maxWidth:\"600px\", maxHeight:\"770px\" , width: \"100%\",  margin:\"auto\", marginTop: \"40px\",}}>\r\n            {content}\r\n      </div>\r\n    </Card>\r\n  );\r\n}","import {useState} from \"react\";\r\n// import CheckButton from \"react-validation/build/button\";\r\nimport FormCard2 from './formCard2'\r\nimport AuthService from '../services/auth.service'\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n\r\nconst ModifyPassword = (props) =>{\r\n    const [oldPw, setOldPw] = useState('')\r\n    const [newPw, setNewPw] = useState('')\r\n    const [confirmNewPw, setConfirmNewPw] = useState('')\r\n    const [message, setmessage] = useState('');\r\n    const [successful, setsuccessful] = useState(false);\r\n    const [email] = useState(props.email)\r\n    const currentUser = props.currentuser;\r\n    const [errors, seterrors] = useState(null);\r\n    const [open, setopen] = useState(false);\r\n    const logOut = props.logOut\r\n\r\n\r\n    const validate = (email, newPw, confirmNewPw) => {\r\n        if(newPw !== confirmNewPw){\r\n            seterrors(['Nouveau mot de passe non conforme' ])\r\n        }\r\n        if(email===\"\" || email=== null){\r\n          seterrors([...errors, 'Veuillez vous reconnecter' ])\r\n        }\r\n        else{\r\n          seterrors(null)  \r\n        }\r\n    }\r\n\r\n    const ApplyModifications = (e) => {\r\n      e.preventDefault();\r\n      seterrors(null)  \r\n      setmessage('');\r\n      setsuccessful(false);\r\n\r\n      validate(newPw, confirmNewPw);\r\n\r\n      if(errors){\r\n        setmessage(errors.toString())\r\n        setopen(true)\r\n      }\r\n      else{\r\n        AuthService.changePassword(email, oldPw, newPw, confirmNewPw)\r\n        .then((res) => {\r\n          setmessage(\"Mot de passe modifié avec succès\");\r\n          setsuccessful(true);\r\n          setopen(true)\r\n        })\r\n        .catch((error) =>{\r\n          const errMessage =\r\n            (error.response.data.message[0].password || (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message)) ||\r\n            error.message ||\r\n            error.toString();\r\n            console.log(errMessage);\r\n          setmessage(errMessage);\r\n          setsuccessful(false);\r\n          setopen(true)\r\n        })\r\n      }\r\n    }\r\n\r\n    const handleClose = () => {\r\n      setopen(false)\r\n    }\r\n    \r\n\r\n\r\n\r\nreturn (\r\n    <div >\r\n        <form\r\n          onSubmit={(e) => ApplyModifications(e)} \r\n        >\r\n          <FormCard2\r\n          content={\r\n            <div  className=\"formCardContent\">\r\n              <Snackbar anchorOrigin={{ vertical :'center', horizontal: 'center' }}open={open} autoHideDuration={6000} onClose={()=>handleClose()}>\r\n                <Alert onClose={()=>handleClose()} severity={successful ? \"success\" : \"warning\" }>\r\n                  {message}\r\n                </Alert>\r\n              </Snackbar>\r\n              <header className=\"jumbotron\">\r\n                <h3>\r\n                    Profile : <strong>{currentUser.message.firstname}{' '}{currentUser.message.lastname}</strong>\r\n                    <span style={{float: \"right\"}}><button className=\"btnn\" onClick={logOut}>Deconnexion</button></span> \r\n                </h3>\r\n              </header>\r\n\r\n              <div \r\n              className=\"row2\" \r\n              style={{margin: \"20px\", marginTop: \"20px\", width : \"80%\",marginBottom:\"10px\"}}\r\n              >\r\n                <h5>Informations sur le compte</h5>\r\n                </div>  \r\n                <div \r\n                className=\"row1\" \r\n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                  <label style={{width: \"40%\"}}>Prenom</label>\r\n                  <input \r\n                  type=\"text\" \r\n                  id=\"firstname\" \r\n                  class=\"input-field\" \r\n                  disabled \r\n                  style={{width: \"60%\"}}\r\n                  value={currentUser.message.firstname}\r\n                  />    \r\n                </div>\r\n\r\n                <div \r\n                className=\"row1\" \r\n                style={{margin: \"20px\", marginTop: \"10px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                  <label style={{width: \"40%\"}}>Nom</label>\r\n                  <input \r\n                  type=\"text\" \r\n                  id=\"lastname\" \r\n                  class=\"input-field\" \r\n                  disabled \r\n                  style={{width: \"60%\"}}\r\n                  value={currentUser.message.lastname}\r\n                  />    \r\n                </div>\r\n                <div \r\n                className=\"row1\" \r\n                style={{margin: \"20px\", marginTop: \"10px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                  <label style={{width: \"40%\"}}>Email</label>\r\n                  <input \r\n                  type=\"email\" \r\n                  id=\"email\" \r\n                  class=\"input-field\" \r\n                  disabled \r\n                  style={{width: \"60%\"}}\r\n                  value={currentUser.message.email}\r\n                  />    \r\n                </div>\r\n\r\n                <div \r\n                className=\"row2\" \r\n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                <h5>Changement de mot de passe</h5>\r\n                </div> \r\n\r\n                <div \r\n                className=\"row1\" \r\n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                  <label style={{width: \"40%\"}}>Ancien mot de passe</label>\r\n                  <input \r\n                  type=\"password\" \r\n                  name=\"oldPw\" \r\n                  value={oldPw} \r\n                  placeholder=\"******\" \r\n                  onChange={(e) => setOldPw(e.target.value)} \r\n                  class=\"input-field\" \r\n                  style={{width: \"60%\"}}\r\n                  required\r\n                  />    \r\n                </div>\r\n\r\n                <div \r\n                className=\"row1\" \r\n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                  <label style={{width: \"40%\"}}> Nouveau mot de passe </label>\r\n                  <input \r\n                  type=\"password\" \r\n                  name=\"newPw\" \r\n                  value={newPw} \r\n                  placeholder=\"******\" \r\n                  onChange={(e) => setNewPw(e.target.value)} \r\n                  class=\"input-field\" \r\n                  style={{width: \"60%\"}}\r\n                  required\r\n                  />    \r\n                </div>\r\n\r\n                <div \r\n                className=\"row1\" \r\n                style={{margin: \"20px\", marginTop: \"20px\", width : \"90%\",marginBottom:\"10px\"}}\r\n                >\r\n                  <label style={{width: \"40%\"}}>Confirmer mot de passe</label>\r\n                  <input \r\n                  type=\"password\" \r\n                  name=\"confirmNewPw\" \r\n                  value={confirmNewPw} \r\n                  placeholder=\"******\" \r\n                  onChange={(e) => setConfirmNewPw(e.target.value)} \r\n                  class=\"input-field\" \r\n                  style={{width: \"60%\"}}\r\n                  required\r\n                  />    \r\n                </div>\r\n\r\n                <center>\r\n                <button\r\n                className=\"btnn\" \r\n                style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\",\"font-size\" : \"12px\", float:\"right\", marginRight: \"40px\"}}\r\n                >\r\n                Confirmer\r\n                </button>  \r\n                </center>      \r\n\r\n\r\n            </div>\r\n          }\r\n          />\r\n        </form>  \r\n    </div>\r\n);\r\n}\r\n\r\n\r\n\r\nexport default ModifyPassword;\r\n","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport ModifyPassword from \"./modifyPassword.component\";\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentUser: AuthService.getCurrentUser()\r\n    };\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n    this.setState({\r\n      currentUser: undefined,\r\n      showAdminBoard: false,\r\n      showTeacherBoard: false,\r\n    });\r\n    if (!this.state.currentUser) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { currentUser } = this.state;\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <ModifyPassword currentuser={currentUser} email={currentUser.message.email} logOut={this.logOut}/>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/\";\r\n// const API_URL = \"http://localhost:5050/api/${id}\";\r\n\r\n\r\nclass SearchService {\r\n\r\n  searchQuiz(id) {\r\n    return axios.get(`https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${id}`, {\r\n      \r\n    });\r\n  }\r\n\r\n  submitAnswers(answers){\r\n    axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n        answers\r\n      })\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new SearchService();\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport const Title = ({data, noUnderline, subHeader}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Typography\r\n                style={{textAlign: \"center\", color:\"#4257b2\", marginTop: \"20px\", marginBottom: \"20px\"}}\r\n                variant={subHeader ? \"h6\": \"h5\"}\r\n            >\r\n                {data}\r\n                <div className={noUnderline ? \"\": \"underline\"}></div>\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n","//CREATE LABELS FOR LINE CHART \r\nconst LineLabels = (integer) => { //integer is == groupArray.length\r\n    let array = []\r\n    switch(integer){\r\n        case 1:\r\n            array = [\"1er quiz\"];\r\n            break;\r\n        case 2:\r\n            array = [\"1er quiz\", \"2e quiz\"];\r\n            break;\r\n        case 3:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\"];\r\n            break;\r\n        case 4:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\"];\r\n            break;\r\n        case 5:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\"];\r\n            break;\r\n        case 6:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\"];\r\n            break;\r\n        case 7:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\"];\r\n            break;\r\n        case 8:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\"];\r\n            break;\r\n        case 9:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\"];\r\n            break;\r\n        case 10:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\"];\r\n            break;\r\n        case 11:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\"];\r\n            break;\r\n        case 12:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\"];\r\n            break;\r\n        case 13:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\"];\r\n            break;\r\n        case 14:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\"];\r\n            break;\r\n        default:\r\n            array = [\"1er quiz\", \"2e quiz\", \"3e quiz\", \"4e quiz\", \"5e quiz\", \"6e quiz\", \"7e quiz\", \"8e quiz\", \"9e quiz\", \"10e quiz\", \"11ème quiz\", \"12ème quiz\", \"13e quiz\", \"14e quiz\", \"15e quiz\"];\r\n            break;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  export default LineLabels;\r\n\r\n","\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nconst LineChart = ({ labels, data }) => {\r\n    return ( \r\n        <div>\r\n            <Line\r\n                data={{\r\n                    labels: labels,\r\n                    datasets: [{\r\n                        data: data,\r\n                        borderColor: 'hsl(205, 78%, 60%)'\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    },\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            label: (item, datax) => {\r\n                                let string = \"\"\r\n                                switch(data[item.index]){\r\n                                    case 4:\r\n                                        string = \"Oui\"\r\n                                        break\r\n                                    case 3:\r\n                                        string = \"Plutot Oui\"\r\n                                        break\r\n                                    case 2: \r\n                                        string = \"Plutot Non\"\r\n                                        break\r\n                                    default:\r\n                                        string = \"Non\"\r\n                                        break\r\n                                }\r\n                                return string\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LineChart;\r\n","import React from 'react'\r\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\r\n\r\nconst FlippyItems = ({frontSide, backSide}) => {\r\n    return (\r\n        <Flippy\r\n        // onmouseover={onMouseOver}\r\n        className=\"col-xs-12 col-sm-12 col-md-4 col-lg-3\"\r\n        flipOnHover={true} // default false\r\n        flipOnClick={false} // default false\r\n        flipDirection=\"horizontal\" // horizontal or vertical\r\n        // ref={(r) => this.flippy = r} // to use toggle method like this.flippy.toggle()\r\n        // if you pass isFlipped prop component will be controlled component.\r\n        // and other props, which will go to div\r\n        style={{ minWidth: '260px', height: '150px', marginBottom : \"25px\", marginRight : \"25px\"}} /// these are optional style, it is not necessary\r\n      >\r\n        <FrontSide\r\n          style={{\r\n            // backgroundColor: '#41669d',\r\n            padding: 0,\r\n            margin:0\r\n          }}\r\n        >\r\n          {frontSide}\r\n        </FrontSide>\r\n        <BackSide\r\n          style={{ \r\n            backgroundColor: '#4257b2',\r\n            padding: 2,\r\n            margin:0}}\r\n        >\r\n        <div> \r\n          {backSide}  \r\n        </div> \r\n        </BackSide>\r\n      </Flippy>\r\n    )\r\n}\r\n\r\nexport default FlippyItems\r\n","import React from 'react';\r\nimport SearchService from '../services/search.service';\r\nimport AuthService from '../services/auth.service';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Grid } from '@material-ui/core';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\nimport { Title } from './Title';\r\nimport LineLabels from './LineLabels';\r\nimport LineChart from './LineChart';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport FlippyItems from './Flippy';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst BoardUser = () => {\r\n  const [search, setsearch] = useState('');\r\n  const [successful, setsuccessful] = useState(false);\r\n  const [message, setmessage] = useState('');\r\n  const [errorMessage, seterrorMessage] = useState('');\r\n  // const [errors, seterrors] = useState([])\r\n  const [currentQuiz, setcurrentQuiz] = useState(null);\r\n  const [radioOptions, setradioOptions] = useState({});\r\n  const [checkedItems, setCheckedItems] = useState([]);\r\n  const [currentUser] = useState(AuthService.getCurrentUser());\r\n  const [allQuizzes, setallQuizzes] = useState([]);\r\n  const [displayAllAnswered, setdisplayAllAnswered] = useState(false);\r\n  const [validate, setvalidate] = useState(false);\r\n  const [lineArray, setLineArray] = useState([]);\r\n  const [actualQuiz, setactualQuiz] = useState([]);\r\n  const [displayMain, setdisplayMain] = useState(true);\r\n  const [displayLineChart, setDisplayLineChart] = useState(false);\r\n  const [displayCurrentQuiz, setdisplayCurrentQuiz] = useState(false);\r\n  const [value, setValue] = useState(); //just for refreshing the component for changes to take effect\r\n\r\n  const evolution = () => {\r\n    setdisplayMain(false);\r\n    setDisplayLineChart(true);\r\n    setdisplayCurrentQuiz(false);\r\n  };\r\n  const goBack = () => {\r\n    setdisplayMain(true);\r\n    setdisplayAllAnswered(true);\r\n    setDisplayLineChart(false);\r\n    setdisplayCurrentQuiz(false);\r\n  };\r\n\r\n\r\n  // CREATE ARRAY CONTAINING ANSWERS OF EACH ATTEMPT\r\n  const getAllAns = (quiz) => {\r\n    let array = [];\r\n    quiz.student_answers.forEach((answers) => {\r\n      switch (answers.answer) {\r\n        case 'Non':\r\n          array.push(1);\r\n          break;\r\n        case 'Plutot Non':\r\n          array.push(2);\r\n          break;\r\n        case 'Plutot Oui':\r\n          array.push(3);\r\n          break;\r\n        default:\r\n          array.push(4);\r\n          break;\r\n      }\r\n    });\r\n    return array;\r\n  };\r\n\r\n  //GENERATE DATA VALUES FOR LINE CHART\r\n  const getLineData = (groupArray, index) => {\r\n    let dataArray = [];\r\n    groupArray.forEach((item) => {\r\n      dataArray.push(item[index]);\r\n    });\r\n    return dataArray;\r\n  };\r\n  //\r\n  const setActiveQuizRefreshComponentToEffectChanges = (quiz, index) => {\r\n    setActiveQuiz(quiz, index);\r\n    // by calling this method react re-renders the component\r\n    setValue({});\r\n  };\r\n\r\n  //SET ACTIVE QUIZ\r\n  const setActiveQuiz = (quiz, index) => {\r\n    let tempLineArray = [];\r\n    quiz.quiz_answers.forEach((quiz, index) => {\r\n      tempLineArray.push(getAllAns(quiz));\r\n    });\r\n    setLineArray(tempLineArray);\r\n\r\n    // setdisplayQuizzes(null);\r\n\r\n    // GET ACTUAL QUESTIONS FROM DATABASE\r\n    SearchService.searchQuiz(quiz.quiz_id)\r\n      .then((response) => {\r\n        setactualQuiz(response.data);\r\n      })\r\n      .catch((error) => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n          console.log(resMessage);\r\n      });\r\n  };\r\n\r\n  // LOAD ALL QUIZZES ANSWERED BY CURRENT STUDENT FROM DATABASE\r\n  //ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n  useEffect(() => {\r\n    const student_id = currentUser.message.email;\r\n    axios\r\n      .get(\r\n        `https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`\r\n      )\r\n      .then((response) => {\r\n        setallQuizzes(response.data.quizzes);\r\n      })\r\n      .catch(function (err) {\r\n        seterrorMessage(err.response);\r\n      });\r\n  }, [currentUser, allQuizzes]);\r\n\r\n  const onChangeSearch = (e) => {\r\n    setsearch(e.target.value);\r\n  };\r\n\r\n  // RETURN CHECKED VALUE(true or false)\r\n  const checkRadioButton = (question_id, label) => {\r\n    if (!radioOptions[question_id]) {\r\n      return false;\r\n    }\r\n    return radioOptions[question_id] === label;\r\n  };\r\n\r\n  // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n  const setradio = (id, answer) => {\r\n    let checkedArray = checkedItems.map((x) => {\r\n      return { ...x };\r\n    });\r\n    const find_question = checkedArray.find((a) => a.question_answer_id === id);\r\n    if (find_question) {\r\n      checkedArray.find((a) => a.question_answer_id === id).answer = answer;\r\n      setradioOptions((state) => {\r\n        return {\r\n          ...state,\r\n          [id]: answer,\r\n        };\r\n      });\r\n      setCheckedItems(checkedArray);\r\n    } else {\r\n      setradioOptions((state) => {\r\n        return {\r\n          ...state,\r\n          [id]: answer,\r\n        };\r\n      });\r\n\r\n      setCheckedItems([\r\n        ...checkedItems,\r\n        {\r\n          question_answer_id: id,\r\n          answer: answer,\r\n          explanation: 'no explanation',\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n  const setCheckbox = (\r\n    value,\r\n    checked,\r\n    question_id,\r\n    question_title,\r\n    quiz_id\r\n  ) => {\r\n    let checkedArray = checkedItems.map((x) => {\r\n      return { ...x };\r\n    });\r\n    const find_question = checkedArray.find(\r\n      (a) => a.question_answer_id === question_id\r\n    );\r\n    if (find_question) {\r\n      checkedArray.find(\r\n        (a) => a.question_answer_id === question_id\r\n      ).explanation = value;\r\n      setCheckedItems(checkedArray);\r\n    }\r\n  };\r\n\r\n  // SUBMIT ANSWERS TO THE BACKEND\r\n  const submitAnswers = () => {\r\n    const timestamp = Date.now();\r\n    const formatedTimestamp = new Intl.DateTimeFormat('en-US', {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit',\r\n    }).format(timestamp);\r\n    const answers = {\r\n      quiz_id: currentQuiz.quiz_id,\r\n      quiz_title: currentQuiz.quiz,\r\n      quiz_answers: {\r\n        student_id: currentUser.message.email,\r\n        student_answers: checkedItems,\r\n        time_submitted: formatedTimestamp,\r\n      },\r\n    };\r\n\r\n    if (\r\n      currentQuiz.questions.length !==\r\n      answers.quiz_answers.student_answers.length\r\n    ) {\r\n      setvalidate(true);\r\n      return setvalidate(true);\r\n    }\r\n\r\n    axios\r\n      .post('https://neuroeducation-feedback.herokuapp.com/api//history', {\r\n        answers,\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          //   window.location.reload(false);\r\n          setcurrentQuiz(null);\r\n          setCheckedItems([]);\r\n          setradioOptions({});\r\n          setallQuizzes([...allQuizzes, answers]);\r\n          setmessage('Réponses soumises');\r\n          setsuccessful(true);\r\n          setdisplayAllAnswered(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setcurrentQuiz(null);\r\n        setsuccessful(false);\r\n        setmessage(\r\n          err.response.data.message || err.response.data.message[0].error\r\n        );\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setvalidate(false);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    setmessage('');\r\n    setsuccessful(false);\r\n\r\n    // this.form.validateAll();\r\n\r\n    \r\n      SearchService.searchQuiz(search)\r\n        .then((response) => {\r\n          setdisplayAllAnswered(false);\r\n          setsuccessful(true);\r\n          setcurrentQuiz(response.data);\r\n          setdisplayCurrentQuiz(true);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setmessage(resMessage);\r\n          setsuccessful(false);\r\n        });\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {displayMain && (\r\n        <div>\r\n          <div>\r\n            {errorMessage && (\r\n              <div className=\"form-group\">\r\n                <div className={'alert alert-danger'} role=\"alert\">\r\n                  {errorMessage}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {(!successful || displayAllAnswered) && (\r\n              <div>\r\n                <div style={{ marginTop: '50px' }}>\r\n                  {message && (\r\n                    <div className=\"form-group\">\r\n                      <div\r\n                        className={\r\n                          successful\r\n                            ? 'alert alert-success'\r\n                            : 'alert alert-danger'\r\n                        }\r\n                        role=\"alert\"\r\n                      >\r\n                        {message}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <form id=\"form\">\r\n                    <input\r\n                      onChange={onChangeSearch}\r\n                      id=\"commonSearchTerm\"\r\n                      className=\"input-field\"\r\n                      placeholder=\"Entrez un code de quiz valide...\"\r\n                      required\r\n                    />\r\n                    <button\r\n                      id=\"searchButton\"\r\n                      className=\"input-field\"\r\n                      onClick={handleSearch}\r\n                    >\r\n                      Rechercher\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n\r\n                {(displayAllAnswered || !successful) && allQuizzes && (\r\n                  <div>\r\n                    <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                      <center>\r\n                        <Title data={'Quiz déjà répondus'} />\r\n                      </center>\r\n                      <div className=\"row\">\r\n                        {allQuizzes &&\r\n                          allQuizzes.map((quiz, index) => (\r\n                            <div\r\n                              key={index}\r\n                              className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"\r\n                            >\r\n                              {/* <Card className=\"card\" elevation={1} style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}} onMouseOver={() => setActiveQuiz(quiz, index)} onClick={evolution} >\r\n                                      <CardHeader\r\n                                            avatar={\r\n                                                (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                    {quiz.quiz_id[0].toUpperCase()}\r\n                                                </Avatar>)\r\n                                        }\r\n                                            title={quiz.quiz_id}\r\n                                      />\r\n                                      <CardContent>\r\n                                          <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                              {quiz.quiz_id}\r\n                                          </Typography>\r\n                                      </CardContent>\r\n                                    </Card> */}\r\n\r\n                              <FlippyItems\r\n                                frontSide={\r\n                                  <div key={index}>\r\n                                    <Card\r\n                                      elevation={1}\r\n                                      style={{\r\n                                        padding: '20px',\r\n                                        marginBottom: '10px',\r\n                                      }}\r\n                                      onMouseOver={() =>\r\n                                        setActiveQuizRefreshComponentToEffectChanges(\r\n                                          quiz,\r\n                                          index\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <CardHeader\r\n                                        avatar={\r\n                                          <Avatar\r\n                                            style={{\r\n                                              backgroundColor: '#4257b2',\r\n                                            }}\r\n                                          >\r\n                                            {quiz.quiz_id[0].toUpperCase()}\r\n                                          </Avatar>\r\n                                        }\r\n                                        title={quiz.quiz_id}\r\n                                        // subheader={note}\r\n                                      />\r\n                                      <CardContent>\r\n                                        <Typography\r\n                                          variant=\"body2\"\r\n                                          color=\"textSecondary\"\r\n                                        >\r\n                                          {quiz.quiz_id}\r\n                                        </Typography>\r\n                                      </CardContent>\r\n                                    </Card>\r\n                                  </div>\r\n                                }\r\n                                backSide={\r\n                                  <div key={index}>\r\n                                    <Card\r\n                                      elevation={1}\r\n                                      style={{\r\n                                        padding: '20px',\r\n                                        marginBottom: '10px',\r\n                                      }}\r\n                                    >\r\n                                      <CardHeader\r\n                                        avatar={\r\n                                          <Avatar\r\n                                            style={{\r\n                                              backgroundColor: '#4257b2',\r\n                                            }}\r\n                                          >\r\n                                            {quiz.quiz_id[0].toUpperCase()}\r\n                                          </Avatar>\r\n                                        }\r\n                                        title={quiz.quiz_id}\r\n                                      />\r\n                                      <CardContent>\r\n                                        <div\r\n                                          style={{\r\n                                            float: 'right',\r\n                                            color: '#4257b2',\r\n                                          }}\r\n                                        >\r\n                                          <Tooltip title=\"Cliquez pour les statistiques\">\r\n                                            <IconButton\r\n                                              onClick={evolution}\r\n                                              style={{\r\n                                                float: 'right',\r\n                                                color: '#4257b2',\r\n                                              }}\r\n                                            >\r\n                                              <EqualizerIcon />\r\n                                            </IconButton>\r\n                                          </Tooltip>\r\n                                        </div>\r\n                                      </CardContent>\r\n                                    </Card>\r\n                                  </div>\r\n                                }\r\n                              />\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        {displayCurrentQuiz && currentQuiz && (\r\n          <div className=\"container-questions\">\r\n            <IconButton\r\n              onClick={() => goBack()}\r\n              style={{ float: 'left', color: '#4257b2' }}\r\n            >\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n            {validate && (\r\n              <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                open={validate}\r\n                autoHideDuration={6000}\r\n                onClose={() => handleClose()}\r\n              >\r\n                <Alert onClose={() => handleClose()} severity=\"error\">\r\n                  {'Please answer all questions'}\r\n                </Alert>\r\n              </Snackbar>\r\n            )}\r\n            <center>\r\n              <h4>{currentQuiz.quiz}</h4>\r\n              <br />\r\n            </center>\r\n            {currentQuiz.questions &&\r\n              currentQuiz.questions.map((questions, indexx) => (\r\n                <div key={questions.question_id}>\r\n                  <span style={{ fontSize: '20px' }}>\r\n                    {questions.question_id}\r\n                    {'. '}\r\n                    {questions.question_title}\r\n                  </span>\r\n                  <div>\r\n                    <input\r\n                      className=\"input\"\r\n                      type=\"radio\"\r\n                      value=\"Oui\"\r\n                      checked={checkRadioButton(questions.question_id, 'Oui')}\r\n                      onChange={(e) =>\r\n                        setradio(questions.question_id, e.target.value)\r\n                      }\r\n                    />{' '}\r\n                    Oui\r\n                    <input\r\n                      className=\"input\"\r\n                      type=\"radio\"\r\n                      value=\"Plutot Oui\"\r\n                      checked={checkRadioButton(\r\n                        questions.question_id,\r\n                        'Plutot Oui'\r\n                      )}\r\n                      onChange={(e) =>\r\n                        setradio(questions.question_id, e.target.value)\r\n                      }\r\n                    />{' '}\r\n                    Plutot Oui\r\n                    <input\r\n                      className=\"input\"\r\n                      type=\"radio\"\r\n                      value=\"Plutot Non\"\r\n                      checked={checkRadioButton(\r\n                        questions.question_id,\r\n                        'Plutot Non'\r\n                      )}\r\n                      onChange={(e) =>\r\n                        setradio(questions.question_id, e.target.value)\r\n                      }\r\n                    />{' '}\r\n                    Plutot Non\r\n                    <input\r\n                      className=\"input\"\r\n                      type=\"radio\"\r\n                      value=\"Non\"\r\n                      checked={checkRadioButton(questions.question_id, 'Non')}\r\n                      onChange={(e) =>\r\n                        setradio(questions.question_id, e.target.value)\r\n                      }\r\n                    />{' '}\r\n                    Non\r\n                  </div>\r\n\r\n                  {radioOptions[questions.question_id] === 'Plutot Non' ||\r\n                  radioOptions[questions.question_id] === 'Plutot Oui' ||\r\n                  radioOptions[questions.question_id] === 'Non' ? (\r\n                    <div>\r\n                      {questions.question_options &&\r\n                        questions.question_options.map((options, index) => (\r\n                          <div>\r\n                            <label>\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                value={options.options_id}\r\n                                checked={checkedItems[options.option_text]}\r\n                                onChange={(e) =>\r\n                                  setCheckbox(\r\n                                    e.target.value,\r\n                                    e.target.checked,\r\n                                    questions.question_id,\r\n                                    questions.question_id,\r\n                                    currentQuiz.quiz_id\r\n                                  )\r\n                                }\r\n                              />\r\n                              <span>\r\n                                {'  '}\r\n                                {options.options_id}\r\n                                {'. '}\r\n                                {options.options_text}\r\n                              </span>\r\n                            </label>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  ) : (\r\n                    <span>No Explanation Needed</span>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            <div className=\"form-group\">\r\n              <button className=\"btnn\" onClick={submitAnswers}>\r\n                Soumettre les réponses\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {displayLineChart && (\r\n        <div>\r\n          <IconButton\r\n            onClick={() => goBack()}\r\n            style={{ float: 'left', color: '#4257b2' }}\r\n          >\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          {lineArray.length ? (\r\n            <Grid container spacing={3}>\r\n              {lineArray.length &&\r\n                displayLineChart &&\r\n                lineArray[0].map((attempt, index) => (\r\n                  <Grid item md={6} sm={12} lg={4}>\r\n                    <Card elevation={2}>\r\n                      <CardHeader\r\n                        title={\r\n                          <Typography\r\n                            style={{ fontSize: '1rem' }}\r\n                            color=\"textSecondary\"\r\n                            variant=\"h6\"\r\n                            component=\"p\"\r\n                          >\r\n                            {actualQuiz\r\n                              ? `Q${index + 1}. ` +\r\n                                actualQuiz.questions[index].question_title\r\n                              : `Question ${index + 1}`}\r\n                          </Typography>\r\n                        }\r\n                        subheader={\r\n                          <div style={{ fontSize: '0.8rem' }}>\r\n                            Oui-4 Plutot Oui-3 Plutot Non-2 Non-1\r\n                          </div>\r\n                        }\r\n                      />\r\n                      <CardContent>\r\n                        <LineChart\r\n                          labels={LineLabels(lineArray.length)}\r\n                          data={getLineData(lineArray, index)}\r\n                        />\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                ))}\r\n            </Grid>\r\n          ) : (\r\n            <Title\r\n              data=\"Aucune donnée pour le graphique, veuillez d'abord répondre au quiz.\"\r\n              noUnderline={true}\r\n              subHeader={true}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardUser;\r\n","import axios from \"axios\";\r\n\r\n// const API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\r\nconst API_URL = \"https://neuroeducation-feedback.herokuapp.com/api/postform/\";\r\n\r\nclass PostForm {\r\n    submit(title, created_by, questions) {\r\n        return axios\r\n            .post(API_URL + \"submit\", {\r\n                title,\r\n                created_by,\r\n                questions\r\n            })\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}\r\n\r\nexport default new PostForm();\r\n","import {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { React } from 'react';\r\n\r\nconst ConfirmDialogue = (props) => {\r\n  const { confirmDialog } = props;\r\n  return (\r\n    <div>\r\n      <Dialog open={confirmDialog.isOpen}>\r\n        <DialogTitle></DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"h6\">{confirmDialog.title}</Typography>\r\n          <Typography variant=\"subtitle2\">{confirmDialog.subTitle}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <button className=\"btnn\" onClick={confirmDialog.onDiscard}>\r\n            Non\r\n          </button>\r\n          <button className=\"btnn\" onClick={confirmDialog.onConfirm}>\r\n            Oui\r\n          </button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialogue;\r\n","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nconst ITEM_HEIGHT = 48; \r\n\r\nexport default function MenuOption(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n        style={{float:\"right\",color: '#4257b2'}}\r\n      >\r\n        <MoreVertIcon />\r\n        <span>Options</span>\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: '20ch',\r\n            color: '#4257b2'\r\n          },\r\n        }}\r\n      >\r\n        {props.options && props.options.map((option) => (\r\n          <MenuItem key={option.title} selected={option === 'Pyxis'} onClick={option.onclick} >\r\n            {option.icon}{option.title}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Form from 'react-validation/build/form';\r\nimport { Snackbar, Switch } from '@material-ui/core';\r\nimport PostForm from '../services/admin-submit-form';\r\nimport AuthService from '../services/auth.service';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport SearchService from '../services/search.service';\r\nimport ConfirmDialogue from './confirm-dialogue';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport MenuOption from './menu';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { Title } from './Title';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass MyForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeQuestion = this.onChangeQuestion.bind(this);\r\n    this.onClickAddExplanation = this.onClickAddExplanation.bind(this);\r\n    this.state = {\r\n      explanations: false,\r\n      delete: this.props.delete,\r\n    };\r\n  }\r\n\r\n  onChangeQuestion(e) {\r\n    this.props.onQuestionChange(e.target.value);\r\n  }\r\n\r\n  onChangeExplanation(indexExplanation, e) {\r\n    this.props.onExplanationChange(indexExplanation, e.target.value);\r\n  }\r\n\r\n  onClickRemoveExplanation(indexExplanation) {\r\n    this.props.onRemoveExplanationClick(indexExplanation);\r\n  }\r\n\r\n  onClickAddExplanation() {\r\n    this.props.onAddExplanationClick();\r\n    this.setState({\r\n      explanations: true,\r\n    });\r\n  }\r\n\r\n  createExplanationUI() {\r\n    return (\r\n      <div>\r\n        {this.props.explanations ? (\r\n          this.props.explanations.map((element, indexExplanation) => (\r\n            <div>\r\n              <div key={indexExplanation} className=\"form-group\">\r\n                <label htmlFor=\"explanation\">Explication</label>\r\n                <form id=\"formExp\">\r\n                  <input\r\n                    onChange={this.onChangeExplanation.bind(\r\n                      this,\r\n                      indexExplanation\r\n                    )}\r\n                    id=\"inputExp\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    size=\"small\"\r\n                    style={{ height: '50' }}\r\n                  />\r\n                  <Tooltip title=\"Supprimer cette explication\">\r\n                    <button\r\n                      type=\"button\"\r\n                      id=\"buttonExp\"\r\n                      onClick={this.onClickRemoveExplanation.bind(\r\n                        this,\r\n                        indexExplanation\r\n                      )}\r\n                    >\r\n                      {' '}\r\n                      <DeleteForeverIcon style={{ color: 'red' }} />{' '}\r\n                    </button>\r\n                  </Tooltip>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <h3>No Explanation props</h3>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const question = this.state.question;\r\n    const deleteQuiz = this.state.delete;\r\n\r\n    return (\r\n      <div>\r\n        <Form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"question\" style={{ paddingTop: '10px' }}>\r\n              <span>\r\n                <strong>Question</strong>\r\n                <Tooltip title=\"Supprimer cette question\">\r\n                  <IconButton\r\n                    className=\"deleteQuestion\"\r\n                    onClick={deleteQuiz}\r\n                    style={{ float: 'right' }}\r\n                  >\r\n                    <DeleteForeverIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"question\"\r\n              value={question}\r\n              onChange={this.onChangeQuestion}\r\n              validations={[required]}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          {this.state.explanations && this.createExplanationUI()}\r\n\r\n          <Tooltip title=\"Adjouter une explication\">\r\n            <IconButton\r\n              onClick={this.onClickAddExplanation}\r\n              style={{ color: '#4257b2', float: 'left', marginBottom: '15px' }}\r\n            >\r\n              <QueueIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <br />\r\n          <br />\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onClickAddQuestion = this.onClickAddQuestion.bind(this);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.allowQuiz = this.allowQuiz.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n    this.getQuiz = this.getQuiz.bind(this);\r\n    this.test = this.test.bind(this);\r\n\r\n    this.state = {\r\n      title: '',\r\n      created_by: '',\r\n      questions: [\r\n        {\r\n          question_id: '',\r\n          question_title: '',\r\n          question_options: [],\r\n        },\r\n      ],\r\n      message: '',\r\n      currentUser: undefined,\r\n      submitted: false,\r\n      quizMdp: '',\r\n      allQuizzes: null,\r\n      displayQuizzes: null,\r\n      errorMessage: '',\r\n      laststate: null,\r\n      confirmDialog: {\r\n        isOpen: false,\r\n        title: '',\r\n        subTitle: '',\r\n      },\r\n      updateTitle: 'Are you sure you want to update?',\r\n      updateSubTitle: 'You will be able to edit again',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n      });\r\n    }\r\n\r\n    axios\r\n      .get(\r\n        `https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${user.message.email}`\r\n      )\r\n      .then((response) => {\r\n        if (response.data.quizzes.length) {\r\n          this.setState({\r\n            allQuizzes: response.data.quizzes,\r\n            displayQuizzes: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            allQuizzes: null,\r\n            displayQuizzes: false,\r\n          });\r\n        }\r\n      })\r\n      .catch(function (err) {\r\n        this.setState({\r\n          errorMessage:\r\n            err.response.data.message || err.response.data.message[0].error,\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      menuOptions: [\r\n        {\r\n          title: 'Retourner',\r\n          icon: <ArrowBackIcon fontSize=\"large\" />,\r\n          onclick: this.backToQuizzes,\r\n        },\r\n        {\r\n          title: 'Éditer',\r\n          icon: <EditIcon fontSize=\"large\" />,\r\n          onclick: this.editQuiz,\r\n        },\r\n        {\r\n          title: 'Effacer',\r\n          icon: <DeleteForeverIcon fontSize=\"large\" />,\r\n          onclick: () =>\r\n            this.setConfirmDialog(\r\n              'delete',\r\n              'Are you sure you want to Delete this Quiz?',\r\n              'Question will be deleted permanently but no with Students Records',\r\n              this.deleteQuiz\r\n            ),\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  createQuiz = () => {\r\n    this.setState({\r\n      laststate: this.state.displayQuizzes,\r\n      displayQuizzes: null,\r\n      displayCreate: true,\r\n      displayQuiz: false,\r\n    });\r\n  };\r\n\r\n  backToQuizzes = () => {\r\n    this.setState({\r\n      displayQuizzes: this.state.laststate,\r\n      displayCreate: false,\r\n      displayQuiz: false,\r\n      edit: false,\r\n    });\r\n  };\r\n\r\n  test(e) {\r\n    alert('test');\r\n  }\r\n\r\n  getQuiz = (quiz_idd) => {\r\n    SearchService.searchQuiz(quiz_idd)\r\n      .then((response) => {\r\n        this.setState({\r\n          displayQuiz: true,\r\n          laststate: this.state.displayQuizzes,\r\n          currentQuiz: response.data,\r\n          currentQuizQuestions: response.data.questions,\r\n          toggle: response.data.allow,\r\n          displayQuizzes: null,\r\n          displayCreate: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n        this.setState({\r\n          message: resMessage,\r\n          successful: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  setConfirmDialog = (type, title, subtitle, onconfirm) => {\r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: true,\r\n        title: title,\r\n        subTitle: subtitle,\r\n        onConfirm: onconfirm,\r\n        onDiscard: () => this.discard(type),\r\n      },\r\n    });\r\n  };\r\n\r\n  discard = (type) => {\r\n    if (type === 'update' || type === 'delete') {\r\n      this.setState({\r\n        confirmDialog: {\r\n          isOpen: false,\r\n          title: '',\r\n          subTitle: '',\r\n          onConfirm: null,\r\n          onDiscard: null,\r\n        },\r\n      });\r\n    } else if (type === 'toggle') {\r\n      this.setState({\r\n        confirmDialog: {\r\n          isOpen: false,\r\n          title: '',\r\n          subTitle: '',\r\n          onConfirm: null,\r\n          onDiscard: null,\r\n        },\r\n        toggle: !this.state.toggle,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleToggle = (event) => {\r\n    this.setState({\r\n      toggle: event.target.checked,\r\n    });\r\n    let title;\r\n    let message;\r\n    if (event.target.checked) {\r\n      title = 'Autoriser les étudiants à répondre au quiz ?';\r\n      message = 'Les étudiants peuvent répondre au quiz maintenant';\r\n    } else {\r\n      title = 'Voulez-vous fermer le quiz ?';\r\n      message = 'Les étudiants ne peuvent pas répondre au quiz maintenant';\r\n    }\r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: true,\r\n        title: title,\r\n        subTitle: this.state.subTitle,\r\n        onConfirm: () => this.allowQuiz(message),\r\n        onDiscard: () => this.discard('toggle'),\r\n      },\r\n    });\r\n  };\r\n\r\n  allowQuiz = (message) => {\r\n    let allow = this.state.toggle;\r\n    const quiz_id = this.state.currentQuiz.quiz_id;\r\n    axios\r\n      .post(\r\n        `https://neuroeducation-feedback.herokuapp.com/api/allowQuiz/${quiz_id}`,\r\n        {\r\n          allow,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        let success;\r\n        if (allow) {\r\n          success = allow;\r\n        } else {\r\n          success = false;\r\n        }\r\n        this.setState({\r\n          message: message,\r\n          open: true,\r\n          successful: success,\r\n          toggle: allow,\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err.response.data.message || err.response);\r\n      });\r\n\r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: false,\r\n        title: '',\r\n        subTitle: '',\r\n        onConfirm: null,\r\n        onDiscard: null,\r\n      },\r\n    });\r\n  };\r\n\r\n  updateQuiz = (event) => {\r\n    event.preventDefault();\r\n    let updated_questions = [];\r\n\r\n    for (let i = 0; i <= 100; i++) {\r\n      if (document.getElementById('Q' + i) === null) {\r\n        break;\r\n      }\r\n      var id = document.getElementById('Q' + i).value;\r\n\r\n      let expArr = [];\r\n      for (let j = 1; j <= 20; j++) {\r\n        let alphabet = String.fromCharCode(96 + j);\r\n        let expId = 'Q' + i + 'E' + alphabet;\r\n\r\n        if (document.getElementById(expId) === null) {\r\n          break;\r\n        } else {\r\n          var exp = document.getElementById(expId).value;\r\n          expArr.push({\r\n            options_id: alphabet,\r\n            options_text: exp,\r\n          });\r\n        }\r\n      }\r\n      updated_questions.push({\r\n        question_id: (i+1),\r\n        question_title: id,\r\n        question_options: expArr,\r\n      });\r\n    }\r\n\r\n    const quiz_id = document.getElementById('quiz_id').value;\r\n    axios\r\n      .post(\r\n        `https://neuroeducation-feedback.herokuapp.com/api/updateQuiz/${quiz_id}`,\r\n        {\r\n          updated_questions,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        this.setState({\r\n          message: 'Quiz mis à jour.',\r\n          open: true,\r\n          successful: true,\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err.response.data.message || err.response);\r\n        this.setState({\r\n          message: 'Quiz non mis à jour.',\r\n          open: true,\r\n          successful: false,\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: false,\r\n        title: '',\r\n        subTitle: '',\r\n        onConfirm: null,\r\n        onDiscard: null,\r\n      },\r\n    });\r\n  };\r\n\r\n  deleteQuiz = () => {\r\n    const id = this.state.currentQuiz.quiz_id;\r\n    const email = this.state.currentQuiz.created_by;\r\n    axios\r\n      .delete(\r\n        `https://neuroeducation-feedback.herokuapp.com/api/delete/${id}/${email}`\r\n      )\r\n      .then((res) => {\r\n        this.setState({\r\n          open: true,\r\n          message: 'Quiz supprimé',\r\n          danger: true,\r\n          successful: null,\r\n          allQuizzes: this.state.allQuizzes.filter(\r\n            (question) => question.quiz_id !== id\r\n          ),\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          message: 'Quiz non supprimé... veuillez réessayer',\r\n          open: true,\r\n          successful: false,\r\n        });\r\n      });\r\n    this.setState({\r\n      confirmDialog: {\r\n        isOpen: false,\r\n        title: '',\r\n        subTitle: '',\r\n        onConfirm: null,\r\n        onDiscard: null,\r\n      },\r\n    });\r\n\r\n    this.backToQuizzes();\r\n  };\r\n\r\n  editQuiz = () => {\r\n    this.setState({\r\n      edit: true,\r\n      displayQuiz: false,\r\n    });\r\n\r\n  };\r\n\r\n  addQuestionEdit = () => {\r\n    this.setState(\r\n      prevState => ({ currentQuizQuestions: [...prevState.currentQuizQuestions, \r\n        {\r\n          question_id: (this.state.currentQuizQuestions.length + 1),\r\n          question_title : \"\",\r\n          question_options: []\r\n        }\r\n      \r\n      ]})\r\n  )\r\n  }\r\n\r\n  deleteQuestionEdit = (index) => {\r\n    let currentQuizQuestions  = [...this.state.currentQuizQuestions];\r\n    if (index !== -1) {\r\n      currentQuizQuestions.splice(index, 1);\r\n      this.setState({\r\n        currentQuizQuestions\r\n      });\r\n    }\r\n  }\r\n\r\n  addExplanationEdit = (index) => {\r\n    let currentQuizQuestions  = [...this.state.currentQuizQuestions];\r\n    const indexExplanation = currentQuizQuestions[index].question_options.length;\r\n    let alphabet = String.fromCharCode(96 + (indexExplanation + 1));\r\n\r\n    let newExplanation = currentQuizQuestions[index].question_options;\r\n    newExplanation.push(\r\n      {\r\n        options_id : alphabet,\r\n        options_text : \"\"\r\n      }\r\n    );\r\n\r\n    currentQuizQuestions[index].question_options =  newExplanation;\r\n    this.setState({\r\n      currentQuizQuestions \r\n    });\r\n  } \r\n\r\n\r\n  deleteExplanationEdit = (questionIndex, explanationIndex) => {\r\n    let currentQuizQuestions  = [...this.state.currentQuizQuestions];\r\n\r\n    if (explanationIndex !== -1) {\r\n      currentQuizQuestions[questionIndex].question_options.splice(explanationIndex, 1);\r\n      this.setState({\r\n        currentQuizQuestions\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOnchangeExpEdit=(questionIndex, explanationIndex,e)=>{\r\n    let currentQuizQuestions  = [...this.state.currentQuizQuestions]; \r\n\r\n    currentQuizQuestions[questionIndex].question_options[explanationIndex].options_text =  e.target.value;\r\n    this.setState({\r\n      currentQuizQuestions \r\n    });\r\n    \r\n}\r\n\r\nhandleOnchangeQuesEdit=(questionIndex,e)=>{\r\n  let currentQuizQuestions  = [...this.state.currentQuizQuestions]; \r\n\r\n  currentQuizQuestions[questionIndex].question_title =  e.target.value;\r\n  this.setState({\r\n    currentQuizQuestions \r\n  });\r\n  \r\n}\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  handleQuestionChange(indexQuestion, question) {\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_title = question;\r\n    questions[indexQuestion].question_id = indexQuestion + 1;\r\n    this.setState({\r\n      questions,\r\n    });\r\n  }\r\n\r\n  handleExplanationChange(indexQuestion, indexExplanation, explanation) {\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options[indexExplanation].options_text =\r\n      explanation;\r\n\r\n    let alphabet = String.fromCharCode(96 + (indexExplanation + 1));\r\n    questions[indexQuestion].question_options[indexExplanation].options_id =\r\n      alphabet;\r\n\r\n    this.setState({\r\n      questions,\r\n    });\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    let title = e.target.value;\r\n    this.setState({\r\n      title,\r\n    });\r\n  }\r\n\r\n  onClickAddQuestion() {\r\n    this.setState((prevState) => ({\r\n      questions: [\r\n        ...prevState.questions,\r\n        {\r\n          question_title: '',\r\n          question_options: [],\r\n        },\r\n      ],\r\n    }));\r\n  }\r\n\r\n  handleAddExplanationClick(indexQuestion) {\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.push({ options_text: '' });\r\n    this.setState({\r\n      questions,\r\n    });\r\n  }\r\n\r\n  handleRemoveExplanationClick(indexQuestion, indexExplanation) {\r\n    let questions = [...this.state.questions];\r\n    questions[indexQuestion].question_options.splice(indexExplanation, 1);\r\n    this.setState({\r\n      questions,\r\n    });\r\n  }\r\n\r\n  onClickDelQuestion(indexQuestion) {\r\n    let questions = [...this.state.questions];\r\n    questions.splice(indexQuestion, 1);\r\n    this.setState({\r\n      questions,\r\n    });\r\n  }\r\n\r\n  handleSubmit() {\r\n    const { currentUser } = this.state;\r\n\r\n    PostForm.submit(\r\n      this.state.title,\r\n      currentUser.message.email,\r\n      this.state.questions\r\n    ).then(\r\n      (response) => {\r\n        this.setState({\r\n          message: 'Quiz submitted',\r\n          submitted: true,\r\n          quizMdp: response.quizMdp,\r\n        });\r\n      },\r\n      (error) => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n\r\n        this.setState({\r\n          message: resMessage,\r\n          questions: [\r\n            {\r\n              question_title: '',\r\n              question_options: [],\r\n            },\r\n          ],\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  createQuestionUI() {\r\n    return this.state.questions.map((element, indexQuestion) => (\r\n      <div className=\"questionContainer\">\r\n        <div className=\"container\" key={indexQuestion}>\r\n          <MyForm\r\n            onQuestionChange={this.handleQuestionChange.bind(\r\n              this,\r\n              indexQuestion\r\n            )}\r\n            onTitleChange={this.handleTitleChange}\r\n            onExplanationChange={this.handleExplanationChange.bind(\r\n              this,\r\n              indexQuestion\r\n            )}\r\n            onAddExplanationClick={this.handleAddExplanationClick.bind(\r\n              this,\r\n              indexQuestion\r\n            )}\r\n            onRemoveExplanationClick={this.handleRemoveExplanationClick.bind(\r\n              this,\r\n              indexQuestion\r\n            )}\r\n            explanations={this.state.questions[indexQuestion].question_options}\r\n            delete={this.onClickDelQuestion.bind(this, indexQuestion)}\r\n          />\r\n          {/* <div className=\"delQuestion\">\r\n            <StyledButtonDelQuestion\r\n              variant = \"contained\" onClick = {this.onClickDelQuestion.bind(this, indexQuestion)}>Supprimer cette question\r\n            </StyledButtonDelQuestion>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  // Pourrait être utile plus tard donc je met de coté (deprecated)\r\n  // componentDidMount() {\r\n  //   UserService.getAdminBoard().then(\r\n  //     response => {\r\n  //       this.setState({\r\n  //         content: response.data\r\n  //       });\r\n  //     },\r\n  //     error => {\r\n  //       this.setState({\r\n  //         content:\r\n  //           (error.response &&\r\n  //             error.response.data &&\r\n  //             error.response.data.message) ||\r\n  //           error.message ||\r\n  //           error.toString()\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n    const title = this.state.title;\r\n    const currentUser = this.state.currentUser;\r\n    const allQuizzes = this.state.allQuizzes;\r\n    const displayQuizzes = this.state.displayQuizzes;\r\n    const displayCreate = this.state.displayCreate;\r\n    const displayQuiz = this.state.displayQuiz;\r\n    const currentQuiz = this.state.currentQuiz;\r\n    const currentQuizQuestions = this.state.currentQuizQuestions;\r\n\r\n\r\n    // redirect to post/SubmitForm\r\n    if (this.state.submitted === true) { \r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/postSubmitForm',\r\n            state: { quizMdp: this.state.quizMdp },\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"mainTeacherForm\">\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={() => this.handleClose()}\r\n        >\r\n          <Alert\r\n            onClose={() => this.handleClose()}\r\n            severity={this.state.successful ? 'success' : 'warning'}\r\n          >\r\n            {this.state.message}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        {this.state.confirmDialog.isOpen && (\r\n          <ConfirmDialogue\r\n            confirmDialog={this.state.confirmDialog}\r\n            setConfirmDialog={this.state.confirmDialog}\r\n          />\r\n        )}\r\n\r\n        {(displayQuizzes === false || displayQuizzes) && (\r\n          <div className=\"\">\r\n                <SnackbarContent\r\n                  style={{\r\n                    backgroundColor: 'white',\r\n                    position: 'sticky',\r\n                    top: '0',\r\n                    'zIndex': '999',\r\n                  }}\r\n                  message=\"\"\r\n                  action={\r\n                    <button className=\"btnn\" onClick={this.createQuiz}>\r\n                      Créer un nouveau Quiz\r\n                    </button>\r\n                  }\r\n                />\r\n\r\n            {allQuizzes && displayQuizzes && (\r\n              <div>\r\n\r\n                <div>\r\n                  <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                    <Title\r\n                      data={\r\n                        'Quizs Créé par : ' +\r\n                        currentUser.message.firstname +\r\n                        ' ' +\r\n                        currentUser.message.lastname\r\n                      }\r\n                    />\r\n                    <div className=\"row\">\r\n                      {allQuizzes &&\r\n                        allQuizzes.map((quiz, index) => (\r\n                          <div\r\n                            key={index}\r\n                            className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"\r\n                            onClick={() => this.getQuiz(quiz.quiz_id)}\r\n                          >\r\n                            <Card\r\n                              className=\"card\"\r\n                              elevation={1}\r\n                              style={{\r\n                                padding: '20px',\r\n                                'margin-bottom': '10px',\r\n                              }}\r\n                            >\r\n                              <CardHeader\r\n                                avatar={\r\n                                  <Avatar\r\n                                    style={{ backgroundColor: '#4257b2' }}\r\n                                  >\r\n                                    {quiz.quiz_id[0].toUpperCase()}\r\n                                  </Avatar>\r\n                                }\r\n                                title={quiz.quiz_id}\r\n                              />\r\n                              <CardContent>\r\n                                <Typography\r\n                                  variant=\"body2\"\r\n                                  color=\"textSecondary\"\r\n                                >\r\n                                  {quiz.quiz_id}\r\n                                </Typography>\r\n                              </CardContent>\r\n                            </Card>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {displayQuizzes === false && (\r\n              <div>\r\n                {/* <h4>{'Quizs Créé par : '}</h4>\r\n                <h4>\r\n                  {' '}\r\n                  {currentUser.message.firstname +\r\n                    ' ' +\r\n                    currentUser.message.lastname}\r\n                </h4> */}\r\n                <div className={`quiz`} style={{ borderRadius: '10px' }}>\r\n                  <h4>Pas de quizz créé pour le moment</h4>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {/* <button className=\"btnn\" onClick={this.createQuiz}>Créer un nouveau Quiz</button> */}\r\n          </div>\r\n        )}\r\n\r\n        {(displayQuiz || this.state.edit) && currentQuiz && (\r\n          <div className=\"container-questions\">\r\n            <MenuOption options={this.state.menuOptions}></MenuOption>\r\n            <Tooltip title=\"Back to list\">\r\n              <IconButton\r\n                aria-label=\"back\"\r\n                style={{ color: '#4257b2' }}\r\n                onClick={this.backToQuizzes}\r\n              >\r\n                <ArrowBackIcon fontsize=\"large\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            {/* <button className=\"btnn\"  onClick={this.backToQuizzes}><ArrowBackIcon fontsize=\"large\"/></button>  */}\r\n\r\n            {/* <button className=\"btnn\"  onClick={this.deleteQuiz}><DeleteForeverIcon fontsize=\"large\"/></button>  */}\r\n            {/* <button className=\"btnn\"  onClick={this.editQuiz}>Edit Quiz</button> */}\r\n            <p>\r\n              {currentQuiz.quiz +\r\n                (this.state.toggle ? ' est ouvert' : ' est fermé')}\r\n              <Switch\r\n                checked={this.state.toggle}\r\n                onChange={this.handleToggle}\r\n                name=\"switch\"\r\n                inputProps={{ 'aria-label': 'test switch' }}\r\n                style={{ color: '#4257b2' }}\r\n                color=\"primary\"\r\n              />\r\n            </p>\r\n\r\n            {currentQuiz && this.state.edit && (\r\n              <div>\r\n                <Form id=\"myForm\">\r\n                  <div className=\"container\">\r\n                    <div className=\"form-group\">\r\n                      <center>\r\n                        <h5>{currentQuiz.quiz}</h5>\r\n                        <br />\r\n                      </center>\r\n\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"quiz_id\"\r\n                        id=\"quiz_id\"\r\n                        value={currentQuiz.quiz_id}\r\n                        readOnly\r\n                      />\r\n                      {currentQuizQuestions &&\r\n                        currentQuizQuestions.map((questions, indexx) => (\r\n                          <div key={indexx}>\r\n                            <label htmlFor={'Q' + indexx}>\r\n                              <strong>\r\n                                {'Question : ' + (indexx + 1)}\r\n                              </strong>\r\n                              <span style={{float: \"right\"}}>\r\n                              <Tooltip title=\"Adjouter une explication\">\r\n                                <IconButton\r\n                                  onClick={this.addExplanationEdit.bind(this, indexx)}\r\n                                  style={{ color: '#4257b2', float: 'left', marginBottom: '15px' }} \r\n                                >\r\n                                  <QueueIcon />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                              \r\n                              <Tooltip title=\"Supprimer cette question\">\r\n                                <IconButton\r\n                                  className=\"deleteQuestion\"\r\n                                  onClick={this.deleteQuestionEdit.bind(this, indexx)}\r\n                                  style={{ float: 'right' }}\r\n                                >\r\n                                  <DeleteForeverIcon />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                              </span>\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              name={'Q' + indexx}\r\n                              id={'Q' + indexx}\r\n                              value={questions.question_title}\r\n                              onChange = {this.handleOnchangeQuesEdit.bind(this,indexx)}\r\n                              validations={[required]}\r\n                              autoComplete=\"off\"\r\n                            />\r\n\r\n                            {questions.question_options &&\r\n                              questions.question_options.map(\r\n                                (options, index) => (\r\n                                  <div  className=\"form-group\">\r\n                                    <label\r\n                                      htmlFor={\r\n                                        'Q' +\r\n                                        indexx +\r\n                                        'E' +\r\n                                        index\r\n                                      }\r\n                                    >\r\n                                      <strong>\r\n                                        {'Explanation : ' + String.fromCharCode(96 + (index + 1))}\r\n                                      </strong>\r\n                                    </label>\r\n\r\n                                    \r\n                                    <div class=\"input-group\">\r\n                                     <div style={{width: \"85%\"}}> \r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control\"\r\n                                      name={\r\n                                        'Q' +\r\n                                        indexx +\r\n                                        'E' +\r\n                                        String.fromCharCode(96 + (index + 1))\r\n                                      }\r\n                                      id={\r\n                                        'Q' +\r\n                                        indexx +\r\n                                        'E' +\r\n                                        String.fromCharCode(96 + (index + 1))\r\n                                      }\r\n                                      value={options.options_text}\r\n                                      onChange = {this.handleOnchangeExpEdit.bind(this, indexx,index)}\r\n                                      // validations={[required]}\r\n                                      // autoComplete=\"off\"\r\n                                    />\r\n                                    </div>\r\n                                    <div>  \r\n                                    <Tooltip title=\"Supprimer cette explication\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        id=\"buttonExp\"\r\n                                        className=\"form-control\"\r\n                                        onClick={this.deleteExplanationEdit.bind(\r\n                                          this,\r\n                                          indexx,\r\n                                          index\r\n                                        )}\r\n                                      >\r\n                                        <DeleteForeverIcon style={{ color: 'red' }} />{' '}\r\n                                      </button>\r\n                                    </Tooltip>\r\n                                    </div>\r\n                                    </div>\r\n                                  </div>\r\n                                )\r\n                              )}\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n\r\n                <button  className=\"btnn\" style={{backgroundColor: \"gray\"}} onClick={this.addQuestionEdit}>Ajouter une question</button>\r\n\r\n\r\n                <button\r\n                  className=\"btnn\"\r\n                  onClick={() =>\r\n                    this.setConfirmDialog(\r\n                      'update',\r\n                      'Voulez-vous modifier ce questionnaire ?',\r\n                      'Vous pouvez modifier à nouveau',\r\n                      this.updateQuiz\r\n                    )\r\n                  }\r\n                >\r\n                  Modifier\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            <div>\r\n              {currentQuiz && displayQuiz && (\r\n                <div>\r\n                  <center>\r\n                    <h4>{currentQuiz.quiz}</h4>\r\n                    <br />\r\n                  </center>\r\n                  {currentQuiz.questions &&\r\n                    currentQuiz.questions.map((questions, indexx) => (\r\n                      <div key={questions.question_id}>\r\n                        <p>\r\n                          <strong>\r\n                            {questions.question_id}\r\n                            {'. '}\r\n                            {questions.question_title}\r\n                          </strong>\r\n                        </p>\r\n\r\n                        <div>\r\n                          {questions.question_options &&\r\n                            questions.question_options.map((options, index) => (\r\n                              <div>\r\n                                <label>\r\n                                  <span>\r\n                                    {'  '}\r\n                                    {options.options_id}\r\n                                    {'. '}\r\n                                    {options.options_text}\r\n                                  </span>\r\n                                </label>\r\n                              </div>\r\n                            ))}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div>\r\n          {displayCreate && (\r\n            <div>\r\n              <div\r\n                style={{\r\n                  width: '100%',\r\n                  display: 'inline-flex',\r\n                  'justify-content': 'center',\r\n                }}\r\n              >\r\n                <button id=\"backButton\" onClick={this.backToQuizzes}>\r\n                  <ArrowBackIcon fontsize=\"large\" />\r\n                </button>\r\n\r\n                <SnackbarContent\r\n                  style={{\r\n                    width: '100%',\r\n                    fontWeight: 'bold',\r\n                    fontSize: '1.2rem',\r\n                    color: '#4257b2',\r\n                    backgroundColor: 'white',\r\n                    position: 'sticky',\r\n                    top: '0',\r\n                    'zIndex': '999',\r\n                  }}\r\n                  message=\"Création de nouvelles questions\"\r\n                  action={\r\n                    <button\r\n                      className=\"btnn\"\r\n                      variant=\"contained\"\r\n                      onClick={this.handleSubmit}\r\n                    >\r\n                      Valider\r\n                    </button>\r\n                  }\r\n                />\r\n              </div>\r\n              {/* <div className=\"container\">\r\n              <header className=\"jumbotron\">\r\n                <h3>Création de nouvelles questions</h3>\r\n              </header>\r\n            </div> */}\r\n\r\n              <Form>\r\n                <div className=\"container\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"form-title\">\r\n                      <strong>Titre du formulaire</strong>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"form-title\"\r\n                      value={title}\r\n                      onChange={this.onChangeTitle}\r\n                      validations={[required]}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {this.createQuestionUI()}\r\n\r\n                <div className=\"container\">\r\n                  <br></br>\r\n                  <SnackbarContent\r\n                    style={{ backgroundColor: 'white' }}\r\n                    message=\"\"\r\n                    action={\r\n                      <button\r\n                        className=\"btnn\"\r\n                        type=\"button\"\r\n                        onClick={this.onClickAddQuestion}\r\n                      >\r\n                        Ajouter une question\r\n                      </button>\r\n                    }\r\n                  />\r\n                  {/* <StyledButtonAddQuestion\r\n                    variant = \"contained\" onClick = {this.onClickAddQuestion}>Ajouter une question\r\n                </StyledButtonAddQuestion>\r\n                <br></br><br></br>\r\n                <StyledButtonSubmit\r\n                  variant = \"contained\" onClick = {this.handleSubmit}>Valider\r\n                </StyledButtonSubmit> */}\r\n                </div>\r\n              </Form>\r\n\r\n              {this.state.message && (\r\n                <div className=\"container\">\r\n                  <div className=\"itsanerror\">\r\n                    <h3>\r\n                      Une erreur est survenu lors de l'envoi du formulaire\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class PostSubmitForm extends Component {\r\n    render(){\r\n        if(this.props.location.state === undefined){\r\n            return <Redirect to={{pathname:'/home'}}/>\r\n        }\r\n        return(\r\n            <div>\r\n                <div className=\"container\">\r\n                    <header className=\"jumbotron\">\r\n                        <div className=\"success\">\r\n                            <h3>Formulaire envoyé avec succès !</h3>\r\n                            <br></br>\r\n                            <h5>Voici le code du quizz à partager aux élèves :</h5>\r\n                            <p className=\"quizMdp\">{\" \" + this.props.location.state.quizMdp}</p>\r\n                        </div>\r\n                    </header>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { Bar, HorizontalBar } from 'react-chartjs-2';\r\n\r\n\r\nconst BarChart = ( props ) => {\r\n\r\n    const names = props.explanationArray;\r\n    const explanationLabels = props.explanationLabels;\r\n    const explanationValues = props.explanationValues;\r\n    const barData = props.barData;\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {(barData === \"Bar\") ? (\r\n                        <Bar\r\n                        data={{\r\n                            labels: explanationLabels,\r\n                            datasets: [{\r\n                                data: explanationValues,\r\n                                backgroundColor: [\r\n                                    'rgba(255, 99, 132, 1)',\r\n                                    'rgba(54, 162, 235, 1)',\r\n                                    'rgba(255, 206, 86, 1)',\r\n                                    'rgba(75, 192, 192, 1)',\r\n                                    'rgba(153, 102, 255, 1)',\r\n                                    'rgba(255, 159, 64, 1)'\r\n                                ]\r\n                            }]\r\n                        }}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                            scales: {\r\n                                yAxes: [{\r\n                                    ticks: {\r\n                                        beginAtZero: true\r\n                                    }\r\n                                }]\r\n                            },\r\n                            legend: {\r\n                                display: false\r\n                            },\r\n                            tooltips: {\r\n                                callbacks: {\r\n                                    label: function(item, data){\r\n                                        return names[item.index];\r\n                                    },\r\n                                    title: function(item, data){\r\n                                        return;\r\n                                    }\r\n                                },\r\n                                displayColors: false\r\n                            }\r\n                        }}\r\n                    />\r\n            ): (\r\n                <HorizontalBar\r\n                data={{\r\n                    labels: explanationLabels,\r\n                    datasets: [{\r\n                        data: explanationValues,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                    scales: {\r\n                        yAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }]\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            label: function(item, data){\r\n                                return names[item.index];\r\n                            },\r\n                            title: function(item, data){\r\n                                return;\r\n                            }\r\n                        },\r\n                        displayColors: false\r\n                    }\r\n                }}\r\n            />\r\n            )}\r\n    \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BarChart;","import { Doughnut, Pie } from 'react-chartjs-2';\r\n\r\n\r\nconst DoughnutChart = ({ labels, answerValues, pieData }) => {\r\n    return ( \r\n        <div>\r\n            {(pieData === \"Doughnut\") ? (\r\n                <Doughnut\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: [{\r\n                            data: answerValues,\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                            ]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            ):(\r\n                <Pie\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: [{\r\n                            data: answerValues,\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                            ]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            )}\r\n            \r\n        </div>\r\n     );\r\n}\r\n\r\nexport default DoughnutChart;","import { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\n// import {FaTimes} from 'react-icons/fa'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SwapHorizRounded from '@material-ui/icons/SwapHorizRounded';\r\nimport BarChart from './BarChart';\r\nimport { Container} from '@material-ui/core';\r\nimport DoughnutChart from './DoughnutChart';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport SearchService from '../services/search.service';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\nimport { Title } from './Title';\r\n\r\nimport FlippyItems from './Flippy';\r\n\r\nconst AllAnswers = () => {\r\n  const [allAnswers, setallAnswers] = useState([]);\r\n  const [currentQuiz, setcurrentQuiz] = useState(null);\r\n  const [array, setarray] = useState(null);\r\n  const [answersArray, setanswersArray] = useState();\r\n  const [explanationsArray, setexplanationsArray] = useState();\r\n  const [currentStudent, setcurrentStudent] = useState(null);\r\n  const [explanationStats, setexplanationStats] = useState(null);\r\n  const [showSpinner, setShowSpinner] = useState(true);\r\n  const [allQuestions, setAllQuestions] = useState([]);\r\n  const [allExplanations, setAllExplanations] = useState([]);\r\n  const [pieData, setPieData] = useState('Doughnut');\r\n  const [barData, setBarData] = useState('Bar');\r\n  const [displayAllQuizzes, setdisplayAllQuizzes] = useState(true);\r\n  const [displayStudentList, setdisplayStudentList] = useState(false);\r\n  const [displayStats, setdisplayStats] = useState(false);\r\n  const [actualQuiz, setactualQuiz] = useState(null);\r\n\r\n  // FIND ALL ANSWERED QUESTIONS ON PAGE LOAD\r\n  useEffect(() => {\r\n    Axios.get(\r\n      'https://neuroeducation-feedback.herokuapp.com/api/findAllAnswered'\r\n    )\r\n      .then((response) => {\r\n        setallAnswers(response.data);\r\n        setShowSpinner(false);\r\n      })\r\n      .catch(function (error) {});\r\n  }, []);\r\n\r\n  //ALTERNATE BETWEEN PIE AND DOUGHNUT CHART\r\n  const handlePieChartChange = () => {\r\n    if (pieData === 'Doughnut') {\r\n      setPieData('Pie');\r\n      // setPieTitle('Diagramme circulaire');\r\n    }\r\n    if (pieData === 'Pie') {\r\n      setPieData('Doughnut');\r\n      // setPieTitle('Graphique en anneau');\r\n    }\r\n  };\r\n  const handleBarChartChange = () => {\r\n    if (barData === 'Bar') {\r\n      setBarData('Horizontal Bar');\r\n      // setBarTitle('Graphique à barres horizontales');\r\n    }\r\n    if (barData === 'Horizontal Bar') {\r\n      setBarData('Bar');\r\n      // setBarTitle('Diagramme à bandes');\r\n    }\r\n  };\r\n\r\n  // SET SELECTED(CLICKED) QUIZ\r\n  const setActiveQuiz = (quiz, index, quiz_id) => {\r\n    setcurrentQuiz(quiz);\r\n    getStats(quiz_id);\r\n    setcurrentStudent(null);\r\n    setexplanationStats(null);\r\n    setarray(null);\r\n\r\n    Axios.get(\r\n      `https://neuroeducation-feedback.herokuapp.com/api/searchQuiz/${quiz_id}`\r\n    )\r\n      .then((response) => {\r\n        setAllQuestions(response.data.questions);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(\"An error occurred\", err.response);\r\n      });\r\n\r\n    // GET ACTUAL QUESTIONS FROM DATABASE\r\n    SearchService.searchQuiz(quiz.quiz_id)\r\n      .then((response) => {\r\n        setactualQuiz(response.data);\r\n      })\r\n      .catch((error) => {\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n          console.log(resMessage);\r\n\r\n      });\r\n  };\r\n\r\n  // RETRIEVE GROUPPED DATA FROM THE DATABASE BY SELECTED QUIZ ID\r\n  const getStats = (quiz_id) => {\r\n    Axios.get(\r\n      `https://neuroeducation-feedback.herokuapp.com/api/groupStats/${quiz_id}`\r\n    )\r\n      .then((response) => {\r\n        if (response) {\r\n          // SET GROUPPED ANSWERS \"FOR EACH STUDENT\" ARRAY\r\n          setanswersArray(response.data[0]._id.answer);\r\n          // SET GROUPPED EXPLANATIONS \"FOR EACH STUDENT\" ARRAY\r\n          setexplanationsArray(response.data[0]._id.explanation);\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  // SET SELECTED(CLICKED) STUDENT ARRAY\r\n  const setActiveStudent = (student) => {\r\n    setcurrentStudent(student);\r\n  };\r\n\r\n  // HANDLE STUDENT LIST\r\n  const handleStudentList = () => {\r\n    setdisplayAllQuizzes(false);\r\n    setdisplayStudentList(true);\r\n    setdisplayStats(false);\r\n  };\r\n\r\n  // HANDLE BACK TO QUIZ LIST\r\n  const backToQuizzes = () => {\r\n    setdisplayAllQuizzes(true);\r\n    setdisplayStudentList(false);\r\n    setdisplayStats(false);\r\n    setcurrentQuiz(null);\r\n    setcurrentStudent(null);\r\n    setexplanationStats(null);\r\n    setarray(null);\r\n  };\r\n\r\n  // MERGE ALL ANSWERS BY QUESTION NUMBER AND SET COUNT AND STATS\r\n  const stats = () => {\r\n    // MERGE ALL ANSWERS INTO AN ARRAY (arrAns)\r\n    const arrayAns = answersArray[0].map(function (value, index) {\r\n      const mergeAllStudentsByIndex = [value];\r\n      if (value) {\r\n        for (let i = 1; i < answersArray.length; i++) {\r\n          mergeAllStudentsByIndex.push(answersArray[i][index]);\r\n        }\r\n      }\r\n      return mergeAllStudentsByIndex;\r\n    });\r\n\r\n    // MERGE ALL EXPLANATIONS INTO AN ARRAY (arrExp)\r\n    const arrayExp = explanationsArray[0].map(function (explanation, index) {\r\n      const mergeAllExplanation = [explanation];\r\n      if (explanation) {\r\n        for (let i = 1; i < explanationsArray.length; i++) {\r\n          mergeAllExplanation.push(explanationsArray[i][index]);\r\n        }\r\n      }\r\n\r\n      return mergeAllExplanation;\r\n    });\r\n\r\n    // COUNT NUMBER OF OCCURRENCE OF AN ANSWER(\"Plutot Oui\", \"Non\"... etc) FOR EACH QUESTION\r\n    const countAnswers = arrayAns.map((answers, index) => {\r\n      let all = {\r\n        Oui: 0,\r\n        'Plutot Oui': 0,\r\n        'Plutot Non': 0,\r\n        Non: 0,\r\n      };\r\n      for (const answer of answers) {\r\n        all = {\r\n          ...all,\r\n          [answer]: answers.filter((a) => {\r\n            return a === answer;\r\n          }).length,\r\n        };\r\n      }\r\n      return all;\r\n    });\r\n    // SET COUNT AS A STATE\r\n    setarray(countAnswers);\r\n\r\n    // GET EXPLANATIONS OF ALL QUESTIONS FOR THE CHART DISPLAY\r\n    const labelsArray = allQuestions.map((value, index) => {\r\n      const myArray = value.question_options.map((value, index) => {\r\n        return value.options_text;\r\n      });\r\n      return myArray;\r\n    });\r\n\r\n    setAllExplanations(labelsArray);\r\n\r\n    // COUNT NUMBER OF OCCURRENCE OF AN EXPLANATION(\"a\", \"b\", \"c\"... etc) FOR EACH QUESTION\r\n    const countExplanations = arrayExp.map((array, index) => {\r\n      let all = {\r\n        a: 0,\r\n        b: 0,\r\n        c: 0,\r\n        d: 0,\r\n        e: 0,\r\n      };\r\n      for (const letter of array) {\r\n        all = {\r\n          ...all,\r\n          [letter]: array.filter((a) => {\r\n            return a === letter;\r\n          }).length,\r\n        };\r\n      }\r\n\r\n      return all;\r\n    });\r\n    // SET COUNT AS A STATE\r\n    setexplanationStats(countExplanations);\r\n    setdisplayStats(true);\r\n    setdisplayStudentList(false);\r\n    setdisplayAllQuizzes(false);\r\n  };\r\n\r\n  // RETRIEVE INTEGERS(VALUES) FOR EXPLANATIONS\r\n  const getExplanationValues = (explanation, keys) => {\r\n    let values = [];\r\n    keys.forEach((key) => {\r\n      values.push(explanation[key]);\r\n    });\r\n    return values;\r\n  };\r\n  // RETRIEVE INTEGERS(VALUES) FOR Y, MY, MN, N QUESTIONS\r\n  const getAnswerValues = (answer, keys) => {\r\n    let values = [];\r\n    keys.forEach((key) => {\r\n      values.push(answer[key]);\r\n    });\r\n    return values;\r\n  };\r\n\r\n  //RETRIEVE KEYS(LABELS) FOR CHART DATA\r\n  const getLabels = (object) => {\r\n    return Object.keys(object);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-questions\">\r\n      {showSpinner && (\r\n        <div class=\"spinner\">\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      )}\r\n      {!showSpinner && displayAllQuizzes && (\r\n        <div style={{ borderRadius: '10px' }}>\r\n          <div>\r\n            <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n              <Title data=\"Liste de toutes les réponses\" />\r\n              <div className=\"row\">\r\n                {allAnswers &&\r\n                  allAnswers.map((quiz, index) => (\r\n                    <FlippyItems\r\n                      frontSide={\r\n                        <div key={index}>\r\n                          <Card\r\n                            elevation={1}\r\n                            style={{ padding: '20px', 'margin-bottom': '10px' }}\r\n                            onMouseOver={() =>\r\n                              setActiveQuiz(quiz, index, quiz.quiz_id)\r\n                            }\r\n                          >\r\n                            <CardHeader\r\n                              avatar={\r\n                                <Avatar style={{ backgroundColor: '#4257b2' }}>\r\n                                  {quiz.quiz_id[0].toUpperCase()}\r\n                                </Avatar>\r\n                              }\r\n                              title={quiz.quiz_id}\r\n                              // subheader={note}\r\n                            />\r\n                            <CardContent>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                {quiz.quiz_title.substr(0, 27) + '...'}\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </Card>\r\n                        </div>\r\n                      }\r\n                      backSide={\r\n                        <div key={index}>\r\n                          <Card\r\n                            elevation={1}\r\n                            style={{ padding: '20px', 'margin-bottom': '10px' }}\r\n                          >\r\n                            <CardHeader\r\n                              avatar={\r\n                                <Avatar style={{ backgroundColor: '#4257b2' }}>\r\n                                  {quiz.quiz_id[0].toUpperCase()}\r\n                                </Avatar>\r\n                              }\r\n                              title={quiz.quiz_title}\r\n                            />\r\n                            <CardContent>\r\n                              <div style={{ float: 'right', color: '#4257b2' }}>\r\n                                <Tooltip title=\"Cliquez pour les statistiques\">\r\n                                  <IconButton\r\n                                    onClick={stats}\r\n                                    style={{ float: 'right', color: '#4257b2' }}\r\n                                  >\r\n                                    <EqualizerIcon />\r\n                                  </IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip title=\"Liste des étudiants\">\r\n                                  <IconButton\r\n                                    onClick={handleStudentList}\r\n                                    style={{ float: 'right', color: '#4257b2' }}\r\n                                  >\r\n                                    <FormatListNumberedIcon />\r\n                                  </IconButton>\r\n                                </Tooltip>\r\n                              </div>\r\n                            </CardContent>\r\n                          </Card>\r\n                        </div>\r\n                      }\r\n                    />\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        {currentQuiz && (displayStudentList || displayStats) ? (\r\n          <div>\r\n            <IconButton\r\n              onClick={() => backToQuizzes()}\r\n              style={{ float: 'left', color: '#4257b2' }}\r\n            >\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n            <center>\r\n              <Title\r\n                data={'Vous avez sélectionné le quiz : ' + currentQuiz.quiz_id}\r\n              />\r\n            </center>\r\n\r\n            {displayStudentList && (\r\n              <div>\r\n                <h4>{'Liste des étudiants : '}</h4>\r\n                {currentQuiz.quiz_answers &&\r\n                  currentQuiz.quiz_answers.map((students, index) => (\r\n                    <div>\r\n                      <h4 onClick={() => setActiveStudent(students)}>\r\n                        {students.student_id}\r\n                      </h4>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            )}\r\n\r\n            <div>\r\n              {currentStudent && (\r\n                <div>\r\n                  <h4>\r\n                    {'Affichage des réponses sur  : '}\r\n                    {currentStudent.student_id}\r\n                  </h4>\r\n                  {currentStudent &&\r\n                    currentStudent.student_answers.map((answers, index) => (\r\n                      <div>\r\n                        <h4>\r\n                          {answers.question_answer_id}\r\n                          {' .'}\r\n                          {answers.answer}\r\n                        </h4>\r\n                        <h4>\r\n                          {'Explication : '}\r\n                          {answers.explanation}\r\n                        </h4>\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div style={{ marginBottom: '20px' }}></div>\r\n            <Container>\r\n              {array && displayStats && (\r\n                <div>\r\n                  <Grid container spacing={3}>\r\n                    {array &&\r\n                      array.map((answer, index) => (\r\n                        <Grid item sm={12} md={6} lg={4}>\r\n                          <Card elevation={2}>\r\n                            <CardHeader\r\n                              action={\r\n                                <IconButton onClick={handlePieChartChange}>\r\n                                  <SwapHorizRounded />\r\n                                </IconButton>\r\n                              }\r\n                              title={''}\r\n                              subheader={\r\n                                actualQuiz\r\n                                  ? `Q${index + 1}. ` +\r\n                                    actualQuiz.questions[index].question_title\r\n                                  : `Question ${index + 1}`\r\n                              }\r\n                            />\r\n                            <CardContent>\r\n                              <DoughnutChart\r\n                                pieData={pieData}\r\n                                labels={getLabels(answer)}\r\n                                answerValues={getAnswerValues(\r\n                                  answer,\r\n                                  getLabels(answer)\r\n                                )}\r\n                              />\r\n                            </CardContent>\r\n                          </Card>\r\n                        </Grid>\r\n                      ))}\r\n                  </Grid>\r\n                </div>\r\n              )}\r\n\r\n              {explanationStats && (\r\n                <div>\r\n                  <Grid container spacing={3}>\r\n                    {explanationStats &&\r\n                      explanationStats.map((explanation, index) => (\r\n                        <Grid item sm={12} md={6} lg={6}>\r\n                          <Card elevation={2}>\r\n                            <CardHeader\r\n                              action={\r\n                                <IconButton onClick={handleBarChartChange}>\r\n                                  <SwapHorizRounded />\r\n                                </IconButton>\r\n                              }\r\n                              title={''}\r\n                              subheader={\r\n                                actualQuiz\r\n                                  ? `Q${index + 1}. ` +\r\n                                    actualQuiz.questions[index].question_title\r\n                                  : `Question ${index + 1}`\r\n                              }\r\n                            />\r\n                            <CardContent>\r\n                              <BarChart\r\n                                barData={barData}\r\n                                explanationArray={allExplanations[index]}\r\n                                explanationLabels={getLabels(explanation)}\r\n                                explanationValues={getExplanationValues(\r\n                                  explanation,\r\n                                  getLabels(explanation)\r\n                                )}\r\n                              />\r\n                            </CardContent>\r\n                          </Card>\r\n                        </Grid>\r\n                      ))}\r\n                  </Grid>\r\n                </div>\r\n              )}\r\n            </Container>\r\n          </div>\r\n        ) : (\r\n          <Title\r\n            data=\"Veuillez sélectionner un quiz pour afficher les réponses\"\r\n            noUnderline={true}\r\n            subHeader={true}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllAnswers;\r\n","import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n// import {FaTimes} from 'react-icons/fa'\r\nimport { Button} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\n\r\nimport FlippyItems from './Flippy';\r\n\r\n\r\nimport {Title} from './Title';\r\n\r\n\r\nconst AllQuestions = () => {\r\n    const [allQuizzes, setallQuizzes] = useState([]);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [radioOptions, setradioOptions] = useState({});\r\n    const [checkedItems, setCheckedItems] = useState([]); \r\n    const [displayQuiz, setdisplayQuiz] = useState(false);\r\n    const [displayQuizzes, setdisplayQuizzes] = useState(true)\r\n\r\n    // const [currentUser] = useState(AuthService.getCurrentUser());\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n\r\n    // LOAD ALL QUIZZES FROM DATABASE ON PAGE REFRESH AND SET RESPONSE INTO AN ARRAY\r\n    useEffect(() => {\r\n        Axios.get('https://neuroeducation-feedback.herokuapp.com/api/findAllQ').then((response) => {\r\n          setallQuizzes(response.data) \r\n          setShowSpinner(false);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    }, []);\r\n\r\n    // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index) => {\r\n        setcurrentQuiz(quiz);\r\n        setdisplayQuizzes(false);\r\n        setdisplayQuiz(true);\r\n    };\r\n\r\n    const backToQuizzes = () => {\r\n        setdisplayQuizzes(true);\r\n        setdisplayQuiz(false);\r\n    }\r\n\r\n    // RETURN CHECKED VALUE(true or false)\r\n    const checkRadioButton = (question_id, label) => {\r\n        if (!radioOptions[question_id]) {\r\n            return false;\r\n        }\r\n        return radioOptions[question_id] === label;\r\n    }\r\n\r\n    // SET RADIO BUTTON SELECTION FRO EACH QUESTION\r\n    const setradio = (id , answer) => {\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === id);\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === id).answer = answer;\r\n            setradioOptions((state) => {\r\n                return {\r\n                    ...state,\r\n                    [id] : answer\r\n                }\r\n            });\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        else{\r\n        setradioOptions((state) => {\r\n            return {\r\n                ...state,\r\n                [id] : answer\r\n            }\r\n        });\r\n\r\n        setCheckedItems([\r\n            ...checkedItems,\r\n             {\r\n                question_answer_id : id,\r\n                answer: answer,\r\n                explanation: 'no explanation'\r\n            }\r\n        ]);}\r\n    }\r\n\r\n    // SET EXPLANATION TOGETHER WITH ANSWERS AND QUESTION NUMBER\r\n    const setCheckbox = (value, checked, question_id, question_title, quiz_id) => {\r\n        let checkedArray = checkedItems.map(x => {return {...x}})\r\n        const find_question = checkedArray.find(a => a.question_answer_id === question_id);\r\n        if(find_question) {\r\n            checkedArray.find(a => a.question_answer_id === question_id).explanation = value;\r\n            setCheckedItems(checkedArray);\r\n        }\r\n        \r\n    }\r\n\r\n    // SUBMIT ANSWERS TO THE BACKEND  // DISABLED BECAUSE ADMIN MUST NOT SUBMIT\r\n    // const submitAnswers = () =>{\r\n    //     setmessage('');\r\n    //     setsuccessful(false);\r\n    //     const answers = {\r\n    //         quiz_id : currentQuiz.quiz_id,\r\n    //         quiz_title : currentQuiz.quiz,\r\n    //         quiz_answers : {\r\n    //             student_id : currentUser.message.email,\r\n    //             student_answers : checkedItems\r\n    //         }\r\n    //     }\r\n    //     Axios.post('https://neuroeducation-feedback.herokuapp.com/api/history', {\r\n    //         answers\r\n    //       }).then((res) => {\r\n    //             if(res){\r\n    //                 //   window.location.reload(false);\r\n    //                 setmessage('You submitted Quiz as Admin or Teacher... Please Delete from the answers page else Stats will be affected');\r\n    //                 setsuccessful(true);\r\n    //                 setCheckedItems([]);\r\n    //                 setradioOptions({});\r\n\r\n    //             }\r\n    //       }).catch(error => {\r\n    //             const errMessage =\r\n    //             (error.response.data.message[0].password || (error.response &&\r\n    //               error.response.data &&\r\n    //               error.response.data.message)) ||\r\n    //             error.message ||\r\n    //             error.toString();\r\n    //             console.log(errMessage);\r\n    //           setmessage(errMessage);\r\n    //             setsuccessful(false);            \r\n    //       });\r\n\r\n\r\n    // }\r\n\r\n\r\n    return (\r\n        <div >\r\n            {/* html for spinner */}\r\n            {showSpinner && <div class=\"spinner\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            }\r\n            {!showSpinner && displayQuizzes && (<div  style={{borderRadius: \"10px\", marginTop: \"10px\"}}>\r\n                    <div >      \r\n                      <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                          <Title data='Liste de quiz' />\r\n                        <div className=\"row\" >\r\n                            {displayQuizzes && allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                <div key={index} className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\" onClick= {() => setActiveQuiz(quiz, index)} style={{paddingTop: \"10px\"}}> \r\n                                    <FlippyItems\r\n                                    frontSide={\r\n                                        <Card \r\n                                        elevation={1} \r\n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\r\n                                            <CardHeader\r\n                                                  avatar={\r\n                                                      (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                          {quiz.quiz_id[0].toUpperCase()}\r\n                                                      </Avatar>)\r\n                                              }\r\n        \r\n                                                  title={quiz.quiz_id}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                    {(quiz.quiz).substr(0,27) + \"...\"}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Card> \r\n                                    }\r\n                                    backSide={\r\n                                        <Card \r\n                                        elevation={1} \r\n                                        style={{ padding: \"20px\", \"margin-bottom\": \"10px\"}}  >\r\n                                            <CardHeader\r\n                                                  avatar={\r\n                                                      (<Avatar  style={{backgroundColor: \"#4257b2\"}}>\r\n                                                          {quiz.quiz_id[0].toUpperCase()}\r\n                                                      </Avatar>)\r\n                                              }\r\n        \r\n                                                  title={quiz.quiz_id}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                                    {(quiz.quiz).substr(0,27) + \"...\"}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Card> \r\n                                    }\r\n                                    />\r\n\r\n                                </div> \r\n                            ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n            </div>)}\r\n\r\n            <div>\r\n                {(displayQuiz && currentQuiz ) && (\r\n                    <div className=\"container-questions\">\r\n                        <Button onClick={()=> backToQuizzes()}><ArrowBackIcon fontsize=\"large\" style={{color: \"#4257b2\"}}/></Button> \r\n                        <center><h4>{currentQuiz.quiz}</h4><br/></center>\r\n                        {currentQuiz.questions && currentQuiz.questions.map((questions, indexx) => (\r\n                            <div key={questions.question_id}>\r\n                                <p><strong>{questions.question_id}{'. '}{questions.question_title}</strong></p>    \r\n                                <div>\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Oui\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Oui\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Oui\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)} \r\n                                    /> Plutot Oui\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Plutot Non\"  \r\n                                        checked={checkRadioButton(questions.question_id, \"Plutot Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Plutot Non\r\n                                    <input \r\n                                        type=\"radio\" \r\n                                        value=\"Non\" \r\n                                        checked={checkRadioButton(questions.question_id, \"Non\")}  \r\n                                        onChange={(e) => setradio(questions.question_id, e.target.value)}\r\n                                    /> Non\r\n                                </div>\r\n                                {radioOptions[questions.question_id] === \"Plutot Non\"\r\n                                || radioOptions[questions.question_id] === \"Plutot Oui\"\r\n                                || radioOptions[questions.question_id] === \"Non\" ? (\r\n                                    <div>\r\n                                        {questions.question_options && questions.question_options.map((options, index) => ( \r\n                                            <div>\r\n                                                <label>\r\n                                                    <input type=\"checkbox\" value={options.options_id} \r\n                                                    checked={checkedItems[options.option_text]}  \r\n                                                    onChange={(e) => \r\n                                                        setCheckbox(e.target.value, e.target.checked, questions.question_id, questions.question_id,currentQuiz.quiz_id)\r\n                                                    }\r\n                                                    />\r\n                                                    <span>{'  '}{options.options_id}{'. '}{options.options_text}</span>\r\n                                                </label>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                ) : (<span>Aucune explication requise</span>)}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllQuestions\r\n","import React, { Component } from 'react';\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport CheckButton from 'react-validation/build/button';\r\nimport { isEmail } from 'validator';\r\n\r\nimport AuthService from '../services/auth.service';\r\nimport FormCard from './formCard';\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Ce champ est obligatoire !\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Adresse email non valide.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 50) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        Le nom d'utilisateur doit contenir entre 3 et 50 charactères.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class AdminRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeFirstname = this.onChangeFirstname.bind(this);\r\n    this.onChangeLastname = this.onChangeLastname.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\r\n\r\n    this.state = {\r\n      firstname: '',\r\n      lastname: '',\r\n      email: '',\r\n      admin: false,\r\n      teacher: false,\r\n      roles: [],\r\n      successful: false,\r\n      message: '',\r\n      noRoleError: false,\r\n      mdpTmp: '',\r\n    };\r\n  }\r\n\r\n  onChangeFirstname(e) {\r\n    this.setState({\r\n      firstname: e.target.value,\r\n    });\r\n  }\r\n  onChangeLastname(e) {\r\n    this.setState({\r\n      lastname: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeCheckbox(e) {\r\n    let target = e.target;\r\n    let value = target.checked;\r\n    let name = target.name;\r\n    this.setState({\r\n      [name]: value,\r\n      noRoleError: false,\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: '',\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (!this.state.admin && !this.state.teacher) {\r\n      return this.setState({\r\n        noRoleError: true,\r\n      });\r\n    } else {\r\n      let roles = this.state.roles;\r\n      if (this.state.admin) {\r\n        roles.push('ROLE_ADMIN');\r\n      }\r\n      if (this.state.teacher) {\r\n        roles.push('ROLE_TEACHER');\r\n      }\r\n      this.setState({\r\n        roles,\r\n      });\r\n    }\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.adminRegister(\r\n        this.state.firstname,\r\n        this.state.lastname,\r\n        this.state.email,\r\n        this.state.roles\r\n      ).then(\r\n        (response) => {\r\n          this.setState({\r\n            message: 'Compte créé avec succès',\r\n            successful: true,\r\n            mdpTmp: response.data.mdpTmp,\r\n          });\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage,\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <FormCard\r\n          content={\r\n            <div\r\n              className=\"formCardContent\"\r\n              style={{\r\n                padding: '35px',\r\n                paddingTop: '70px',\r\n                paddingBottom: '60px',\r\n              }}\r\n            >\r\n              <Form\r\n                onSubmit={this.handleRegister}\r\n                ref={(c) => {\r\n                  this.form = c;\r\n                }}\r\n              >\r\n                {!this.state.successful && (\r\n                  <div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"username\">Prenom</label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"username\"\r\n                        value={this.state.firstname}\r\n                        onChange={this.onChangeFirstname}\r\n                        required\r\n                        validations={[required, vusername]}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"username\">Nom</label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"username\"\r\n                        value={this.state.lastname}\r\n                        onChange={this.onChangeLastname}\r\n                        required\r\n                        validations={[required, vusername]}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.onChangeEmail}\r\n                        required\r\n                        validations={[required, email]}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <div className=\"form-check\">\r\n                        <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          name=\"teacher\"\r\n                          checked={this.state.teacher}\r\n                          onChange={this.onChangeCheckbox}\r\n                        />\r\n                        <label className=\"form-check-label\">Professeur</label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                        <Input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          name=\"admin\"\r\n                          checked={this.state.admin}\r\n                          onChange={this.onChangeCheckbox}\r\n                        />\r\n                        <label className=\"form-check-label\">\r\n                          Administrateur\r\n                        </label>\r\n                      </div>\r\n\r\n                      {this.state.noRoleError && (\r\n                        <div className=\"container\">\r\n                          <div className=\"itsanerror\">\r\n                            Vous devez sélectionner au moins un rôle\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <button className=\"btnn\">Créer le compte</button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {this.state.message && (\r\n                  <div className=\"form-group\">\r\n                    <div\r\n                      className={\r\n                        this.state.successful\r\n                          ? 'alert alert-success'\r\n                          : 'alert alert-danger'\r\n                      }\r\n                      role=\"alert\"\r\n                    >\r\n                      {this.state.message}\r\n\r\n                      {this.state.mdpTmp && (\r\n                        <div>\r\n                          <br></br>\r\n                          <br></br>\r\n                          Votre mot de passe temporaire est :\r\n                          {' ' + this.state.mdpTmp}\r\n                          <br></br>\r\n                          <br></br>\r\n                          Vous pourrez le modifier en vous connectant à votre\r\n                          profil\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <CheckButton\r\n                  style={{ display: 'none' }}\r\n                  ref={(c) => {\r\n                    this.checkBtn = c;\r\n                  }}\r\n                />\r\n              </Form>\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst ProtectedRoute =({ component: Component, role, ...rest })=> {\r\n        const currentUser = AuthService.getCurrentUser()\r\n        let isAuthenticated = '';\r\n        let isAuthorized = false;\r\n\r\n        if(currentUser){\r\n            isAuthenticated = currentUser.token;\r\n\r\n            role.map(roles => {\r\n                if(currentUser.message.roles.includes(roles)){\r\n                    isAuthorized = true;\r\n                } \r\n                return isAuthorized\r\n            });\r\n        }\r\n\r\n        return (isAuthenticated && (isAuthorized))? (\r\n            <Component />\r\n        ) : (\r\n            <div>\r\n            <Redirect to={{ pathname: '/home' }} />\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport '../paginate.css';\r\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\r\nimport {  Avatar, Button} from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nexport const Paginate = ({allStudents, getAllQuizzes, allQuizzes, displayQuizzes, setActiveQuiz, evolution}) => {\r\n    const [start, setStart] = useState(0)\r\n    const [end, setEnd] = useState(10)\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n\r\n    const prevStudent = () => {\r\n        setStart((old) => {\r\n            let newStart = old - 10\r\n            if(newStart < 0){\r\n                return allStudents.length - 10\r\n            }\r\n            else{\r\n                return newStart\r\n            }\r\n        })\r\n        setEnd((old) => {\r\n            let newEnd = old - 10\r\n            if((start - 10) < 0){\r\n                return allStudents.length\r\n            }\r\n            else{\r\n                return newEnd\r\n            }\r\n        })\r\n    }\r\n    const nextStudent = () => {\r\n        setStart((old) => {\r\n            let newStart = old + 10\r\n            if(newStart >= allStudents.length){\r\n                return 0\r\n            }\r\n            else{\r\n                return newStart\r\n            }\r\n        })\r\n        setEnd((old) => {\r\n            let newEnd = old + 10\r\n            if((start + 10) >= allStudents.length) {\r\n                return 10\r\n            }\r\n            else{\r\n                return newEnd\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        // {(allQuizzes && displayQuizzes) &00p0& (\r\n        //     <div >\r\n        //         <h4>{'Questionnaires auxquels ont répondu : '}</h4>\r\n        //         <h4> {currentStudent}</h4>\r\n        //         <div className={`quiz`} style={{borderRadius: \"10px\"}}>\r\n        //             <List>\r\n        //             {allQuizzes && allQuizzes.map((quiz, index) => (\r\n        //                 <ListItem button onClick= {() => setActiveQuiz(quiz, index)}>\r\n        //                     <ListItemIcon>\r\n        //                         <BookOutlined />\r\n        //                     </ListItemIcon>\r\n        //                     <ListItemText primary={\r\n        //                         <h4>\r\n        //                         {quiz.quiz_id} \r\n        //                         </h4>\r\n        //                     }/>\r\n        //                 </ListItem>\r\n        //             ))}\r\n        //             </List>\r\n        //         </div>\r\n        //     </div>\r\n        // ) }\r\n        \r\n\r\n        <div>\r\n            {allStudents && allStudents.slice(start, end).map((student, index) => (\r\n                <Accordion expanded={expanded === `panel${index + 0}`} onChange={handleChange(`panel${index + 0}`)} onClick={()=> getAllQuizzes(student.email,student.firstname +' ' +student.lastname )}>\r\n                    <AccordionSummary\r\n                        aria-controls=\"panel2a-content\"\r\n                        id=\"panel2a-header\"\r\n                        expandIcon={<ExpandMore style={{color: \"#4257b2\"}} />}\r\n                    >\r\n                        <Avatar style={{fontSize: \"0.8rem\", backgroundColor: \"#4257b2\"}}>\r\n                            {(student.firstname[0] +' ' + student.lastname[0]).toUpperCase()}\r\n                        </Avatar>\r\n                        <Typography  style={{marginLeft: \"15px\"}} variant=\"h6\">{student.firstname +' ' +student.lastname}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        {(allQuizzes && displayQuizzes) && (\r\n                            <div style={{display: \"flex\"}}>\r\n                                {allQuizzes && allQuizzes.map((quiz, index) => (\r\n                                    <Tooltip title=\"show evolution\">\r\n                                        <Chip  style={{color:\"#fff\", marginLeft: \"5px\", backgroundColor: \"hsl(205, 78%, 60%)\"}} label={quiz.quiz_id} onMouseOver= {() => setActiveQuiz(quiz, index)} onClick={()=> evolution()}/>\r\n                                    </Tooltip>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                        {(displayQuizzes === false) && (\r\n                            <Typography>Cet étudiant n'a répondu à aucun quiz</Typography>\r\n                        )}\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                // <ListItem key={student.email} button onClick={() => getAllQuizzes(student.email,student.firstname +' ' +student.lastname)}>\r\n                //     <ListItemAvatar>\r\n                //         \r\n                //     </ListItemAvatar>\r\n                //     <ListItemText primary={<h4>{student.firstname +' ' +student.lastname}</h4>}/>\r\n                // </ListItem>\r\n            ))}\r\n            <div className=\"button-container\">\r\n                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\"}} startIcon={ <FaChevronLeft />} className=\"prev-btn\" onClick={prevStudent}>\r\n                    Précédent\r\n                </Button>\r\n                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\"}} endIcon={<FaChevronRight />} className=\"next-btn\" onClick={nextStudent}>\r\n                    Suivant\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Card, CardContent, CardHeader, Grid, IconButton, Typography } from '@material-ui/core';\r\nimport LineChart from './LineChart';\r\nimport LineLabels from './LineLabels';\r\nimport SearchService from \"../services/search.service\";\r\nimport {Paginate} from './Paginate';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\n\r\n\r\n\r\nconst AllStudents = () => {\r\n    const [allStudents, setallStudents] = useState([]);\r\n    const [allQuizzes, setallQuizzes] = useState(null)\r\n    // const [message, setmessage] = useState('');\r\n    const [errorMessage, seterrorMessage] = useState('')\r\n    // const [successful, setsuccessful] = useState(false);\r\n    const [displayQuizzes, setdisplayQuizzes] = useState(null);\r\n    const [displayActiveQuiz, setdisplayActiveQuiz] = useState(false)\r\n    const [displayEvolution, setdisplayEvolution] = useState(false);\r\n    const [displayMain, setdisplayMain] = useState(true);\r\n    const [currentStudent, setcurrentStudent] = useState(null);\r\n    const [currentQuiz, setcurrentQuiz] = useState(null);\r\n    const [showSpinner, setShowSpinner] = useState(true);\r\n    const [lineArray, setLineArray] = useState([]);\r\n    const [displayLineChart, setDisplayLineChart] = useState(false);\r\n    const [actualQuiz, setactualQuiz] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get( \"https://neuroeducation-feedback.herokuapp.com/api/findAllStudents\")\r\n        .then(res => {\r\n            setallStudents(res.data);\r\n            setShowSpinner(false);\r\n        })\r\n        .catch(error => {\r\n            const resMessage =\r\n            (error.response && error.response.data && error.response.data.message) \r\n            || error.message || error.toString();\r\n  \r\n            seterrorMessage(resMessage);\r\n        });\r\n\r\n    }, [])\r\n\r\n    const getAllQuizzes = (student_id, name) => {\r\n        setcurrentQuiz(null);\r\n        setallQuizzes([]);\r\n        setdisplayQuizzes(null) \r\n        axios.get(`https://neuroeducation-feedback.herokuapp.com/api/studentQuizzes/${student_id}`).then((response) => {\r\n            if((response.data.quizzes).length ){\r\n                setallQuizzes(response.data.quizzes)\r\n                setdisplayQuizzes(true); \r\n            }\r\n            else{\r\n                setallQuizzes(null)\r\n                setdisplayQuizzes(false)  \r\n            }\r\n            setActiveStudent(name);\r\n          })\r\n          .catch(function (err) {\r\n              seterrorMessage(err.response.data.message|| err.response.data.message[0].error);\r\n          });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n      // SET SELECTED(CLICKED) QUIZ\r\n    const setActiveQuiz = (quiz, index) => {\r\n        // setdisplayActiveQuiz(true);\r\n        setcurrentQuiz(quiz);\r\n        let tempLineArray = [];\r\n        quiz.quiz_answers.forEach((quiz, index) => {\r\n            tempLineArray.push(getAllAns(quiz))\r\n        })\r\n        setLineArray(tempLineArray)\r\n\r\n        // GET ACTUAL QUESTIONS FROM DATABASE\r\n        SearchService.searchQuiz(\r\n            quiz.quiz_id,\r\n        ).then(\r\n            response => {\r\n            setactualQuiz(response.data);\r\n            })\r\n            .catch(\r\n            error => {\r\n            const resMessage =\r\n                (error.response && error.response.data && error.response.data.message) \r\n                || error.message || error.toString();\r\n\r\n            console.log(resMessage);\r\n\r\n            }\r\n        );\r\n  };\r\n\r\n    const setActiveStudent = (name) => {\r\n        setcurrentStudent(name);\r\n    };\r\n\r\n\r\n    const evolution = () => {\r\n        if(displayMain===true && displayEvolution===false){\r\n            setdisplayMain(false); \r\n            setdisplayEvolution(true);\r\n            setDisplayLineChart(true);\r\n        } \r\n        else if(displayMain===false && displayEvolution===true){\r\n            setdisplayMain(true); \r\n            setdisplayEvolution(false);\r\n            setDisplayLineChart(false);\r\n        } \r\n\r\n\r\n    }\r\n\r\n    // CREATE ARRAY CONTAINING ANSWERS OF EACH ATTEMPT\r\n    const getAllAns = quiz => {\r\n        let array = []\r\n        quiz.student_answers.forEach(answers=> {\r\n            switch(answers.answer){\r\n                case \"Non\":\r\n                    array.push(1)\r\n                    break\r\n                case \"Plutot Non\":\r\n                    array.push(2)\r\n                    break\r\n                case \"Plutot Oui\":\r\n                    array.push(3)\r\n                    break\r\n                default:\r\n                    array.push(4)\r\n                    break\r\n            }\r\n        })\r\n        return array\r\n    }\r\n\r\n    //GENERATE DATA VALUES FOR LINE CHART \r\n    const getLineData = (groupArray, index) => {\r\n        let dataArray = []\r\n        groupArray.forEach((item) => {\r\n            dataArray.push(item[index])\r\n        })\r\n        return dataArray\r\n    }\r\n\r\n \r\n \r\n\r\n    return (\r\n    \r\n        <div className=\"container-questions\">\r\n            {errorMessage ? (\r\n                <div className=\"form-group\">\r\n                    <div\r\n                    className={ \"alert alert-danger\"}\r\n                    role=\"alert\"\r\n                    >\r\n                    {errorMessage}\r\n                    </div>\r\n                </div>\r\n            ):(\r\n                <div>\r\n                    {displayMain  && <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-12\">\r\n                            <Typography\r\n                                style={{textAlign: \"center\", color:\"#4257b2\"}}\r\n                                variant=\"h5\"\r\n                            >\r\n                                {'Liste des étudiants '}\r\n                                <div className=\"underline\"></div>\r\n                            </Typography>\r\n                           \r\n                            {showSpinner && (<div class=\"spinner\">\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>)}\r\n                            {!showSpinner && (<div  class=\"quiz\" style={{borderRadius: \"10px\"}}>\r\n                                    <Paginate \r\n                                        allStudents={allStudents}\r\n                                        getAllQuizzes={getAllQuizzes}\r\n                                        allQuizzes={allQuizzes}\r\n                                        displayQuizzes={displayQuizzes}\r\n                                        setActiveQuiz={setActiveQuiz}\r\n                                        evolution={evolution}\r\n                                    />\r\n                                </div>)}\r\n\r\n                        </div>            \r\n                    </div>\r\n                    }\r\n                    <div>                        \r\n                        {displayLineChart && (\r\n                            <div>\r\n                             <IconButton  onClick={()=>evolution()} style={{float:\"left\", color:\"#4257b2\"}}>\r\n                                <ArrowBackIcon />\r\n                            </IconButton>\r\n                            <Grid container spacing={3}>\r\n                                {(lineArray.length && displayLineChart) && lineArray[0].map((attempt, index) => (\r\n                                    <Grid item md={6} sm={12} lg={4} >\r\n                                        <Card elevation={2}>\r\n                                            <CardHeader\r\n                                                title={<Typography style={{fontSize: \"1rem\"}} color=\"textSecondary\" variant=\"h6\" component=\"p\">{actualQuiz ? (`Q${index + 1}. `+actualQuiz.questions[index].question_title) : (`Question ${index + 1}`)}</Typography>}\r\n                                                subheader={<div style={{fontSize: \"0.8rem\"}}>Oui-4 Plutot Oui-3 Plutot Non-2 Non-1</div>}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <LineChart labels={LineLabels(lineArray.length)} data={getLineData(lineArray, index)} />\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                            </div>\r\n                           \r\n                        )}\r\n                    </div>    \r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllStudents\r\n","import {useState, useEffect} from 'react'\r\nimport AuthService from \"../services/auth.service\";\r\nimport FormCard from './formCard'\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\n\r\n\r\nconst VerifyAccount = ({match: { params }} ) => {\r\n    const [message, setmessage] = useState('');\r\n    const history = useHistory();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        AuthService.verifyAccount(params.token)\r\n        .then(response=>{\r\n            setmessage(response.data.message);\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n            setmessage(error.response.data.message|| error.response.data);\r\n        })\r\n    }, [params.token])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <FormCard\r\n                content={\r\n                  <div className=\"formCardContent\" style={{padding: \"35px\", paddingTop:\"50px\", paddingBottom:\"60px\", clear: \"both\" }}>\r\n                      <p>{message}</p>\r\n                      <button\r\n                    onClick={() =>  history.push({\r\n                      pathname: \"/login\",\r\n                    })} \r\n                    className=\"btnn\" style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\",\"font-size\" : \"12px\", width: \"44%\"}}\r\n                    >\r\n                      SE CONNECTER\r\n                      </button> \r\n                  </div>\r\n                }/>\r\n              </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerifyAccount\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\r\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n\r\nconst AdminDashboard = () => {\r\n    let history = useHistory(); \r\n    const classes = useStyles();\r\n\r\n\r\n    const routeChange = (path, item) =>{\r\n    let newPath = path;\r\n    if(item===\"DATABASE\"){\r\n        return window.location.href = newPath;\r\n    }\r\n    history.push(newPath);\r\n  }\r\n\r\n  const childRoute = route =>{\r\n    if(route===\"USER\"){\r\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/User'\r\n    }\r\n    else if(route===\"QUIZZES\"){\r\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/Quiz'\r\n    }\r\n    else if(route===\"HISTORY\"){\r\n        window.location.href = 'https://neuroeducation-feedback.herokuapp.com/admin/resources/history'\r\n    }\r\n  }\r\n\r\n  const dashboardArray = [\r\n      {\r\n        title: \"AJOUTER UN COMPTE\",\r\n        path: '/adminRegister',\r\n        children: [],\r\n        message: \"Ajouter un nouvel administrateur ou enseignant dans la base de données.\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <SupervisorAccountIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n\r\n    {\r\n        title: \"TOUS LES QUIZZ\",\r\n        path: '/questions',\r\n        children: [],\r\n        message: \"Une liste de tous les quiz de la base de données. Visualisez-les tous en quelques clics\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <AssignmentIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },    \r\n    {\r\n        title: \"PAGE RÉPONSES\",\r\n        path: '/answers',\r\n        children: [],\r\n        message: \"Un historique de toutes les réponses des élèves dans la base de données. Tout visualiser en quelques clics\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <RecentActorsIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n    {\r\n        title: \"EVOLUTION\",\r\n        path: '/students',\r\n        children: [],\r\n        message: \"En tant qu'administrateur ou enseignant, vous pouvez visualiser les progrès de tous les élèves en quelques clics.\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <TrackChangesIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n    // {\r\n    //     title: \"DASHBOARD\",\r\n    //     path: '/dashboard',\r\n    //     children: [],\r\n    //     message: \"A link to the admin dashboard where you can see everything\",\r\n    //     actions : {\r\n    //         one: \"Share\",\r\n    //         two: \"Learn More\"\r\n    //     },\r\n    //     icon: <DashboardIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    // },\r\n    {\r\n        title: \"BASE DE DONNEES\",\r\n        path: 'https://neuroeducation-feedback.herokuapp.com/admin/',\r\n        children: ['USER', 'QUIZZES', 'HISTORY'],\r\n        message: \"Il s'agit d'une page spéciale pour l'administrateur. Pour la gestion de la base de données.\",\r\n        actions : {\r\n            one: \"Share\",\r\n            two: \"Learn More\"\r\n        },\r\n        icon: <StorageIcon style={{color:\"#4257b2\",  float:\"right\"}} fontSize=\"large\" />\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n        <div className=\"col-xs-12 col-sm-12 col-md-12\" style={{paddingTop: \"60px\"}}>\r\n            <div className=\"row\">\r\n                {dashboardArray && dashboardArray.map(item => (\r\n                    <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-4\"> \r\n                        <Card className={classes.root} style={{height:235, padding: \"20px\", \"margin-bottom\": \"10px\"}}>\r\n                            <CardActionArea>\r\n                                <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n                                    <Typography variant=\"h6\" style={{color:\"#4257b2\"}}>{item.title} <div className=\"underlinee\"></div></Typography>\r\n                                    {item.icon}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {item.message}\r\n                                </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions >\r\n                                {item.title=== ( \"BASE DE DONNEES\") ? (\"\") : \r\n                                <Button size=\"small\" style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\"}} onClick={()=>routeChange(item.path, item.title)}>\r\n                                GO TO\r\n                                </Button>\r\n                                }\r\n\r\n                                {item.children && item.children.map(child=> (\r\n                                    <Button \r\n                                    size=\"small\" \r\n                                    style={{backgroundColor: \"transparent\", color: \"#4257b2\", border: \"1px solid #4257b2\", width: \"45%\"}} \r\n                                    onClick={()=>childRoute(child)}>\r\n                                        {child}\r\n                                    </Button>\r\n                                 ))\r\n                                }\r\n                            </CardActions>\r\n                        </Card>\r\n                    </div>\r\n                ))\r\n   }\r\n            </div>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import React from 'react';\r\nimport { Link} from \"react-router-dom\";\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n// import HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n      // style={{background:\"#e6e6d5\"}}\r\n    >\r\n\r\n    <List style={{\"paddingTop\": \"30px\", background: \"#4257b2\"}}>\r\n        <ListItem button key={\"home\"} style={{color: 'white'}}>\r\n            <ListItemIcon> <MenuIcon style={{color: 'white'}}fontsize=\"large\"/></ListItemIcon>\r\n            <ListItemText primary={\"MENU\"} />   \r\n          </ListItem>\r\n \r\n      </List>\r\n      <List >\r\n        {props.lists && (props.lists).map((text, index) => (\r\n         <Link to={text.link} style={{color: '#4257b2', textDecoration: 'none'}}>   \r\n          <ListItem button key={text.title}>\r\n            <ListItemIcon>{text.icon}</ListItemIcon>\r\n            <ListItemText primary={text.title} />   \r\n          </ListItem>\r\n         </Link> \r\n        ))}\r\n      </List>\r\n      {/* <Divider /> */}\r\n      <List style={{position: \"absolute\",bottom: 0}}>\r\n        {props.actions.map((text, index) => (\r\n         <Link to={text.link} onClick={text.onclick} style={{color: '#4257b2', textDecoration: 'none'}}>   \r\n            <ListItem button key={text.title}>\r\n                <ListItemIcon>{text.icon}</ListItemIcon>\r\n                <ListItemText primary={text.title} />   \r\n            </ListItem>\r\n        </Link>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div >\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}><MenuIcon style={{color:\"white\",  float:\"left\"}} fontSize=\"large\"></MenuIcon></Button>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)} style={{background:\"#e6e6d5\"}}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nimport AuthService from './services/auth.service';\r\n\r\nimport Login from './components/login.component';\r\nimport Register from './components/register.component';\r\nimport Home from './components/home.component';\r\nimport Home2 from './components/home2.component';\r\nimport Profile from './components/profile.component';\r\nimport BoardUser from './components/board-user.component';\r\nimport BoardAdmin from './components/board-admin.component';\r\nimport PostSubmitForm from './components/postSubmitForm.component';\r\nimport AllAnswers from './components/all-answers.component';\r\nimport AllQuestions from './components/allquestions.component';\r\nimport AdminRegister from './components/admin-register.component';\r\nimport { Button } from '@material-ui/core';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport ProtectedRoute from './components/protected-routes.component';\r\nimport AllStudents from './components/all-students.component';\r\nimport VerifyAccount from './components/verify-account.component';\r\nimport AdminDashboard from './components/Admin/admin-dashboard';\r\nimport TemporaryDrawer from './components/navbar';\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#DCDCDC',\r\n    },\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n    this.moveToProfile = this.moveToProfile.bind(this);\r\n\r\n    this.state = {\r\n      showAdminBoard: false,\r\n      showTeacherBoard: false,\r\n      currentUser: undefined,\r\n      admin: ['ROLE_ADMIN'],\r\n      adminTeacher: ['ROLE_ADMIN', 'ROLE_TEACHER'],\r\n      allUsers: ['ROLE_ADMIN', 'ROLE_TEACHER', 'ROLE_STUDENT'],\r\n      studentAdmin: ['ROLE_STUDENT', 'ROLE_ADMIN'],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showAdminBoard: user.message.roles.includes('ROLE_ADMIN'),\r\n        showTeacherBoard: user.message.roles.includes('ROLE_TEACHER'),\r\n        navList: [\r\n          user &&\r\n            !user.message.roles.includes('ROLE_TEACHER') && {\r\n              title: 'Utilisateur',\r\n              link: '/user',\r\n              icon: (\r\n                <FindInPageIcon\r\n                  style={{ color: '#4257b2', float: 'right' }}\r\n                  fontSize=\"large\"\r\n                />\r\n              ),\r\n            },\r\n          (user.message.roles.includes('ROLE_ADMIN') ||\r\n            user.message.roles.includes('ROLE_TEACHER')) && {\r\n            title: 'Ajouter/Modifier un quiz',\r\n            link: '/addQuiz',\r\n            icon: (\r\n              <AddBoxIcon\r\n                style={{ color: '#4257b2', float: 'right' }}\r\n                fontSize=\"large\"\r\n              />\r\n            ),\r\n          },\r\n          (user.message.roles.includes('ROLE_ADMIN') ||\r\n            user.message.roles.includes('ROLE_TEACHER')) && {\r\n            title: 'Page Questions',\r\n            link: '/questions',\r\n            icon: (\r\n              <SupervisorAccountIcon\r\n                style={{ color: '#4257b2', float: 'right' }}\r\n                fontSize=\"large\"\r\n              />\r\n            ),\r\n          },\r\n          (user.message.roles.includes('ROLE_ADMIN') ||\r\n            user.message.roles.includes('ROLE_TEACHER')) && {\r\n            title: 'Page Reponses',\r\n            link: '/answers',\r\n            icon: (\r\n              <AssignmentIcon\r\n                style={{ color: '#4257b2', float: 'right' }}\r\n                fontSize=\"large\"\r\n              />\r\n            ),\r\n          },\r\n          (user.message.roles.includes('ROLE_ADMIN') ||\r\n            user.message.roles.includes('ROLE_TEACHER')) && {\r\n            title: 'Page Etudiants',\r\n            link: '/students',\r\n            icon: (\r\n              <RecentActorsIcon\r\n                style={{ color: '#4257b2', float: 'right' }}\r\n                fontSize=\"large\"\r\n              />\r\n            ),\r\n          },\r\n          user.message.roles.includes('ROLE_ADMIN') && {\r\n            title: 'Tableau de bord administrateur',\r\n            link: '/dashboard',\r\n            icon: (\r\n              <DashboardIcon\r\n                style={{ color: '#4257b2', float: 'right' }}\r\n                fontSize=\"large\"\r\n              />\r\n            ),\r\n          },\r\n        ],\r\n        actions: [\r\n          user && {\r\n            title: user.message.firstname,\r\n            link: '/profile',\r\n            onclick: '',\r\n            icon: (\r\n              <AccountCircleIcon\r\n                style={{ color: '#4257b2', float: 'right' }}\r\n                fontSize=\"large\"\r\n              />\r\n            ),\r\n          },\r\n          user && {\r\n            title: 'Deconnexion',\r\n            link: '/home',\r\n            onclick: this.logOut,\r\n            icon: (\r\n              <ExitToAppIcon\r\n                style={{ color: '#4257b2', float: 'right' }}\r\n                fontSize=\"large\"\r\n              />\r\n            ),\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n    this.setState({\r\n      currentUser: undefined,\r\n      showAdminBoard: false,\r\n      showTeacherBoard: false,\r\n    });\r\n    if (!this.state.currentUser) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n  }\r\n\r\n  handleClick = (event) => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget\r\n    })\r\n  };\r\n\r\n  handleClose = (event) => {\r\n    this.setState({\r\n      anchorEl: null\r\n    })\r\n  };\r\n\r\n  moveToProfile = () => {\r\n    if(this.state.currentUser){\r\n      console.log('kwaku')\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n    // return <div>Please login Again</div> \r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentUser,\r\n      admin,\r\n      adminTeacher,\r\n      allUsers,\r\n      studentAdmin,\r\n      navList,\r\n    } = this.state;\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div>\r\n          <nav\r\n            className=\"navbar navbar-expand navbar-dark \"\r\n            style={{ background: '#4257b2' }}\r\n          >\r\n            {currentUser && (\r\n              <TemporaryDrawer\r\n                lists={navList}\r\n                actions={this.state.actions}\r\n              ></TemporaryDrawer>\r\n            )}\r\n\r\n            <Link to={'/'} className=\"navbar-brand\">\r\n              Outsmarted\r\n            </Link>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  {/* <Link to={'/profile'} className=\"nav-link\">\r\n                    <Button color=\"primary\" style={{ textTransform: 'none' }}>\r\n                      <AccountCircleIcon\r\n                        style={{ color: 'white', float: 'right' }}\r\n                        fontSize=\"large\"\r\n                      />\r\n                      {currentUser.message.firstname}\r\n                    </Button>\r\n                  </Link> */}\r\n\r\n                  <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.handleClick} color=\"primary\">\r\n                    <AccountCircleIcon\r\n                      style={{ color: 'white', float: 'right' }}\r\n                      fontSize=\"large\"\r\n                    />\r\n                    {currentUser.message.firstname}\r\n                  </Button>\r\n                  <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={this.state.anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(this.state.anchorEl)}\r\n                    onClose={this.handleClose}\r\n                    className=\"menu-background\" \r\n                  >\r\n                    <MenuItem  onClick={this.moveToProfile} style={{color:'#4257b2', fontWeight: \"bold\", fontFamily: \"'Roboto', 'Poppins', sans-serif\"}}>Profile</MenuItem>\r\n                    <MenuItem onClick={this.logOut} style={{color:'#4257b2', fontWeight: \"bold\", fontFamily: \"'Roboto', 'Poppins', sans-serif\"}}>Deconnexion</MenuItem>\r\n                  </Menu>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={'/login'} className=\"nav-link\">\r\n                    <Button color=\"primary\" style={{ textTransform: 'none' }}>\r\n                      Se Connecter\r\n                    </Button>\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <Link to={'/register'} className=\"nav-link\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      style={{ textTransform: 'none', font: 'Robotto' }}\r\n                    >\r\n                      Créer un Compte\r\n                    </Button>\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            )}\r\n          </nav>\r\n\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home2} />\r\n              <Route exact path=\"/home\" component={Home2} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route\r\n                exact\r\n                path=\"/verifyAccount/:token\"\r\n                component={VerifyAccount}\r\n              />\r\n              <Route exact path=\"/postSubmitForm\" component={PostSubmitForm} />\r\n              <ProtectedRoute\r\n                exact\r\n                path=\"/adminRegister\"\r\n                component={AdminRegister}\r\n                role={admin}\r\n              />\r\n              <ProtectedRoute\r\n                exact\r\n                path=\"/profile\"\r\n                component={Profile}\r\n                role={allUsers}\r\n              />\r\n              <ProtectedRoute\r\n                exact\r\n                path=\"/user\"\r\n                component={BoardUser}\r\n                role={studentAdmin}\r\n              />\r\n              <ProtectedRoute\r\n                exact\r\n                path=\"/questions\"\r\n                component={AllQuestions}\r\n                role={adminTeacher}\r\n              />\r\n              <ProtectedRoute\r\n                exact\r\n                path=\"/answers\"\r\n                component={AllAnswers}\r\n                role={adminTeacher}\r\n              />\r\n              <ProtectedRoute\r\n                exact\r\n                path=\"/students\"\r\n                component={AllStudents}\r\n                role={allUsers}\r\n              />\r\n              <ProtectedRoute\r\n                exact\r\n                path=\"/addQuiz\"\r\n                component={BoardAdmin}\r\n                role={adminTeacher}\r\n              />\r\n              <ProtectedRoute\r\n                exact\r\n                path=\"/dashboard\"\r\n                component={AdminDashboard}\r\n                role={admin}\r\n              />\r\n              <ProtectedRoute component={Home} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// serviceWorker.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}